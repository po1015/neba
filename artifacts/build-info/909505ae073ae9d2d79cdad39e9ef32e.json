{"id":"909505ae073ae9d2d79cdad39e9ef32e","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {PausableUpgradeable} from \"../../../utils/PausableUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\n    function __ERC20Pausable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {EIP712Upgradeable} from \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport {NoncesUpgradeable} from \"../../../utils/NoncesUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20Permit, EIP712Upgradeable, NoncesUpgradeable {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, NoncesUpgradeable) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {IERC5267} from \"@openzeppelin/contracts/interfaces/IERC5267.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator\n * each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage.\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267 {\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.EIP712\n    struct EIP712Storage {\n        /// @custom:oz-renamed-from _HASHED_NAME\n        bytes32 _hashedName;\n        /// @custom:oz-renamed-from _HASHED_VERSION\n        bytes32 _hashedVersion;\n\n        string _name;\n        string _version;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.EIP712\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant EIP712StorageLocation = 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100;\n\n    function _getEIP712Storage() private pure returns (EIP712Storage storage $) {\n        assembly {\n            $.slot := EIP712StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        EIP712Storage storage $ = _getEIP712Storage();\n        $._name = name;\n        $._version = version;\n\n        // Reset prior values in storage if upgrading\n        $._hashedName = 0;\n        $._hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        EIP712Storage storage $ = _getEIP712Storage();\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require($._hashedName == 0 && $._hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = $._hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = $._hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract NoncesUpgradeable is Initializable {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.Nonces\n    struct NoncesStorage {\n        mapping(address account => uint256) _nonces;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Nonces\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant NoncesStorageLocation = 0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00;\n\n    function _getNoncesStorage() private pure returns (NoncesStorage storage $) {\n        assembly {\n            $.slot := NoncesStorageLocation\n        }\n    }\n\n    function __Nonces_init() internal onlyInitializing {\n    }\n\n    function __Nonces_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        return $._nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return $._nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\n\npragma solidity >=0.4.11;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/CircuitBreaker.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport \"./interfaces/ICircuitBreaker.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\r\n\r\n/**\r\n * @title CircuitBreaker\r\n * @dev Advanced circuit breaker implementation with anomaly detection\r\n * @notice This contract monitors transfer patterns and can trigger circuit breakers\r\n */\r\ncontract CircuitBreaker is ICircuitBreaker, AccessControlUpgradeable, PausableUpgradeable {\r\n    \r\n    // ============ Constants ============\r\n    \r\n    bytes32 public constant CIRCUIT_BREAKER_ROLE = keccak256(\"CIRCUIT_BREAKER_ROLE\");\r\n    \r\n    // ============ State Variables ============\r\n    \r\n    bool public isCircuitBreakerActive;\r\n    string public activationReason;\r\n    uint256 public activationTime;\r\n    \r\n    // Volume-based circuit breaker\r\n    uint256 public maxDailyVolume;\r\n    uint256 public maxHourlyVolume;\r\n    uint256 public maxSingleTransfer;\r\n    \r\n    // Velocity-based circuit breaker\r\n    uint256 public maxTransfersPerHour;\r\n    uint256 public maxTransfersPerDay;\r\n    \r\n    // Anomaly detection\r\n    uint256 public maxFailedAttempts;\r\n    uint256 public failedAttemptWindow;\r\n    \r\n    // Time-based auto-reset\r\n    uint256 public autoResetInterval;\r\n    uint256 public lastResetTime;\r\n    \r\n    // Tracking variables\r\n    mapping(uint256 => uint256) public dailyVolume;\r\n    mapping(uint256 => uint256) public hourlyVolume;\r\n    mapping(uint256 => uint256) public hourlyTransferCount;\r\n    mapping(uint256 => uint256) public dailyTransferCount;\r\n    mapping(address => uint256) public failedAttempts;\r\n    mapping(address => uint256) public lastFailedAttempt;\r\n    \r\n    // ============ Events ============\r\n    \r\n    event CircuitBreakerActivated(string reason, uint256 timestamp);\r\n    event CircuitBreakerDeactivated(uint256 timestamp);\r\n    event VolumeLimitExceededEvent(uint256 limit, uint256 actual, string period);\r\n    event VelocityLimitExceededEvent(uint256 limit, uint256 actual, string period);\r\n    event FailedAttemptsExceededEvent(address account, uint256 attempts);\r\n    event AutoResetTriggered(uint256 timestamp);\r\n    \r\n    // ============ Errors ============\r\n    \r\n    error CircuitBreakerActive();\r\n    error VolumeLimitExceeded();\r\n    error VelocityLimitExceeded();\r\n    error FailedAttemptsExceeded();\r\n    error InvalidParameters();\r\n    error UnauthorizedCaller();\r\n    \r\n    // ============ Initialization ============\r\n    \r\n    function initialize(\r\n        address admin,\r\n        uint256 _maxDailyVolume,\r\n        uint256 _maxHourlyVolume,\r\n        uint256 _maxSingleTransfer,\r\n        uint256 _maxTransfersPerHour,\r\n        uint256 _maxTransfersPerDay,\r\n        uint256 _maxFailedAttempts,\r\n        uint256 _failedAttemptWindow,\r\n        uint256 _autoResetInterval\r\n    ) public initializer {\r\n        __AccessControl_init();\r\n        __Pausable_init();\r\n        \r\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\r\n        _grantRole(CIRCUIT_BREAKER_ROLE, admin);\r\n        \r\n        maxDailyVolume = _maxDailyVolume;\r\n        maxHourlyVolume = _maxHourlyVolume;\r\n        maxSingleTransfer = _maxSingleTransfer;\r\n        maxTransfersPerHour = _maxTransfersPerHour;\r\n        maxTransfersPerDay = _maxTransfersPerDay;\r\n        maxFailedAttempts = _maxFailedAttempts;\r\n        failedAttemptWindow = _failedAttemptWindow;\r\n        autoResetInterval = _autoResetInterval;\r\n        \r\n        lastResetTime = block.timestamp;\r\n    }\r\n    \r\n    // ============ Circuit Breaker Logic ============\r\n    \r\n    \r\n    /**\r\n     * @notice Record a successful transfer\r\n     */\r\n    function recordTransfer(address from, address /* to */, uint256 amount) external {\r\n        uint256 currentDay = block.timestamp / 1 days;\r\n        uint256 currentHour = block.timestamp / 1 hours;\r\n        \r\n        dailyVolume[currentDay] += amount;\r\n        hourlyVolume[currentHour] += amount;\r\n        hourlyTransferCount[currentHour]++;\r\n        dailyTransferCount[currentDay]++;\r\n        \r\n        // Reset failed attempts on successful transfer\r\n        failedAttempts[from] = 0;\r\n    }\r\n    \r\n    /**\r\n     * @notice Record a failed transfer attempt\r\n     */\r\n    function recordFailedAttempt(address account) external {\r\n        if (block.timestamp - lastFailedAttempt[account] >= failedAttemptWindow) {\r\n            failedAttempts[account] = 1;\r\n        } else {\r\n            failedAttempts[account]++;\r\n        }\r\n        \r\n        lastFailedAttempt[account] = block.timestamp;\r\n        \r\n        if (failedAttempts[account] >= maxFailedAttempts) {\r\n            _activateCircuitBreaker(\"Failed attempts exceeded\");\r\n            emit FailedAttemptsExceededEvent(account, failedAttempts[account]);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @notice Activate circuit breaker\r\n     */\r\n    function activateCircuitBreaker(string calldata reason) external onlyRole(CIRCUIT_BREAKER_ROLE) {\r\n        _activateCircuitBreaker(reason);\r\n    }\r\n    \r\n    /**\r\n     * @notice Deactivate circuit breaker\r\n     */\r\n    function deactivateCircuitBreaker() external onlyRole(CIRCUIT_BREAKER_ROLE) {\r\n        isCircuitBreakerActive = false;\r\n        activationReason = \"\";\r\n        activationTime = 0;\r\n        emit CircuitBreakerDeactivated(block.timestamp);\r\n    }\r\n    \r\n    /**\r\n     * @notice Auto-reset circuit breaker if interval has passed\r\n     */\r\n    function autoReset() external {\r\n        if (block.timestamp >= lastResetTime + autoResetInterval) {\r\n            isCircuitBreakerActive = false;\r\n            activationReason = \"\";\r\n            activationTime = 0;\r\n            lastResetTime = block.timestamp;\r\n            \r\n            // Reset tracking variables\r\n            uint256 currentDay = block.timestamp / 1 days;\r\n            uint256 currentHour = block.timestamp / 1 hours;\r\n            \r\n            dailyVolume[currentDay] = 0;\r\n            hourlyVolume[currentHour] = 0;\r\n            hourlyTransferCount[currentHour] = 0;\r\n            dailyTransferCount[currentDay] = 0;\r\n            \r\n            emit AutoResetTriggered(block.timestamp);\r\n        }\r\n    }\r\n    \r\n    // ============ Internal Functions ============\r\n    \r\n    function _activateCircuitBreaker(string memory reason) internal {\r\n        isCircuitBreakerActive = true;\r\n        activationReason = reason;\r\n        activationTime = block.timestamp;\r\n        emit CircuitBreakerActivated(reason, block.timestamp);\r\n    }\r\n    \r\n    // ============ Interface Functions ============\r\n    \r\n    /**\r\n     * @notice Check if a transfer should be allowed based on circuit breaker rules\r\n     * @param amount The amount of tokens to transfer\r\n     */\r\n    function checkTransfer(address /* from */, address /* to */, uint256 amount) external view override {\r\n        if (isCircuitBreakerActive) {\r\n            revert(\"Circuit breaker is active\");\r\n        }\r\n        \r\n        // Check single transfer limit\r\n        if (amount > maxSingleTransfer) {\r\n            revert(\"Transfer amount exceeds single transfer limit\");\r\n        }\r\n        \r\n        uint256 currentDay = block.timestamp / 1 days;\r\n        uint256 currentHour = block.timestamp / 1 hours;\r\n        \r\n        // Check daily volume limit\r\n        if (dailyVolume[currentDay] + amount > maxDailyVolume) {\r\n            revert(\"Transfer would exceed daily volume limit\");\r\n        }\r\n        \r\n        // Check hourly volume limit\r\n        if (hourlyVolume[currentHour] + amount > maxHourlyVolume) {\r\n            revert(\"Transfer would exceed hourly volume limit\");\r\n        }\r\n        \r\n        // Check daily transfer count limit\r\n        if (dailyTransferCount[currentDay] >= maxTransfersPerDay) {\r\n            revert(\"Daily transfer count limit exceeded\");\r\n        }\r\n        \r\n        // Check hourly transfer count limit\r\n        if (hourlyTransferCount[currentHour] >= maxTransfersPerHour) {\r\n            revert(\"Hourly transfer count limit exceeded\");\r\n        }\r\n    }\r\n    \r\n    function isActive() external view override returns (bool) {\r\n        return isCircuitBreakerActive;\r\n    }\r\n    \r\n    function getActivationReason() external view override returns (string memory) {\r\n        return activationReason;\r\n    }\r\n    \r\n    function getCurrentDailyVolume() external view returns (uint256) {\r\n        uint256 currentDay = block.timestamp / 1 days;\r\n        return dailyVolume[currentDay];\r\n    }\r\n    \r\n    function getCurrentHourlyVolume() external view returns (uint256) {\r\n        uint256 currentHour = block.timestamp / 1 hours;\r\n        return hourlyVolume[currentHour];\r\n    }\r\n    \r\n    function getCurrentHourlyTransferCount() external view returns (uint256) {\r\n        uint256 currentHour = block.timestamp / 1 hours;\r\n        return hourlyTransferCount[currentHour];\r\n    }\r\n    \r\n    function getCurrentDailyTransferCount() external view returns (uint256) {\r\n        uint256 currentDay = block.timestamp / 1 days;\r\n        return dailyTransferCount[currentDay];\r\n    }\r\n    \r\n    // ============ Admin Functions ============\r\n    \r\n    function updateLimits(\r\n        uint256 _maxDailyVolume,\r\n        uint256 _maxHourlyVolume,\r\n        uint256 _maxSingleTransfer,\r\n        uint256 _maxTransfersPerHour,\r\n        uint256 _maxTransfersPerDay,\r\n        uint256 _maxFailedAttempts,\r\n        uint256 _failedAttemptWindow,\r\n        uint256 _autoResetInterval\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        maxDailyVolume = _maxDailyVolume;\r\n        maxHourlyVolume = _maxHourlyVolume;\r\n        maxSingleTransfer = _maxSingleTransfer;\r\n        maxTransfersPerHour = _maxTransfersPerHour;\r\n        maxTransfersPerDay = _maxTransfersPerDay;\r\n        maxFailedAttempts = _maxFailedAttempts;\r\n        failedAttemptWindow = _failedAttemptWindow;\r\n        autoResetInterval = _autoResetInterval;\r\n    }\r\n}\r\n"},"contracts/interfaces/ICircuitBreaker.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\n/**\r\n * @title ICircuitBreaker\r\n * @dev Interface for circuit breaker functionality\r\n * @notice This interface provides methods for checking transfers against circuit breaker rules\r\n */\r\ninterface ICircuitBreaker {\r\n    /**\r\n     * @notice Check if a transfer should be allowed based on circuit breaker rules\r\n     * @param from The address tokens are transferred from\r\n     * @param to The address tokens are transferred to\r\n     * @param amount The amount of tokens to transfer\r\n     */\r\n    function checkTransfer(address from, address to, uint256 amount) external view;\r\n    \r\n    /**\r\n     * @notice Get the current circuit breaker state\r\n     * @return isActive Whether the circuit breaker is currently active\r\n     */\r\n    function isActive() external view returns (bool isActive);\r\n    \r\n    /**\r\n     * @notice Get the reason for circuit breaker activation\r\n     * @return reason The reason the circuit breaker was activated\r\n     */\r\n    function getActivationReason() external view returns (string memory reason);\r\n}\r\n"},"contracts/interfaces/ITransferHook.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\n/**\r\n * @title ITransferHook\r\n * @dev Interface for transfer hooks that can be called before and after transfers\r\n * @notice This interface allows for custom logic to be executed during token transfers\r\n */\r\ninterface ITransferHook {\r\n    /**\r\n     * @notice Called before a transfer is executed\r\n     * @param from The address tokens are transferred from\r\n     * @param to The address tokens are transferred to\r\n     * @param amount The amount of tokens to transfer\r\n     */\r\n    function beforeTransfer(address from, address to, uint256 amount) external;\r\n    \r\n    /**\r\n     * @notice Called after a transfer is executed\r\n     * @param from The address tokens were transferred from\r\n     * @param to The address tokens were transferred to\r\n     * @param amount The amount of tokens transferred\r\n     */\r\n    function afterTransfer(address from, address to, uint256 amount) external;\r\n}\r\n"},"contracts/NEBA.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\r\nimport \"./interfaces/ITransferHook.sol\";\r\nimport \"./interfaces/ICircuitBreaker.sol\";\r\n\r\n/**\r\n * @title NEBA Token\r\n * @dev Phase 1 implementation of NEBA Token with hardened security, upgradability, and compliance features\r\n * @author NEBA Development Team\r\n * @notice This contract implements ERC-20 with additional security, compliance, and governance features\r\n */\r\ncontract NEBA is \r\n    ERC20Upgradeable,\r\n    ERC20PausableUpgradeable,\r\n    AccessControlUpgradeable,\r\n    ERC20PermitUpgradeable,\r\n    UUPSUpgradeable,\r\n    ReentrancyGuardUpgradeable\r\n    // IERC1404 removed - will be implemented in V2\r\n{\r\n\r\n    // ============ Constants ============\r\n    \r\n    /// @notice Maximum total supply: 1 billion tokens\r\n    uint256 public constant MAX_SUPPLY = 1_000_000_000 * 10**18;\r\n    \r\n    /// @notice Token name\r\n    string public constant TOKEN_NAME = \"NEBA Token\";\r\n    \r\n    /// @notice Token symbol\r\n    string public constant TOKEN_SYMBOL = \"$NEBA\";\r\n    \r\n    /// @notice Token decimals\r\n    uint8 public constant TOKEN_DECIMALS = 18;\r\n\r\n    // ============ Roles ============\r\n    \r\n    /// @notice Role for upgrading the contract\r\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\r\n    \r\n    /// @notice Role for the Multisig. Has full control: Can pause AND unpause.\r\n    bytes32 public constant ADMIN_PAUSER_ROLE = keccak256(\"ADMIN_PAUSER_ROLE\");\r\n    \r\n    /// @notice Role for automated bots (Keepers/Sentinels). Has limited control: Can ONLY pause.\r\n    bytes32 public constant BOT_PAUSER_ROLE = keccak256(\"BOT_PAUSER_ROLE\");\r\n    \r\n    /// @notice Role for governance unpausing (unpause only, through Timelock)\r\n    bytes32 public constant GOVERNANCE_UNPAUSER_ROLE = keccak256(\"GOVERNANCE_UNPAUSER_ROLE\");\r\n    \r\n    /// @notice Role for emergency guardian (pause only, immediate)\r\n    bytes32 public constant EMERGENCY_GUARDIAN_ROLE = keccak256(\"EMERGENCY_GUARDIAN_ROLE\");\r\n    \r\n    /// @notice Role for managing blocklist\r\n    bytes32 public constant BLOCKLIST_MANAGER_ROLE = keccak256(\"BLOCKLIST_MANAGER_ROLE\");\r\n    \r\n    /// @notice Role for managing whitelist\r\n    bytes32 public constant WHITELIST_MANAGER_ROLE = keccak256(\"WHITELIST_MANAGER_ROLE\");\r\n    \r\n    /// @notice Role for circuit breaker management\r\n    bytes32 public constant CIRCUIT_BREAKER_ROLE = keccak256(\"CIRCUIT_BREAKER_ROLE\");\r\n    \r\n    /// @notice Role for parameter management\r\n    bytes32 public constant PARAM_MANAGER_ROLE = keccak256(\"PARAM_MANAGER_ROLE\");\r\n    \r\n    /// @notice Role for financial operations\r\n    bytes32 public constant FINANCE_ROLE = keccak256(\"FINANCE_ROLE\");\r\n    \r\n    /// @notice Role for snapshot management\r\n    bytes32 public constant SNAPSHOT_ROLE = keccak256(\"SNAPSHOT_ROLE\");\r\n\r\n    // ============ State Variables ============\r\n    \r\n    /// @notice Treasury address (Gnosis Safe Multisig)\r\n    address public treasury;\r\n    \r\n    /// @notice Blocklist mapping for restricted addresses\r\n    mapping(address => bool) public blocklist;\r\n    \r\n    /// @notice Whitelist mapping for approved addresses\r\n    mapping(address => bool) public whitelist;\r\n    \r\n    /// @notice Transfer restrictions enabled flag\r\n    bool public transferRestrictionsEnabled;\r\n    \r\n    /// @notice Trading enabled flag\r\n    bool public tradingEnabled;\r\n    \r\n    /// @notice Circuit breaker contract\r\n    ICircuitBreaker public circuitBreaker;\r\n    \r\n    /// @notice Transfer hook contract\r\n    ITransferHook public transferHook;\r\n    \r\n    /// @notice Commit-reveal scheme for sensitive updates\r\n    mapping(bytes32 => uint256) public commits;\r\n    \r\n    /// @notice Commit timeout duration\r\n    uint256 public commitTimeout;\r\n    \r\n    /// @notice Snapshot data mapping\r\n    mapping(uint256 => SnapshotData) public snapshots;\r\n    \r\n    /// @notice Current snapshot ID counter\r\n    uint256 public currentSnapshotId;\r\n    \r\n    /// @notice Circuit breaker state\r\n    bool public circuitBreakerTriggered;\r\n    \r\n    /// @notice Last circuit breaker reset time\r\n    uint256 public lastCircuitBreakerReset;\r\n    \r\n    /// @notice Circuit breaker reset interval\r\n    uint256 public circuitBreakerResetInterval;\r\n\r\n    // ============ Structs ============\r\n    \r\n    struct SnapshotData {\r\n        uint256 id;\r\n        uint256 timestamp;\r\n        uint256 totalSupply;\r\n        bool active;\r\n    }\r\n    \r\n    struct CommitData {\r\n        bytes32 commit;\r\n        uint256 timestamp;\r\n        bool revealed;\r\n    }\r\n\r\n    // ============ Events ============\r\n    \r\n    event TreasuryUpdated(address indexed oldTreasury, address indexed newTreasury);\r\n    event BlocklistUpdated(address indexed account, bool blocked);\r\n    event WhitelistUpdated(address indexed account, bool whitelisted);\r\n    event TransferRestrictionsToggled(bool enabled);\r\n    event TradingEnabled(uint256 timestamp);\r\n    event CircuitBreakerUpdated(address indexed oldBreaker, address indexed newBreaker);\r\n    event TransferHookUpdated(address indexed oldHook, address indexed newHook);\r\n    event CircuitBreakerTriggered(address indexed triggerer, string reason);\r\n    event CircuitBreakerReset();\r\n    event SnapshotCreated(uint256 indexed snapshotId, uint256 timestamp, uint256 totalSupply);\r\n    event CommitCreated(bytes32 indexed commit, address indexed committer, uint256 timestamp);\r\n    event CommitRevealed(bytes32 indexed commit, bytes32 secret, uint256 timestamp);\r\n    event ContractPaused(address indexed pauser, string indexed pauseType);\r\n    event ContractUnpaused(address indexed unpauser);\r\n\r\n    // ============ Errors ============\r\n    \r\n    error InvalidAddress();\r\n    error InvalidAmount();\r\n    error BlockedAddress();\r\n    error NotWhitelisted();\r\n    error TransferRestrictionsActive();\r\n    error CircuitBreakerActive();\r\n    error CommitExpired();\r\n    error CommitNotFound();\r\n    error CommitAlreadyRevealed();\r\n    error InvalidCommit();\r\n    error SnapshotNotFound();\r\n    error UnauthorizedUpgrade();\r\n    error TradingNotEnabled();\r\n    error ParamCommitExpired();\r\n\r\n    // ============ Modifiers ============\r\n    \r\n    modifier notBlocked(address account) {\r\n        if (blocklist[account]) revert BlockedAddress();\r\n        _;\r\n    }\r\n    \r\n    modifier onlyWhitelisted(address account) {\r\n        if (transferRestrictionsEnabled && !whitelist[account] && account != treasury) {\r\n            revert NotWhitelisted();\r\n        }\r\n        _;\r\n    }\r\n    \r\n    modifier whitelistTransferAllowed(address from, address to) {\r\n        if (transferRestrictionsEnabled) {\r\n            // Treasury can always send and receive\r\n            if (from != treasury && to != treasury) {\r\n                // Both addresses must be whitelisted for non-treasury transfers\r\n                if (!whitelist[from] || !whitelist[to]) {\r\n                    revert NotWhitelisted();\r\n                }\r\n            }\r\n        }\r\n        _;\r\n    }\r\n    \r\n    modifier whenCircuitBreakerNotActive() {\r\n        if (circuitBreakerTriggered) revert CircuitBreakerActive();\r\n        _;\r\n    }\r\n    \r\n    modifier whenTradingEnabled() {\r\n        if (!tradingEnabled && msg.sender != treasury) revert TradingNotEnabled();\r\n        _;\r\n    }\r\n\r\n    // ============ Initialization ============\r\n    \r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    /**\r\n     * @notice Initialize the NEBA Token contract\r\n     * @param _treasury Treasury address (Gnosis Safe Multisig)\r\n     * @param _admin Admin address\r\n     * @param _commitTimeout Commit timeout duration in seconds\r\n     * @param _circuitBreakerResetInterval Circuit breaker reset interval in seconds\r\n     */\r\n    function initialize(\r\n        address _treasury,\r\n        address _admin,\r\n        uint256 _commitTimeout,\r\n        uint256 _circuitBreakerResetInterval\r\n    ) public initializer {\r\n        if (_treasury == address(0) || _admin == address(0)) revert InvalidAddress();\r\n        \r\n        __ERC20_init(TOKEN_NAME, TOKEN_SYMBOL);\r\n        __ERC20Pausable_init();\r\n        __AccessControl_init();\r\n        __ERC20Permit_init(TOKEN_NAME);\r\n        // __ERC20Votes_init(); // Removed - will be implemented in V2\r\n        __UUPSUpgradeable_init();\r\n        __ReentrancyGuard_init();\r\n        \r\n        treasury = _treasury;\r\n        commitTimeout = _commitTimeout;\r\n        circuitBreakerResetInterval = _circuitBreakerResetInterval;\r\n        \r\n        // Set up roles\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\r\n        _grantRole(UPGRADER_ROLE, _admin);\r\n        _grantRole(ADMIN_PAUSER_ROLE, _admin);\r\n        _grantRole(BLOCKLIST_MANAGER_ROLE, _admin);\r\n        _grantRole(WHITELIST_MANAGER_ROLE, _admin);\r\n        _grantRole(CIRCUIT_BREAKER_ROLE, _admin);\r\n        _grantRole(SNAPSHOT_ROLE, _admin);\r\n        _grantRole(PARAM_MANAGER_ROLE, _admin);\r\n        _grantRole(FINANCE_ROLE, _admin);\r\n        // Note: BOT_PAUSER_ROLE, GOVERNANCE_UNPAUSER_ROLE, and EMERGENCY_GUARDIAN_ROLE \r\n        // will be granted separately to their respective addresses\r\n        \r\n        // Mint entire supply to treasury\r\n        _mint(treasury, MAX_SUPPLY);\r\n        \r\n        emit TreasuryUpdated(address(0), _treasury);\r\n    }\r\n\r\n    // ============ ERC-20 Overrides ============\r\n    \r\n    /**\r\n     * @notice Override transfer to include security checks\r\n     */\r\n    function transfer(address to, uint256 amount) virtual \r\n        public \r\n        override \r\n        whenNotPaused \r\n        notBlocked(msg.sender) \r\n        notBlocked(to) \r\n        whitelistTransferAllowed(msg.sender, to)\r\n        whenCircuitBreakerNotActive \r\n        whenTradingEnabled\r\n        nonReentrant \r\n        returns (bool) \r\n    {\r\n        // Check circuit breaker\r\n        if (address(circuitBreaker) != address(0)) {\r\n            circuitBreaker.checkTransfer(msg.sender, to, amount);\r\n        }\r\n        \r\n        // Call transfer hook if set\r\n        if (address(transferHook) != address(0)) {\r\n            transferHook.beforeTransfer(msg.sender, to, amount);\r\n        }\r\n        \r\n        bool success = super.transfer(to, amount);\r\n        \r\n        if (address(transferHook) != address(0)) {\r\n            transferHook.afterTransfer(msg.sender, to, amount);\r\n        }\r\n        \r\n        return success;\r\n    }\r\n    \r\n    /**\r\n     * @notice Override transferFrom to include security checks\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) virtual \r\n        public \r\n        override \r\n        whenNotPaused \r\n        notBlocked(from) \r\n        notBlocked(to) \r\n        whitelistTransferAllowed(from, to)\r\n        whenCircuitBreakerNotActive \r\n        whenTradingEnabled\r\n        nonReentrant \r\n        returns (bool) \r\n    {\r\n        // Check circuit breaker\r\n        if (address(circuitBreaker) != address(0)) {\r\n            circuitBreaker.checkTransfer(from, to, amount);\r\n        }\r\n        \r\n        // Call transfer hook if set\r\n        if (address(transferHook) != address(0)) {\r\n            transferHook.beforeTransfer(from, to, amount);\r\n        }\r\n        \r\n        bool success = super.transferFrom(from, to, amount);\r\n        \r\n        if (address(transferHook) != address(0)) {\r\n            transferHook.afterTransfer(from, to, amount);\r\n        }\r\n        \r\n        return success;\r\n    }\r\n\r\n    // ============ Transfer Restriction Hooks ============\r\n    // Note: Full ERC-1404 standard implementation deferred to V2\r\n    \r\n    /**\r\n     * @notice Check if transfer is allowed (basic hooks for V1)\r\n     * @dev Simplified version - full ERC-1404 will be implemented in V2\r\n     */\r\n    function isTransferAllowed(address from, address to) \r\n        public \r\n        view \r\n        returns (bool) \r\n    {\r\n        // Basic transfer restrictions for V1\r\n        if (!tradingEnabled && from != treasury && to != treasury) return false;\r\n        if (paused()) return false;\r\n        if (blocklist[from] || blocklist[to]) return false;\r\n        if (circuitBreakerTriggered) return false;\r\n        \r\n        // Whitelist restrictions: if enabled, both from and to must be whitelisted OR one of them is treasury\r\n        if (transferRestrictionsEnabled) {\r\n            // Treasury can always send and receive\r\n            if (from == treasury || to == treasury) return true;\r\n            // Both addresses must be whitelisted\r\n            if (!whitelist[from] || !whitelist[to]) return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    // ============ Access Control Functions ============\r\n    \r\n    /**\r\n     * @notice Update treasury address\r\n     */\r\n    function updateTreasury(address _treasury) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        if (_treasury == address(0)) revert InvalidAddress();\r\n        address oldTreasury = treasury;\r\n        treasury = _treasury;\r\n        emit TreasuryUpdated(oldTreasury, _treasury);\r\n    }\r\n    \r\n    /**\r\n     * @notice Update blocklist status\r\n     */\r\n    function updateBlocklist(address account, bool blocked) \r\n        external \r\n        onlyRole(BLOCKLIST_MANAGER_ROLE) \r\n    {\r\n        blocklist[account] = blocked;\r\n        emit BlocklistUpdated(account, blocked);\r\n    }\r\n    \r\n    /**\r\n     * @notice Update whitelist status\r\n     */\r\n    function updateWhitelist(address account, bool whitelisted) \r\n        external \r\n        onlyRole(WHITELIST_MANAGER_ROLE) \r\n    {\r\n        whitelist[account] = whitelisted;\r\n        emit WhitelistUpdated(account, whitelisted);\r\n    }\r\n    \r\n    /**\r\n     * @notice Toggle transfer restrictions\r\n     */\r\n    function toggleTransferRestrictions() external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        transferRestrictionsEnabled = !transferRestrictionsEnabled;\r\n        emit TransferRestrictionsToggled(transferRestrictionsEnabled);\r\n    }\r\n    \r\n    /**\r\n     * @notice Enable trading (one-time only)\r\n     */\r\n    function enableTrading() external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        require(!tradingEnabled, \"Trading already enabled\");\r\n        tradingEnabled = true;\r\n        emit TradingEnabled(block.timestamp);\r\n    }\r\n\r\n    // ============ Circuit Breaker Functions ============\r\n    \r\n    /**\r\n     * @notice Update circuit breaker contract\r\n     */\r\n    function updateCircuitBreaker(address _circuitBreaker) \r\n        external \r\n        onlyRole(CIRCUIT_BREAKER_ROLE) \r\n    {\r\n        address oldBreaker = address(circuitBreaker);\r\n        circuitBreaker = ICircuitBreaker(_circuitBreaker);\r\n        emit CircuitBreakerUpdated(oldBreaker, _circuitBreaker);\r\n    }\r\n    \r\n    /**\r\n     * @notice Trigger circuit breaker manually\r\n     */\r\n    function triggerCircuitBreaker(string calldata reason) \r\n        external \r\n        onlyRole(CIRCUIT_BREAKER_ROLE) \r\n    {\r\n        circuitBreakerTriggered = true;\r\n        lastCircuitBreakerReset = block.timestamp;\r\n        emit CircuitBreakerTriggered(msg.sender, reason);\r\n    }\r\n    \r\n    /**\r\n     * @notice Reset circuit breaker\r\n     */\r\n    function resetCircuitBreaker() external onlyRole(CIRCUIT_BREAKER_ROLE) {\r\n        circuitBreakerTriggered = false;\r\n        lastCircuitBreakerReset = block.timestamp;\r\n        emit CircuitBreakerReset();\r\n    }\r\n    \r\n    /**\r\n     * @notice Auto-reset circuit breaker if interval has passed\r\n     */\r\n    function autoResetCircuitBreaker() external {\r\n        if (block.timestamp >= lastCircuitBreakerReset + circuitBreakerResetInterval) {\r\n            circuitBreakerTriggered = false;\r\n            lastCircuitBreakerReset = block.timestamp;\r\n            emit CircuitBreakerReset();\r\n        }\r\n    }\r\n\r\n    // ============ Transfer Hook Functions ============\r\n    \r\n    /**\r\n     * @notice Update transfer hook contract\r\n     */\r\n    function updateTransferHook(address _transferHook) \r\n        external \r\n        onlyRole(DEFAULT_ADMIN_ROLE) \r\n    {\r\n        address oldHook = address(transferHook);\r\n        transferHook = ITransferHook(_transferHook);\r\n        emit TransferHookUpdated(oldHook, _transferHook);\r\n    }\r\n\r\n    // ============ Commit-Reveal Functions ============\r\n    \r\n    /**\r\n     * @notice Create a commit for sensitive parameter updates\r\n     */\r\n    function createCommit(bytes32 commit) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        commits[commit] = block.timestamp;\r\n        emit CommitCreated(commit, msg.sender, block.timestamp);\r\n    }\r\n    \r\n    /**\r\n     * @notice Reveal a commit\r\n     */\r\n    function revealCommit(bytes32 commit, bytes32 secret) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        if (commits[commit] == 0) revert CommitNotFound();\r\n        if (block.timestamp > commits[commit] + commitTimeout) revert ParamCommitExpired();\r\n        if (keccak256(abi.encodePacked(secret, msg.sender, block.timestamp)) != commit) {\r\n            revert InvalidCommit();\r\n        }\r\n        \r\n        delete commits[commit];\r\n        emit CommitRevealed(commit, secret, block.timestamp);\r\n    }\r\n\r\n    // ============ Snapshot Functions ============\r\n    \r\n    /**\r\n     * @notice Create a snapshot of current token balances\r\n     * @dev Only callable by SNAPSHOT_ROLE\r\n     * @return snapshotId The ID of the created snapshot\r\n     */\r\n    function createSnapshot() \r\n        external \r\n        onlyRole(SNAPSHOT_ROLE) \r\n        returns (uint256 snapshotId) \r\n    {\r\n        currentSnapshotId++;\r\n        snapshotId = currentSnapshotId;\r\n        \r\n        snapshots[snapshotId] = SnapshotData({\r\n            id: snapshotId,\r\n            timestamp: block.timestamp,\r\n            totalSupply: totalSupply(),\r\n            active: true\r\n        });\r\n        \r\n        emit SnapshotCreated(snapshotId, block.timestamp, totalSupply());\r\n        return snapshotId;\r\n    }\r\n    \r\n    /**\r\n     * @notice Get snapshot data by ID\r\n     * @param snapshotId The snapshot ID to retrieve\r\n     * @return snapshot The snapshot data\r\n     */\r\n    function getSnapshot(uint256 snapshotId) \r\n        external \r\n        view \r\n        returns (SnapshotData memory snapshot) \r\n    {\r\n        if (snapshots[snapshotId].id == 0) {\r\n            revert SnapshotNotFound();\r\n        }\r\n        return snapshots[snapshotId];\r\n    }\r\n    \r\n    /**\r\n     * @notice Get the latest snapshot ID\r\n     * @return The latest snapshot ID\r\n     */\r\n    function getLatestSnapshotId() external view returns (uint256) {\r\n        return currentSnapshotId;\r\n    }\r\n    \r\n    /**\r\n     * @notice Check if a snapshot exists\r\n     * @param snapshotId The snapshot ID to check\r\n     * @return True if snapshot exists\r\n     */\r\n    function snapshotExists(uint256 snapshotId) external view returns (bool) {\r\n        return snapshots[snapshotId].id != 0;\r\n    }\r\n\r\n    // ============ Pausable Functions ============\r\n    \r\n    /**\r\n     * @notice Pauses the contract.\r\n     * @dev Accessible by ADMIN_PAUSER_ROLE, BOT_PAUSER_ROLE, or EMERGENCY_GUARDIAN_ROLE.\r\n     */\r\n    function pause() public whenNotPaused {\r\n        // Check if the caller has any of the pauser roles\r\n        require(\r\n            hasRole(ADMIN_PAUSER_ROLE, msg.sender) || \r\n            hasRole(BOT_PAUSER_ROLE, msg.sender) ||\r\n            hasRole(EMERGENCY_GUARDIAN_ROLE, msg.sender),\r\n            \"Caller must have pauser role\"\r\n        );\r\n        \r\n        // Determine pause type for event emission\r\n        string memory pauseType = \"UNKNOWN\";\r\n        if (hasRole(ADMIN_PAUSER_ROLE, msg.sender)) pauseType = \"ADMIN\";\r\n        else if (hasRole(BOT_PAUSER_ROLE, msg.sender)) pauseType = \"BOT\";\r\n        else if (hasRole(EMERGENCY_GUARDIAN_ROLE, msg.sender)) pauseType = \"EMERGENCY_GUARDIAN\";\r\n        \r\n        _pause();\r\n        emit ContractPaused(msg.sender, pauseType);\r\n    }\r\n    \r\n    /**\r\n     * @notice Unpauses the contract.\r\n     * @dev Accessible by ADMIN_PAUSER_ROLE or GOVERNANCE_UNPAUSER_ROLE.\r\n     */\r\n    function unpause() public whenPaused {\r\n        // Only Admin or Governance roles can unpause\r\n        require(\r\n            hasRole(ADMIN_PAUSER_ROLE, msg.sender) || \r\n            hasRole(GOVERNANCE_UNPAUSER_ROLE, msg.sender),\r\n            \"Caller must have unpauser role\"\r\n        );\r\n        _unpause();\r\n        emit ContractUnpaused(msg.sender);\r\n    }\r\n    \r\n    /**\r\n     * @notice Grant BOT_PAUSER_ROLE to automated bot address\r\n     * @dev Only callable by admin to set up the automated monitoring bot\r\n     * @param botAddress Address of the automated bot/keeper\r\n     */\r\n    function grantBotPauserRole(address botAddress) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        if (botAddress == address(0)) revert InvalidAddress();\r\n        _grantRole(BOT_PAUSER_ROLE, botAddress);\r\n    }\r\n    \r\n    /**\r\n     * @notice Revoke BOT_PAUSER_ROLE from automated bot address\r\n     * @dev Only callable by admin to revoke bot permissions if compromised\r\n     * @param botAddress Address of the automated bot/keeper\r\n     */\r\n    function revokeBotPauserRole(address botAddress) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _revokeRole(BOT_PAUSER_ROLE, botAddress);\r\n    }\r\n    \r\n    /**\r\n     * @notice Grant GOVERNANCE_UNPAUSER_ROLE to governance address\r\n     * @dev Only callable by admin to set up governance unpausing\r\n     * @param governanceAddress Address of the governance system (e.g., Timelock)\r\n     */\r\n    function grantGovernanceUnpauserRole(address governanceAddress) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        if (governanceAddress == address(0)) revert InvalidAddress();\r\n        _grantRole(GOVERNANCE_UNPAUSER_ROLE, governanceAddress);\r\n    }\r\n    \r\n    /**\r\n     * @notice Grant EMERGENCY_GUARDIAN_ROLE to emergency guardian address\r\n     * @dev Only callable by admin to set up emergency guardian\r\n     * @param guardianAddress Address of the emergency guardian (e.g., Security Council)\r\n     */\r\n    function grantEmergencyGuardianRole(address guardianAddress) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        if (guardianAddress == address(0)) revert InvalidAddress();\r\n        _grantRole(EMERGENCY_GUARDIAN_ROLE, guardianAddress);\r\n    }\r\n\r\n    // ============ Upgrade Functions ============\r\n    \r\n    /**\r\n     * @notice Authorize upgrade (UUPS)\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) \r\n        internal \r\n        override \r\n        onlyRole(UPGRADER_ROLE) \r\n    {\r\n        // Additional upgrade authorization logic can be added here\r\n    }\r\n\r\n    // ============ Required Overrides ============\r\n    \r\n    function _update(address from, address to, uint256 value)\r\n        internal\r\n        override(ERC20Upgradeable, ERC20PausableUpgradeable)\r\n    {\r\n        super._update(from, to, value);\r\n    }\r\n    \r\n    function nonces(address owner)\r\n        public\r\n        view\r\n        override(ERC20PermitUpgradeable)\r\n        returns (uint256)\r\n    {\r\n        return super.nonces(owner);\r\n    }\r\n\r\n    // ============ Storage Gap ============\r\n    \r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n"},"contracts/TransferHook.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport \"./interfaces/ITransferHook.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\r\n\r\n/**\r\n * @title TransferHook\r\n * @dev Sample transfer hook implementation for compliance and monitoring\r\n * @notice This contract provides hooks for transfer monitoring and compliance checks\r\n */\r\ncontract TransferHook is ITransferHook, AccessControlUpgradeable {\r\n    \r\n    // ============ Constants ============\r\n    \r\n    bytes32 public constant HOOK_MANAGER_ROLE = keccak256(\"HOOK_MANAGER_ROLE\");\r\n    \r\n    // ============ State Variables ============\r\n    \r\n    bool public hooksEnabled;\r\n    mapping(address => bool) public whitelistedSenders;\r\n    mapping(address => bool) public whitelistedReceivers;\r\n    mapping(address => bool) public blacklistedAddresses;\r\n    \r\n    uint256 public maxTransferAmount;\r\n    uint256 public minTransferAmount;\r\n    \r\n    // Transfer monitoring\r\n    mapping(address => uint256) public transferCount;\r\n    mapping(address => uint256) public totalTransferred;\r\n    mapping(address => uint256) public lastTransferTime;\r\n    \r\n    // ============ Events ============\r\n    \r\n    event TransferExecuted(address indexed from, address indexed to, uint256 amount, uint256 timestamp);\r\n    event WhitelistUpdated(address indexed account, bool whitelisted, bool isSender);\r\n    event BlacklistUpdated(address indexed account, bool blacklisted);\r\n    event LimitsUpdated(uint256 maxAmount, uint256 minAmount);\r\n    event HooksToggled(bool enabled);\r\n    \r\n    // ============ Errors ============\r\n    \r\n    error HooksDisabled();\r\n    error AddressBlacklisted();\r\n    error TransferAmountExceedsLimit();\r\n    error TransferAmountBelowMinimum();\r\n    error UnauthorizedCaller();\r\n    \r\n    // ============ Initialization ============\r\n    \r\n    function initialize(\r\n        address admin,\r\n        uint256 _maxTransferAmount,\r\n        uint256 _minTransferAmount\r\n    ) public initializer {\r\n        __AccessControl_init();\r\n        \r\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\r\n        _grantRole(HOOK_MANAGER_ROLE, admin);\r\n        \r\n        hooksEnabled = true;\r\n        maxTransferAmount = _maxTransferAmount;\r\n        minTransferAmount = _minTransferAmount;\r\n    }\r\n    \r\n    // ============ Transfer Hook Implementation ============\r\n    \r\n    /**\r\n     * @notice Called before a transfer is executed\r\n     */\r\n    function beforeTransfer(address from, address to, uint256 amount) external view override {\r\n        if (!hooksEnabled) return;\r\n        \r\n        // Check if addresses are blacklisted\r\n        if (blacklistedAddresses[from] || blacklistedAddresses[to]) {\r\n            revert AddressBlacklisted();\r\n        }\r\n        \r\n        // Check transfer amount limits\r\n        if (amount > maxTransferAmount) {\r\n            revert TransferAmountExceedsLimit();\r\n        }\r\n        \r\n        if (amount < minTransferAmount && amount > 0) {\r\n            revert TransferAmountBelowMinimum();\r\n        }\r\n        \r\n        // Additional compliance checks can be added here\r\n        _performComplianceChecks(from, to, amount);\r\n    }\r\n    \r\n    /**\r\n     * @notice Called after a transfer is executed\r\n     */\r\n    function afterTransfer(address from, address to, uint256 amount) external override {\r\n        if (!hooksEnabled) return;\r\n        \r\n        // Update transfer statistics\r\n        transferCount[from]++;\r\n        transferCount[to]++;\r\n        totalTransferred[from] += amount;\r\n        totalTransferred[to] += amount;\r\n        lastTransferTime[from] = block.timestamp;\r\n        lastTransferTime[to] = block.timestamp;\r\n        \r\n        emit TransferExecuted(from, to, amount, block.timestamp);\r\n        \r\n        // Additional post-transfer logic can be added here\r\n        _performPostTransferActions(from, to, amount);\r\n    }\r\n    \r\n    // ============ Internal Functions ============\r\n    \r\n    function _performComplianceChecks(address from, address to, uint256 amount) internal view {\r\n        // Add custom compliance logic here\r\n        // For example: KYC checks, AML checks, etc.\r\n    }\r\n    \r\n    function _performPostTransferActions(address from, address to, uint256 amount) internal {\r\n        // Add custom post-transfer logic here\r\n        // For example: notifications, reporting, etc.\r\n    }\r\n    \r\n    // ============ Admin Functions ============\r\n    \r\n    /**\r\n     * @notice Toggle hooks on/off\r\n     */\r\n    function toggleHooks() external onlyRole(HOOK_MANAGER_ROLE) {\r\n        hooksEnabled = !hooksEnabled;\r\n        emit HooksToggled(hooksEnabled);\r\n    }\r\n    \r\n    /**\r\n     * @notice Update whitelist status\r\n     */\r\n    function updateWhitelist(address account, bool whitelisted, bool isSender) \r\n        external \r\n        onlyRole(HOOK_MANAGER_ROLE) \r\n    {\r\n        if (isSender) {\r\n            whitelistedSenders[account] = whitelisted;\r\n        } else {\r\n            whitelistedReceivers[account] = whitelisted;\r\n        }\r\n        emit WhitelistUpdated(account, whitelisted, isSender);\r\n    }\r\n    \r\n    /**\r\n     * @notice Update blacklist status\r\n     */\r\n    function updateBlacklist(address account, bool blacklisted) \r\n        external \r\n        onlyRole(HOOK_MANAGER_ROLE) \r\n    {\r\n        blacklistedAddresses[account] = blacklisted;\r\n        emit BlacklistUpdated(account, blacklisted);\r\n    }\r\n    \r\n    /**\r\n     * @notice Update transfer limits\r\n     */\r\n    function updateLimits(uint256 _maxTransferAmount, uint256 _minTransferAmount) \r\n        external \r\n        onlyRole(HOOK_MANAGER_ROLE) \r\n    {\r\n        maxTransferAmount = _maxTransferAmount;\r\n        minTransferAmount = _minTransferAmount;\r\n        emit LimitsUpdated(_maxTransferAmount, _minTransferAmount);\r\n    }\r\n    \r\n    // ============ View Functions ============\r\n    \r\n    function getTransferStats(address account) external view returns (\r\n        uint256 count,\r\n        uint256 total,\r\n        uint256 lastTime\r\n    ) {\r\n        return (\r\n            transferCount[account],\r\n            totalTransferred[account],\r\n            lastTransferTime[account]\r\n        );\r\n    }\r\n    \r\n    function isWhitelistedSender(address account) external view returns (bool) {\r\n        return whitelistedSenders[account];\r\n    }\r\n    \r\n    function isWhitelistedReceiver(address account) external view returns (bool) {\r\n        return whitelistedReceivers[account];\r\n    }\r\n    \r\n    function isBlacklisted(address account) external view returns (bool) {\r\n        return blacklistedAddresses[account];\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[1696],"ERC165Upgradeable":[2480],"IAccessControl":[2563],"IERC165":[5506],"Initializable":[632]},"id":365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":2564,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":1697,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":5507,"src":"284:80:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"292:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":2481,"src":"365:79:0","symbolAliases":[{"foreign":{"id":8,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"373:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":633,"src":"445:63:0","symbolAliases":[{"foreign":{"id":10,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"453:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":13,"name":"Initializable","nameLocations":["2217:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"2217:13:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2217:13:0"},{"baseName":{"id":15,"name":"ContextUpgradeable","nameLocations":["2232:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2232:18:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2232:18:0"},{"baseName":{"id":17,"name":"IAccessControl","nameLocations":["2252:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"2252:14:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2252:14:0"},{"baseName":{"id":19,"name":"ERC165Upgradeable","nameLocations":["2268:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":2480,"src":"2268:17:0"},"id":20,"nodeType":"InheritanceSpecifier","src":"2268:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"510:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":364,"linearizedBaseContracts":[364,2480,5506,2563,1696,632],"name":"AccessControlUpgradeable","nameLocation":"2189:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":27,"members":[{"constant":false,"id":24,"mutability":"mutable","name":"hasRole","nameLocation":"2351:7:0","nodeType":"VariableDeclaration","scope":27,"src":"2318:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":23,"keyName":"account","keyNameLocation":"2334:7:0","keyType":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2318:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"name":"bool","nodeType":"ElementaryTypeName","src":"2345:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"adminRole","nameLocation":"2376:9:0","nodeType":"VariableDeclaration","scope":27,"src":"2368:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2368:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2299:8:0","nodeType":"StructDefinition","scope":364,"src":"2292:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2422:18:0","nodeType":"VariableDeclaration","scope":364,"src":"2398:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2398:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2455:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":37,"members":[{"constant":false,"id":36,"mutability":"mutable","name":"_roles","nameLocation":"2603:6:0","nodeType":"VariableDeclaration","scope":37,"src":"2569:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":35,"keyName":"role","keyNameLocation":"2585:4:0","keyType":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2577:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2569:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":34,"nodeType":"UserDefinedTypeName","pathNode":{"id":33,"name":"RoleData","nameLocations":["2593:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"2593:8:0"},"referencedDeclaration":27,"src":"2593:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2538:20:0","nodeType":"StructDefinition","scope":364,"src":"2531:85:0","visibility":"public"},{"constant":true,"id":40,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2764:28:0","nodeType":"VariableDeclaration","scope":364,"src":"2739:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2739:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2795:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":47,"nodeType":"Block","src":"2958:87:0","statements":[{"AST":{"nativeSrc":"2977:62:0","nodeType":"YulBlock","src":"2977:62:0","statements":[{"nativeSrc":"2991:38:0","nodeType":"YulAssignment","src":"2991:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"3001:28:0","nodeType":"YulIdentifier","src":"3001:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2991:6:0","nodeType":"YulIdentifier","src":"2991:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":44,"isOffset":false,"isSlot":true,"src":"2991:6:0","suffix":"slot","valueSize":1},{"declaration":40,"isOffset":false,"isSlot":false,"src":"3001:28:0","valueSize":1}],"id":46,"nodeType":"InlineAssembly","src":"2968:71:0"}]},"id":48,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2877:24:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"2901:2:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"$","nameLocation":"2955:1:0","nodeType":"VariableDeclaration","scope":48,"src":"2926:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":43,"nodeType":"UserDefinedTypeName","pathNode":{"id":42,"name":"AccessControlStorage","nameLocations":["2926:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"2926:20:0"},"referencedDeclaration":37,"src":"2926:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2925:32:0"},"scope":364,"src":"2868:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":58,"nodeType":"Block","src":"3262:44:0","statements":[{"expression":{"arguments":[{"id":54,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"3283:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":53,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":131,"src":"3272:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":56,"nodeType":"ExpressionStatement","src":"3272:16:0"},{"id":57,"nodeType":"PlaceholderStatement","src":"3298:1:0"}]},"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"3051:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":59,"name":"onlyRole","nameLocation":"3239:8:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"role","nameLocation":"3256:4:0","nodeType":"VariableDeclaration","scope":59,"src":"3248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":50,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3247:14:0"},"src":"3230:76:0","virtual":false,"visibility":"internal"},{"body":{"id":64,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":65,"implemented":true,"kind":"function","modifiers":[{"id":62,"kind":"modifierInvocation","modifierName":{"id":61,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init","nameLocation":"3321:20:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":364,"src":"3312:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":70,"nodeType":"Block","src":"3451:7:0","statements":[]},"id":71,"implemented":true,"kind":"function","modifiers":[{"id":68,"kind":"modifierInvocation","modifierName":{"id":67,"name":"onlyInitializing","nameLocations":["3434:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3434:16:0"},"nodeType":"ModifierInvocation","src":"3434:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3392:30:0","nodeType":"FunctionDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3422:2:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"3451:0:0"},"scope":364,"src":"3383:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2479],"body":{"id":92,"nodeType":"Block","src":"3582:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":80,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3599:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":82,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"3619:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2563_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2563_$","typeString":"type(contract IAccessControl)"}],"id":81,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3614:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$2563","typeString":"type(contract IAccessControl)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3635:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3614:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3599:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":88,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3674:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":86,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3650:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$364_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2479,"src":"3650:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3650:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3599:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":79,"id":91,"nodeType":"Return","src":"3592:94:0"}]},"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3463:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":93,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3500:17:0","nodeType":"FunctionDefinition","overrides":{"id":76,"nodeType":"OverrideSpecifier","overrides":[],"src":"3558:8:0"},"parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"interfaceId","nameLocation":"3525:11:0","nodeType":"VariableDeclaration","scope":93,"src":"3518:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3518:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3517:20:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":93,"src":"3576:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"3576:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3575:6:0"},"scope":364,"src":"3491:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2530],"body":{"id":117,"nodeType":"Block","src":"3863:124:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"mutability":"mutable","name":"$","nameLocation":"3902:1:0","nodeType":"VariableDeclaration","scope":117,"src":"3873:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":104,"nodeType":"UserDefinedTypeName","pathNode":{"id":103,"name":"AccessControlStorage","nameLocations":["3873:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"3873:20:0"},"referencedDeclaration":37,"src":"3873:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":108,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":106,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"3906:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3906:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3873:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":109,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"3949:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3949:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":112,"indexExpression":{"id":111,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3958:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3964:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3949:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":115,"indexExpression":{"id":114,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3972:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":102,"id":116,"nodeType":"Return","src":"3942:38:0"}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3699:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":118,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3789:7:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3805:4:0","nodeType":"VariableDeclaration","scope":118,"src":"3797:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3797:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3819:7:0","nodeType":"VariableDeclaration","scope":118,"src":"3811:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3811:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3796:31:0"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":118,"src":"3857:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100,"name":"bool","nodeType":"ElementaryTypeName","src":"3857:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3856:6:0"},"scope":364,"src":"3780:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":130,"nodeType":"Block","src":"4252:47:0","statements":[{"expression":{"arguments":[{"id":125,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"4273:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"4279:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":152,"src":"4262:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"4262:30:0"}]},"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"3993:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4205:10:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"role","nameLocation":"4224:4:0","nodeType":"VariableDeclaration","scope":131,"src":"4216:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4215:14:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"4252:0:0"},"scope":364,"src":"4196:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":151,"nodeType":"Block","src":"4502:124:0","statements":[{"condition":{"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4516:23:0","subExpression":{"arguments":[{"id":140,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4525:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":141,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4531:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4517:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4517:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":150,"nodeType":"IfStatement","src":"4512:108:0","trueBody":{"id":149,"nodeType":"Block","src":"4541:79:0","statements":[{"errorCall":{"arguments":[{"id":145,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4595:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":146,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4604:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":144,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"4562:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"RevertStatement","src":"4555:54:0"}]}}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4305:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":152,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4438:10:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4457:4:0","nodeType":"VariableDeclaration","scope":152,"src":"4449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"4471:7:0","nodeType":"VariableDeclaration","scope":152,"src":"4463:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4448:31:0"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"4502:0:0"},"scope":364,"src":"4429:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2538],"body":{"id":172,"nodeType":"Block","src":"4881:117:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"mutability":"mutable","name":"$","nameLocation":"4920:1:0","nodeType":"VariableDeclaration","scope":172,"src":"4891:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":161,"nodeType":"UserDefinedTypeName","pathNode":{"id":160,"name":"AccessControlStorage","nameLocations":["4891:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"4891:20:0"},"referencedDeclaration":37,"src":"4891:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":165,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":163,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"4924:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4924:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4891:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":166,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"4967:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4969:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"4967:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":169,"indexExpression":{"id":168,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"4976:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4967:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4982:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4967:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":159,"id":171,"nodeType":"Return","src":"4960:31:0"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"4632:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":173,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4816:12:0","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"role","nameLocation":"4837:4:0","nodeType":"VariableDeclaration","scope":173,"src":"4829:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4829:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4828:14:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"4872:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4872:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4871:9:0"},"scope":364,"src":"4807:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2546],"body":{"id":191,"nodeType":"Block","src":"5388:42:0","statements":[{"expression":{"arguments":[{"id":187,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5409:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":188,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"5415:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5398:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5398:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"nodeType":"ExpressionStatement","src":"5398:25:0"}]},"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"5004:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":192,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":182,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5381:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":181,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5368:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5368:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":184,"kind":"modifierInvocation","modifierName":{"id":180,"name":"onlyRole","nameLocations":["5359:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5359:8:0"},"nodeType":"ModifierInvocation","src":"5359:28:0"}],"name":"grantRole","nameLocation":"5303:9:0","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"role","nameLocation":"5321:4:0","nodeType":"VariableDeclaration","scope":192,"src":"5313:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5313:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"account","nameLocation":"5335:7:0","nodeType":"VariableDeclaration","scope":192,"src":"5327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"5327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5312:31:0"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"5388:0:0"},"scope":364,"src":"5294:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2554],"body":{"id":210,"nodeType":"Block","src":"5805:43:0","statements":[{"expression":{"arguments":[{"id":206,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5827:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5833:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":205,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"5815:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5815:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":209,"nodeType":"ExpressionStatement","src":"5815:26:0"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"5436:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":211,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":203,"kind":"modifierInvocation","modifierName":{"id":199,"name":"onlyRole","nameLocations":["5776:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5776:8:0"},"nodeType":"ModifierInvocation","src":"5776:28:0"}],"name":"revokeRole","nameLocation":"5719:10:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"role","nameLocation":"5738:4:0","nodeType":"VariableDeclaration","scope":211,"src":"5730:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5730:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"account","nameLocation":"5752:7:0","nodeType":"VariableDeclaration","scope":211,"src":"5744:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"5744:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5729:31:0"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"5805:0:0"},"scope":364,"src":"5710:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2562],"body":{"id":233,"nodeType":"Block","src":"6475:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6489:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"6511:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6511:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6489:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"6485:102:0","trueBody":{"id":226,"nodeType":"Block","src":"6525:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"6546:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6546:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"RevertStatement","src":"6539:37:0"}]}},{"expression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6609:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6615:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"6597:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":232,"nodeType":"ExpressionStatement","src":"6597:37:0"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"5854:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6405:12:0","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"role","nameLocation":"6426:4:0","nodeType":"VariableDeclaration","scope":234,"src":"6418:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6418:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6440:18:0","nodeType":"VariableDeclaration","scope":234,"src":"6432:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"6432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6417:42:0"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"6475:0:0"},"scope":364,"src":"6396:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":269,"nodeType":"Block","src":"6839:245:0","statements":[{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"$","nameLocation":"6878:1:0","nodeType":"VariableDeclaration","scope":269,"src":"6849:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":243,"nodeType":"UserDefinedTypeName","pathNode":{"id":242,"name":"AccessControlStorage","nameLocations":["6849:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"6849:20:0"},"referencedDeclaration":37,"src":"6849:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":247,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"6882:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6882:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6849:59:0"},{"assignments":[249],"declarations":[{"constant":false,"id":249,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6926:17:0","nodeType":"VariableDeclaration","scope":269,"src":"6918:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":253,"initialValue":{"arguments":[{"id":251,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6959:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":250,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"6946:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6918:46:0"},{"expression":{"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":254,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6974:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6976:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"6974:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":258,"indexExpression":{"id":256,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6974:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6989:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"6974:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":260,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7001:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6974:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":262,"nodeType":"ExpressionStatement","src":"6974:36:0"},{"eventCall":{"arguments":[{"id":264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7042:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":265,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7048:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":266,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7067:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":263,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"7025:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"EmitStatement","src":"7020:57:0"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"6647:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":270,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6775:13:0","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"role","nameLocation":"6797:4:0","nodeType":"VariableDeclaration","scope":270,"src":"6789:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6789:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"adminRole","nameLocation":"6811:9:0","nodeType":"VariableDeclaration","scope":270,"src":"6803:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6803:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6788:33:0"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"6839:0:0"},"scope":364,"src":"6766:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"7401:304:0","statements":[{"assignments":[282],"declarations":[{"constant":false,"id":282,"mutability":"mutable","name":"$","nameLocation":"7440:1:0","nodeType":"VariableDeclaration","scope":316,"src":"7411:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":281,"nodeType":"UserDefinedTypeName","pathNode":{"id":280,"name":"AccessControlStorage","nameLocations":["7411:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"7411:20:0"},"referencedDeclaration":37,"src":"7411:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":285,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"7444:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7411:59:0"},{"condition":{"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7484:23:0","subExpression":{"arguments":[{"id":287,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7493:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7499:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":286,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"7485:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7485:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":314,"nodeType":"Block","src":"7662:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7683:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":279,"id":313,"nodeType":"Return","src":"7676:12:0"}]},"id":315,"nodeType":"IfStatement","src":"7480:219:0","trueBody":{"id":311,"nodeType":"Block","src":"7509:147:0","statements":[{"expression":{"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":291,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"7523:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7525:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"7523:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":295,"indexExpression":{"id":293,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7532:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7523:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7538:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"7523:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":298,"indexExpression":{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7546:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7523:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7557:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7523:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":301,"nodeType":"ExpressionStatement","src":"7523:38:0"},{"eventCall":{"arguments":[{"id":303,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7592:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":304,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"7607:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":302,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"7580:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7580:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"EmitStatement","src":"7575:45:0"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7641:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":279,"id":310,"nodeType":"Return","src":"7634:11:0"}]}}]},"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"7090:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":317,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7327:10:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"role","nameLocation":"7346:4:0","nodeType":"VariableDeclaration","scope":317,"src":"7338:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7338:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"account","nameLocation":"7360:7:0","nodeType":"VariableDeclaration","scope":317,"src":"7352:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"7352:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7337:31:0"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"7395:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"7395:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7394:6:0"},"scope":364,"src":"7318:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"8026:304:0","statements":[{"assignments":[329],"declarations":[{"constant":false,"id":329,"mutability":"mutable","name":"$","nameLocation":"8065:1:0","nodeType":"VariableDeclaration","scope":362,"src":"8036:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"AccessControlStorage","nameLocations":["8036:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"8036:20:0"},"referencedDeclaration":37,"src":"8036:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"8069:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8036:59:0"},{"condition":{"arguments":[{"id":334,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8117:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8123:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":333,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"8109:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":360,"nodeType":"Block","src":"8287:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8308:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":326,"id":359,"nodeType":"Return","src":"8301:12:0"}]},"id":361,"nodeType":"IfStatement","src":"8105:219:0","trueBody":{"id":357,"nodeType":"Block","src":"8133:148:0","statements":[{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":337,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8147:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8149:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"8147:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":341,"indexExpression":{"id":339,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8156:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8147:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8162:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"8147:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":344,"indexExpression":{"id":343,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8170:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8147:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8181:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8147:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":347,"nodeType":"ExpressionStatement","src":"8147:39:0"},{"eventCall":{"arguments":[{"id":349,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8217:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":350,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8223:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"8232:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8232:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":348,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"8205:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"EmitStatement","src":"8200:45:0"},{"expression":{"hexValue":"74727565","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8266:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":326,"id":356,"nodeType":"Return","src":"8259:11:0"}]}}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"7711:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7951:11:0","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"role","nameLocation":"7971:4:0","nodeType":"VariableDeclaration","scope":363,"src":"7963:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7963:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"7985:7:0","nodeType":"VariableDeclaration","scope":363,"src":"7977:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"7977:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7962:31:0"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"8020:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"8020:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8019:6:0"},"scope":364,"src":"7942:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":365,"src":"2171:6161:0","usedErrors":[381,384,2490,2493],"usedEvents":[389,2502,2511,2520]}],"src":"108:8225:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[632]},"id":633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":366,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":632,"linearizedBaseContracts":[632],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":375,"members":[{"constant":false,"id":371,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":375,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":370,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":375,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":632,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":378,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":632,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":381,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":384,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":389,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":389,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":386,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":471,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":471,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":393,"nodeType":"UserDefinedTypeName","pathNode":{"id":392,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"4158:20:1"},"referencedDeclaration":375,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":397,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":471,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":398,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":403,"initialValue":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":400,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[405],"declarations":[{"constant":false,"id":405,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":471,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":404,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":408,"initialValue":{"expression":{"id":406,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[410],"declarations":[{"constant":false,"id":410,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":409,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":416,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":414,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[418],"declarations":[{"constant":false,"id":418,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":431,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":419,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":424,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":432,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":434,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":440,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":437,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":442,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":447,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":448,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":456,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":455,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":449,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":457,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":458,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":469,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":459,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":465,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":472,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":518,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"6355:20:1"},"referencedDeclaration":375,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":485,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":487,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":494,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":493,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":495,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":498,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":500,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":501,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":507,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":508,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":515,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":514,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":519,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":519,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":474,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":525,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":527,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":539,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":537,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":534,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":540,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":632,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":585,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"7824:20:1"},"referencedDeclaration":375,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":549,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":547,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":550,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":555,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":552,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":557,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":560,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":584,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":583,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":565,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":569,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":574,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":577,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":575,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":632,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":592,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":591,"id":595,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":589,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":632,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":607,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":603,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":602,"id":606,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":608,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":600,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":632,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":614,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":613,"id":615,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":632,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":630,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":628,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":626,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":622,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":625,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":629,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":631,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"9129:20:1"},"referencedDeclaration":375,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":632,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":633,"src":"2349:6929:1","usedErrors":[381,384],"usedEvents":[389]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[3050],"IERC1822Proxiable":[2619],"Initializable":[632],"UUPSUpgradeable":[814]},"id":815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":634,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":2620,"src":"141:88:2","symbolAliases":[{"foreign":{"id":635,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":3051,"src":"230:84:2","symbolAliases":[{"foreign":{"id":637,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":633,"src":"315:50:2","symbolAliases":[{"foreign":{"id":639,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":642,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1023:13:2"},"id":643,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":644,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2619,"src":"1038:17:2"},"id":645,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":814,"linearizedBaseContracts":[814,2619,632],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":652,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":814,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":650,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":656,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":814,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":659,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":664,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":664,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":671,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":667,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":670,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":672,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":679,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":675,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":678,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":680,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":686,"implemented":true,"kind":"function","modifiers":[{"id":683,"kind":"modifierInvocation","modifierName":{"id":682,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":814,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":692,"implemented":true,"kind":"function","modifiers":[{"id":689,"kind":"modifierInvocation","modifierName":{"id":688,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":814,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2618],"body":{"id":703,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":700,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3050_$","typeString":"type(library ERC1967Utils)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":699,"id":702,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":704,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":680,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":814,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":723,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":715,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":714,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":719,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":718,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":724,"implemented":true,"kind":"function","modifiers":[{"id":712,"kind":"modifierInvocation","modifierName":{"id":711,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":724,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":724,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":708,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":814,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":745,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":732,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":734,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3050_$","typeString":"type(library ERC1967Utils)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":2802,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":737,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":743,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":814,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":752,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":754,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":759,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":814,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":768,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":768,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":814,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":812,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":801,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":785,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3050_$","typeString":"type(library ERC1967Utils)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":793,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":792,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":789,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":788,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":797,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":794,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3050_$","typeString":"type(library ERC1967Utils)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2865,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":802,"nodeType":"TryCatchClause","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":802,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":809,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":806,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":803,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3050_$","typeString":"type(library ERC1967Utils)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":2776,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":810,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":777,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":776,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2619_$","typeString":"type(contract IERC1822Proxiable)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2619","typeString":"contract IERC1822Proxiable"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2618,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":811,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":813,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":813,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":813,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":814,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":815,"src":"986:5586:2","usedErrors":[381,384,659,664,2776,2789,3210,3473],"usedEvents":[389,2571]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1696],"ERC20Upgradeable":[1431],"IERC20":[3138],"IERC20Errors":[2661],"IERC20Metadata":[3164],"Initializable":[632]},"id":1432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":816,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":3139,"src":"131:70:3","symbolAliases":[{"foreign":{"id":817,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":3165,"src":"202:97:3","symbolAliases":[{"foreign":{"id":819,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":1697,"src":"300:70:3","symbolAliases":[{"foreign":{"id":821,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":2757,"src":"371:83:3","symbolAliases":[{"foreign":{"id":823,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":633,"src":"455:66:3","symbolAliases":[{"foreign":{"id":825,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":828,"name":"Initializable","nameLocations":["1319:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1319:13:3"},"id":829,"nodeType":"InheritanceSpecifier","src":"1319:13:3"},{"baseName":{"id":830,"name":"ContextUpgradeable","nameLocations":["1334:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"1334:18:3"},"id":831,"nodeType":"InheritanceSpecifier","src":"1334:18:3"},{"baseName":{"id":832,"name":"IERC20","nameLocations":["1354:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3138,"src":"1354:6:3"},"id":833,"nodeType":"InheritanceSpecifier","src":"1354:6:3"},{"baseName":{"id":834,"name":"IERC20Metadata","nameLocations":["1362:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":3164,"src":"1362:14:3"},"id":835,"nodeType":"InheritanceSpecifier","src":"1362:14:3"},{"baseName":{"id":836,"name":"IERC20Errors","nameLocations":["1378:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":2661,"src":"1378:12:3"},"id":837,"nodeType":"InheritanceSpecifier","src":"1378:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"523:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1431,"linearizedBaseContracts":[1431,2661,3164,3138,1696,632],"name":"ERC20Upgradeable","nameLocation":"1299:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"1397:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":855,"members":[{"constant":false,"id":842,"mutability":"mutable","name":"_balances","nameLocation":"1531:9:3","nodeType":"VariableDeclaration","scope":855,"src":"1495:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":841,"keyName":"account","keyNameLocation":"1511:7:3","keyType":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1495:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"_allowances","nameLocation":"1615:11:3","nodeType":"VariableDeclaration","scope":855,"src":"1551:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":847,"keyName":"account","keyNameLocation":"1567:7:3","keyType":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1551:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":846,"keyName":"spender","keyNameLocation":"1594:7:3","keyType":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"_totalSupply","nameLocation":"1645:12:3","nodeType":"VariableDeclaration","scope":855,"src":"1637:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"_name","nameLocation":"1675:5:3","nodeType":"VariableDeclaration","scope":855,"src":"1668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"_symbol","nameLocation":"1697:7:3","nodeType":"VariableDeclaration","scope":855,"src":"1690:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":853,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1472:12:3","nodeType":"StructDefinition","scope":1431,"src":"1465:246:3","visibility":"public"},{"constant":true,"id":858,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"1851:20:3","nodeType":"VariableDeclaration","scope":1431,"src":"1826:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":865,"nodeType":"Block","src":"2021:79:3","statements":[{"AST":{"nativeSrc":"2040:54:3","nodeType":"YulBlock","src":"2040:54:3","statements":[{"nativeSrc":"2054:30:3","nodeType":"YulAssignment","src":"2054:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2064:20:3","nodeType":"YulIdentifier","src":"2064:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2054:6:3","nodeType":"YulIdentifier","src":"2054:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":862,"isOffset":false,"isSlot":true,"src":"2054:6:3","suffix":"slot","valueSize":1},{"declaration":858,"isOffset":false,"isSlot":false,"src":"2064:20:3","valueSize":1}],"id":864,"nodeType":"InlineAssembly","src":"2031:63:3"}]},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"1956:16:3","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"1972:2:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"$","nameLocation":"2018:1:3","nodeType":"VariableDeclaration","scope":866,"src":"1997:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":861,"nodeType":"UserDefinedTypeName","pathNode":{"id":860,"name":"ERC20Storage","nameLocations":["1997:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"1997:12:3"},"referencedDeclaration":855,"src":"1997:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"1996:24:3"},"scope":1431,"src":"1947:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":881,"nodeType":"Block","src":"2355:55:3","statements":[{"expression":{"arguments":[{"id":877,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2388:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":878,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2395:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":876,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"2365:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"2365:38:3"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"2106:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":882,"implemented":true,"kind":"function","modifiers":[{"id":874,"kind":"modifierInvocation","modifierName":{"id":873,"name":"onlyInitializing","nameLocations":["2338:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2338:16:3"},"nodeType":"ModifierInvocation","src":"2338:16:3"}],"name":"__ERC20_init","nameLocation":"2272:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"name_","nameLocation":"2299:5:3","nodeType":"VariableDeclaration","scope":882,"src":"2285:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":868,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"symbol_","nameLocation":"2320:7:3","nodeType":"VariableDeclaration","scope":882,"src":"2306:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":870,"name":"string","nodeType":"ElementaryTypeName","src":"2306:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2284:44:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"2355:0:3"},"scope":1431,"src":"2263:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":909,"nodeType":"Block","src":"2518:114:3","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"$","nameLocation":"2549:1:3","nodeType":"VariableDeclaration","scope":909,"src":"2528:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":892,"nodeType":"UserDefinedTypeName","pathNode":{"id":891,"name":"ERC20Storage","nameLocations":["2528:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"2528:12:3"},"referencedDeclaration":855,"src":"2528:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":896,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":894,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2553:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2528:43:3"},{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":897,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2581:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2583:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":852,"src":"2581:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":900,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2591:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2581:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":902,"nodeType":"ExpressionStatement","src":"2581:15:3"},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":903,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2606:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2608:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":854,"src":"2606:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":906,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"2618:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2606:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":908,"nodeType":"ExpressionStatement","src":"2606:19:3"}]},"id":910,"implemented":true,"kind":"function","modifiers":[{"id":889,"kind":"modifierInvocation","modifierName":{"id":888,"name":"onlyInitializing","nameLocations":["2501:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2501:16:3"},"nodeType":"ModifierInvocation","src":"2501:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2425:22:3","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"name_","nameLocation":"2462:5:3","nodeType":"VariableDeclaration","scope":910,"src":"2448:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":883,"name":"string","nodeType":"ElementaryTypeName","src":"2448:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"symbol_","nameLocation":"2483:7:3","nodeType":"VariableDeclaration","scope":910,"src":"2469:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":885,"name":"string","nodeType":"ElementaryTypeName","src":"2469:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2447:44:3"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[],"src":"2518:0:3"},"scope":1431,"src":"2416:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3151],"body":{"id":925,"nodeType":"Block","src":"2757:84:3","statements":[{"assignments":[918],"declarations":[{"constant":false,"id":918,"mutability":"mutable","name":"$","nameLocation":"2788:1:3","nodeType":"VariableDeclaration","scope":925,"src":"2767:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":917,"nodeType":"UserDefinedTypeName","pathNode":{"id":916,"name":"ERC20Storage","nameLocations":["2767:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"2767:12:3"},"referencedDeclaration":855,"src":"2767:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":921,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":919,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2792:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2767:43:3"},{"expression":{"expression":{"id":922,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"2827:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2829:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":852,"src":"2827:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":915,"id":924,"nodeType":"Return","src":"2820:14:3"}]},"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"2638:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2706:4:3","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"2710:2:3"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"2742:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":913,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2741:15:3"},"scope":1431,"src":"2697:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3157],"body":{"id":941,"nodeType":"Block","src":"3016:86:3","statements":[{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"$","nameLocation":"3047:1:3","nodeType":"VariableDeclaration","scope":941,"src":"3026:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":933,"nodeType":"UserDefinedTypeName","pathNode":{"id":932,"name":"ERC20Storage","nameLocations":["3026:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"3026:12:3"},"referencedDeclaration":855,"src":"3026:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":935,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3051:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3026:43:3"},{"expression":{"expression":{"id":938,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3086:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":854,"src":"3086:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":931,"id":940,"nodeType":"Return","src":"3079:16:3"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"2847:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":942,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2963:6:3","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"2969:2:3"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"3001:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":929,"name":"string","nodeType":"ElementaryTypeName","src":"3001:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3000:15:3"},"scope":1431,"src":"2954:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3163],"body":{"id":950,"nodeType":"Block","src":"3791:26:3","statements":[{"expression":{"hexValue":"3138","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3808:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":947,"id":949,"nodeType":"Return","src":"3801:9:3"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"3108:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":951,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3744:8:3","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"3752:2:3"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":951,"src":"3784:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":945,"name":"uint8","nodeType":"ElementaryTypeName","src":"3784:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3783:7:3"},"scope":1431,"src":"3735:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3087],"body":{"id":966,"nodeType":"Block","src":"3911:91:3","statements":[{"assignments":[959],"declarations":[{"constant":false,"id":959,"mutability":"mutable","name":"$","nameLocation":"3942:1:3","nodeType":"VariableDeclaration","scope":966,"src":"3921:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":958,"nodeType":"UserDefinedTypeName","pathNode":{"id":957,"name":"ERC20Storage","nameLocations":["3921:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"3921:12:3"},"referencedDeclaration":855,"src":"3921:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":962,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":960,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3946:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3946:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3921:43:3"},{"expression":{"expression":{"id":963,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"3981:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3983:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":850,"src":"3981:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":956,"id":965,"nodeType":"Return","src":"3974:21:3"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"3823:22:3","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3859:11:3","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"3870:2:3"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"3902:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3901:9:3"},"scope":1431,"src":"3850:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3095],"body":{"id":986,"nodeType":"Block","src":"4109:97:3","statements":[{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"$","nameLocation":"4140:1:3","nodeType":"VariableDeclaration","scope":986,"src":"4119:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":976,"nodeType":"UserDefinedTypeName","pathNode":{"id":975,"name":"ERC20Storage","nameLocations":["4119:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"4119:12:3"},"referencedDeclaration":855,"src":"4119:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":980,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":978,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4144:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4119:43:3"},{"expression":{"baseExpression":{"expression":{"id":981,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4179:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"4179:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":984,"indexExpression":{"id":983,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4191:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4179:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":974,"id":985,"nodeType":"Return","src":"4172:27:3"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"4008:22:3","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":987,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4044:9:3","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"account","nameLocation":"4062:7:3","nodeType":"VariableDeclaration","scope":987,"src":"4054:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4054:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4053:17:3"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"4100:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"4100:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4099:9:3"},"scope":1431,"src":"4035:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3105],"body":{"id":1010,"nodeType":"Block","src":"4476:103:3","statements":[{"assignments":[998],"declarations":[{"constant":false,"id":998,"mutability":"mutable","name":"owner","nameLocation":"4494:5:3","nodeType":"VariableDeclaration","scope":1010,"src":"4486:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":999,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"4502:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4486:28:3"},{"expression":{"arguments":[{"id":1003,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"4534:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"4541:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4545:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1002,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"4524:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4524:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"4524:27:3"},{"expression":{"hexValue":"74727565","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4568:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":996,"id":1009,"nodeType":"Return","src":"4561:11:3"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"4212:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4410:8:3","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"to","nameLocation":"4427:2:3","nodeType":"VariableDeclaration","scope":1011,"src":"4419:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"4419:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"value","nameLocation":"4439:5:3","nodeType":"VariableDeclaration","scope":1011,"src":"4431:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"4431:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4418:27:3"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"4470:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":994,"name":"bool","nodeType":"ElementaryTypeName","src":"4470:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4469:6:3"},"scope":1431,"src":"4401:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3115],"body":{"id":1034,"nodeType":"Block","src":"4701:106:3","statements":[{"assignments":[1023],"declarations":[{"constant":false,"id":1023,"mutability":"mutable","name":"$","nameLocation":"4732:1:3","nodeType":"VariableDeclaration","scope":1034,"src":"4711:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1022,"nodeType":"UserDefinedTypeName","pathNode":{"id":1021,"name":"ERC20Storage","nameLocations":["4711:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"4711:12:3"},"referencedDeclaration":855,"src":"4711:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1024,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4736:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4736:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4711:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1027,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"4771:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4773:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":848,"src":"4771:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1030,"indexExpression":{"id":1029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4785:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1031,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4792:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1020,"id":1033,"nodeType":"Return","src":"4764:36:3"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"4585:22:3","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4621:9:3","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"owner","nameLocation":"4639:5:3","nodeType":"VariableDeclaration","scope":1035,"src":"4631:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"spender","nameLocation":"4654:7:3","nodeType":"VariableDeclaration","scope":1035,"src":"4646:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4630:32:3"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"4692:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4692:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4691:9:3"},"scope":1431,"src":"4612:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3125],"body":{"id":1058,"nodeType":"Block","src":"5193:107:3","statements":[{"assignments":[1046],"declarations":[{"constant":false,"id":1046,"mutability":"mutable","name":"owner","nameLocation":"5211:5:3","nodeType":"VariableDeclaration","scope":1058,"src":"5203:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"5203:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1047,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"5219:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5219:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5203:28:3"},{"expression":{"arguments":[{"id":1051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5250:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5257:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"5266:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1050,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1314,"src":"5241:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"5241:31:3"},{"expression":{"hexValue":"74727565","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1044,"id":1057,"nodeType":"Return","src":"5282:11:3"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"4813:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5123:7:3","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"spender","nameLocation":"5139:7:3","nodeType":"VariableDeclaration","scope":1059,"src":"5131:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"5131:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"value","nameLocation":"5156:5:3","nodeType":"VariableDeclaration","scope":1059,"src":"5148:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"5148:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5130:32:3"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"5187:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1042,"name":"bool","nodeType":"ElementaryTypeName","src":"5187:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5186:6:3"},"scope":1431,"src":"5114:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3137],"body":{"id":1090,"nodeType":"Block","src":"5985:151:3","statements":[{"assignments":[1072],"declarations":[{"constant":false,"id":1072,"mutability":"mutable","name":"spender","nameLocation":"6003:7:3","nodeType":"VariableDeclaration","scope":1090,"src":"5995:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"5995:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1075,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1073,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"6013:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5995:30:3"},{"expression":{"arguments":[{"id":1077,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6051:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"6057:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"6066:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1076,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6035:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6035:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"ExpressionStatement","src":"6035:37:3"},{"expression":{"arguments":[{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6092:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6098:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"6102:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1082,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"6082:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"6082:26:3"},{"expression":{"hexValue":"74727565","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6125:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1070,"id":1089,"nodeType":"Return","src":"6118:11:3"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"5306:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5901:12:3","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"from","nameLocation":"5922:4:3","nodeType":"VariableDeclaration","scope":1091,"src":"5914:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"5914:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"to","nameLocation":"5936:2:3","nodeType":"VariableDeclaration","scope":1091,"src":"5928:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"5928:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"value","nameLocation":"5948:5:3","nodeType":"VariableDeclaration","scope":1091,"src":"5940:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5940:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5913:41:3"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"5979:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1068,"name":"bool","nodeType":"ElementaryTypeName","src":"5979:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5978:6:3"},"scope":1431,"src":"5892:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1137,"nodeType":"Block","src":"6578:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6592:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6608:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6600:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:3","typeDescriptions":{}}},"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6600:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6592:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"6588:86:3","trueBody":{"id":1114,"nodeType":"Block","src":"6612:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"6652:7:3","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1107,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"6633:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1113,"nodeType":"RevertStatement","src":"6626:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6687:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6701:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6693:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"6693:7:3","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6693:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6687:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1130,"nodeType":"IfStatement","src":"6683:86:3","trueBody":{"id":1129,"nodeType":"Block","src":"6705:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:3","typeDescriptions":{}}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1122,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6726:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6726:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"RevertStatement","src":"6719:39:3"}]}},{"expression":{"arguments":[{"id":1132,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6786:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6792:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"6796:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1131,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"6778:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6778:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"ExpressionStatement","src":"6778:24:3"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"6142:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6518:9:3","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"from","nameLocation":"6536:4:3","nodeType":"VariableDeclaration","scope":1138,"src":"6528:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"6528:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"to","nameLocation":"6550:2:3","nodeType":"VariableDeclaration","scope":1138,"src":"6542:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"6542:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"value","nameLocation":"6562:5:3","nodeType":"VariableDeclaration","scope":1138,"src":"6554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"6554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6527:41:3"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"6578:0:3"},"scope":1431,"src":"6509:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1229,"nodeType":"Block","src":"7199:1095:3","statements":[{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"$","nameLocation":"7230:1:3","nodeType":"VariableDeclaration","scope":1229,"src":"7209:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1149,"nodeType":"UserDefinedTypeName","pathNode":{"id":1148,"name":"ERC20Storage","nameLocations":["7209:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"7209:12:3"},"referencedDeclaration":855,"src":"7209:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"7234:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7234:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7209:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7266:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7282:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7274:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"7274:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7274:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7266:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1196,"nodeType":"Block","src":"7442:366:3","statements":[{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"fromBalance","nameLocation":"7464:11:3","nodeType":"VariableDeclaration","scope":1196,"src":"7456:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1173,"initialValue":{"baseExpression":{"expression":{"id":1169,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7478:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7480:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"7478:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7490:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7478:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7456:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7513:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7527:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7513:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1184,"nodeType":"IfStatement","src":"7509:115:3","trueBody":{"id":1183,"nodeType":"Block","src":"7534:90:3","statements":[{"errorCall":{"arguments":[{"id":1178,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7584:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7590:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7603:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1177,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7559:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"RevertStatement","src":"7552:57:3"}]}},{"id":1195,"nodeType":"UncheckedBlock","src":"7637:161:3","statements":[{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1185,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7744:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7746:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"7744:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1189,"indexExpression":{"id":1187,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7756:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7744:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1190,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7764:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7778:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7764:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7744:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"7744:39:3"}]}]},"id":1197,"nodeType":"IfStatement","src":"7262:546:3","trueBody":{"id":1166,"nodeType":"Block","src":"7286:150:3","statements":[{"expression":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1160,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7402:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7404:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":850,"src":"7402:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7420:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7402:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1165,"nodeType":"ExpressionStatement","src":"7402:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7822:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7836:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7828:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"7828:7:3","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7828:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7822:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1221,"nodeType":"Block","src":"8039:208:3","statements":[{"id":1220,"nodeType":"UncheckedBlock","src":"8053:184:3","statements":[{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1212,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8198:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8200:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"8198:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1216,"indexExpression":{"id":1214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8210:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8198:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"8217:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8198:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"8198:24:3"}]}]},"id":1222,"nodeType":"IfStatement","src":"7818:429:3","trueBody":{"id":1211,"nodeType":"Block","src":"7840:193:3","statements":[{"id":1210,"nodeType":"UncheckedBlock","src":"7854:169:3","statements":[{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1204,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7985:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7987:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":850,"src":"7985:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"8003:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7985:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1209,"nodeType":"ExpressionStatement","src":"7985:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1224,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"8271:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8277:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"8281:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1223,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"8262:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8262:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"EmitStatement","src":"8257:30:3"}]},"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"6815:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7133:7:3","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"from","nameLocation":"7149:4:3","nodeType":"VariableDeclaration","scope":1230,"src":"7141:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"7141:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"7163:2:3","nodeType":"VariableDeclaration","scope":1230,"src":"7155:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"7155:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"value","nameLocation":"7175:5:3","nodeType":"VariableDeclaration","scope":1230,"src":"7167:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"7167:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7140:41:3"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"7199:0:3"},"scope":1431,"src":"7124:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"8693:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8707:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8726:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8718:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"8718:7:3","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8707:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"8703:91:3","trueBody":{"id":1251,"nodeType":"Block","src":"8730:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8772:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"8772:7:3","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8772:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1244,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8751:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8751:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"RevertStatement","src":"8744:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8819:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8811:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"8811:7:3","typeDescriptions":{}}},"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8811:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1258,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8823:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8832:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8803:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8803:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"ExpressionStatement","src":"8803:35:3"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"8300:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8646:5:3","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"account","nameLocation":"8660:7:3","nodeType":"VariableDeclaration","scope":1263,"src":"8652:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"value","nameLocation":"8677:5:3","nodeType":"VariableDeclaration","scope":1263,"src":"8669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"8669:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8651:32:3"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"8693:0:3"},"scope":1431,"src":"8637:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"9219:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9233:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9252:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9244:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"9244:7:3","typeDescriptions":{}}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9244:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9233:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"9229:89:3","trueBody":{"id":1284,"nodeType":"Block","src":"9256:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9304:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9296:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"9296:7:3","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9296:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"9277:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"RevertStatement","src":"9270:37:3"}]}},{"expression":{"arguments":[{"id":1287,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9335:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9352:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9344:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"9344:7:3","typeDescriptions":{}}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9344:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"9356:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1286,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9327:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9327:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"9327:35:3"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"8851:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9172:5:3","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"account","nameLocation":"9186:7:3","nodeType":"VariableDeclaration","scope":1296,"src":"9178:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"9178:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"value","nameLocation":"9203:5:3","nodeType":"VariableDeclaration","scope":1296,"src":"9195:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"9195:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9177:32:3"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"9219:0:3"},"scope":1431,"src":"9163:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"9979:54:3","statements":[{"expression":{"arguments":[{"id":1307,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9998:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10005:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"10014:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10021:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1306,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1382,"src":"9989:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"ExpressionStatement","src":"9989:37:3"}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"9375:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9914:8:3","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"owner","nameLocation":"9931:5:3","nodeType":"VariableDeclaration","scope":1314,"src":"9923:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"spender","nameLocation":"9946:7:3","nodeType":"VariableDeclaration","scope":1314,"src":"9938:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"9938:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"value","nameLocation":"9963:5:3","nodeType":"VariableDeclaration","scope":1314,"src":"9955:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"9955:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9922:47:3"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"9979:0:3"},"scope":1431,"src":"9905:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1381,"nodeType":"Block","src":"10978:389:3","statements":[{"assignments":[1328],"declarations":[{"constant":false,"id":1328,"mutability":"mutable","name":"$","nameLocation":"11009:1:3","nodeType":"VariableDeclaration","scope":1381,"src":"10988:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1327,"nodeType":"UserDefinedTypeName","pathNode":{"id":1326,"name":"ERC20Storage","nameLocations":["10988:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"10988:12:3"},"referencedDeclaration":855,"src":"10988:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1331,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1329,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11013:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11013:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10988:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11045:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11062:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11054:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"11054:7:3","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11054:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11045:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"IfStatement","src":"11041:89:3","trueBody":{"id":1345,"nodeType":"Block","src":"11066:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11116:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11108:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"11108:7:3","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11108:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1338,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"11087:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"RevertStatement","src":"11080:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11143:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11162:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11154:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"11154:7:3","typeDescriptions":{}}},"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11154:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11143:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"nodeType":"IfStatement","src":"11139:90:3","trueBody":{"id":1360,"nodeType":"Block","src":"11166:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11215:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11207:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:3","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11207:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1353,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"11187:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11187:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"RevertStatement","src":"11180:38:3"}]}},{"expression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1362,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"11238:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11240:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":848,"src":"11238:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1367,"indexExpression":{"id":1364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11252:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1368,"indexExpression":{"id":1365,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11259:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11238:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"11270:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11238:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"nodeType":"ExpressionStatement","src":"11238:37:3"},{"condition":{"id":1372,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11289:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"IfStatement","src":"11285:76:3","trueBody":{"id":1379,"nodeType":"Block","src":"11300:61:3","statements":[{"eventCall":{"arguments":[{"id":1374,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11328:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11335:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"11344:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1373,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11319:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11319:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"EmitStatement","src":"11314:36:3"}]}}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"10039:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10889:8:3","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"owner","nameLocation":"10906:5:3","nodeType":"VariableDeclaration","scope":1382,"src":"10898:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"10898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"spender","nameLocation":"10921:7:3","nodeType":"VariableDeclaration","scope":1382,"src":"10913:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"10913:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"value","nameLocation":"10938:5:3","nodeType":"VariableDeclaration","scope":1382,"src":"10930:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"10930:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"emitEvent","nameLocation":"10950:9:3","nodeType":"VariableDeclaration","scope":1382,"src":"10945:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1322,"name":"bool","nodeType":"ElementaryTypeName","src":"10945:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10897:63:3"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"10978:0:3"},"scope":1431,"src":"10880:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1429,"nodeType":"Block","src":"11738:387:3","statements":[{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"currentAllowance","nameLocation":"11756:16:3","nodeType":"VariableDeclaration","scope":1429,"src":"11748:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"11748:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"initialValue":{"arguments":[{"id":1395,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"11785:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1396,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11792:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1394,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11775:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11748:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11814:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11838:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"11838:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1400,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11833:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11833:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11847:3:3","memberName":"max","nodeType":"MemberAccess","src":"11833:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11814:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1428,"nodeType":"IfStatement","src":"11810:309:3","trueBody":{"id":1427,"nodeType":"Block","src":"11852:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11870:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"11889:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11870:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1416,"nodeType":"IfStatement","src":"11866:130:3","trueBody":{"id":1415,"nodeType":"Block","src":"11896:100:3","statements":[{"errorCall":{"arguments":[{"id":1410,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11948:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11957:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"11975:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1409,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"11921:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1414,"nodeType":"RevertStatement","src":"11914:67:3"}]}},{"id":1426,"nodeType":"UncheckedBlock","src":"12009:100:3","statements":[{"expression":{"arguments":[{"id":1418,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"12046:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1419,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"12053:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"12062:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"12081:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12062:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12088:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1417,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1382,"src":"12037:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"12037:57:3"}]}]}}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"11373:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11658:15:3","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"owner","nameLocation":"11682:5:3","nodeType":"VariableDeclaration","scope":1430,"src":"11674:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"11674:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"spender","nameLocation":"11697:7:3","nodeType":"VariableDeclaration","scope":1430,"src":"11689:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"11689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"value","nameLocation":"11714:5:3","nodeType":"VariableDeclaration","scope":1430,"src":"11706:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"11706:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11673:47:3"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"11738:0:3"},"scope":1431,"src":"11649:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1432,"src":"1281:10846:3","usedErrors":[381,384,2631,2636,2641,2650,2655,2660],"usedEvents":[389,3072,3081]}],"src":"105:12023:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","exportedSymbols":{"ERC20PausableUpgradeable":[1481],"ERC20Upgradeable":[1431],"Initializable":[632],"PausableUpgradeable":[1967]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1433,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1432,"src":"150:57:4","symbolAliases":[{"foreign":{"id":1434,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"158:16:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"../../../utils/PausableUpgradeable.sol","id":1437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1968,"src":"208:75:4","symbolAliases":[{"foreign":{"id":1436,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"216:19:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":633,"src":"284:69:4","symbolAliases":[{"foreign":{"id":1438,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"292:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1441,"name":"Initializable","nameLocations":["1090:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1090:13:4"},"id":1442,"nodeType":"InheritanceSpecifier","src":"1090:13:4"},{"baseName":{"id":1443,"name":"ERC20Upgradeable","nameLocations":["1105:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"1105:16:4"},"id":1444,"nodeType":"InheritanceSpecifier","src":"1105:16:4"},{"baseName":{"id":1445,"name":"PausableUpgradeable","nameLocations":["1123:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1967,"src":"1123:19:4"},"id":1446,"nodeType":"InheritanceSpecifier","src":"1123:19:4"}],"canonicalName":"ERC20PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"355:688:4","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1481,"linearizedBaseContracts":[1481,1967,1431,2661,3164,3138,1696,632],"name":"ERC20PausableUpgradeable","nameLocation":"1062:24:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1451,"nodeType":"Block","src":"1207:7:4","statements":[]},"id":1452,"implemented":true,"kind":"function","modifiers":[{"id":1449,"kind":"modifierInvocation","modifierName":{"id":1448,"name":"onlyInitializing","nameLocations":["1190:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1190:16:4"},"nodeType":"ModifierInvocation","src":"1190:16:4"}],"name":"__ERC20Pausable_init","nameLocation":"1158:20:4","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"1178:2:4"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"1207:0:4"},"scope":1481,"src":"1149:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"1288:7:4","statements":[]},"id":1458,"implemented":true,"kind":"function","modifiers":[{"id":1455,"kind":"modifierInvocation","modifierName":{"id":1454,"name":"onlyInitializing","nameLocations":["1271:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1271:16:4"},"nodeType":"ModifierInvocation","src":"1271:16:4"}],"name":"__ERC20Pausable_init_unchained","nameLocation":"1229:30:4","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"1259:2:4"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"1288:0:4"},"scope":1481,"src":"1220:75:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1230],"body":{"id":1479,"nodeType":"Block","src":"1524:47:4","statements":[{"expression":{"arguments":[{"id":1474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1548:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"1554:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1558:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1471,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1534:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PausableUpgradeable_$1481_$","typeString":"type(contract super ERC20PausableUpgradeable)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1540:7:4","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1230,"src":"1534:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1534:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"ExpressionStatement","src":"1534:30:4"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"1300:121:4","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1480,"implemented":true,"kind":"function","modifiers":[{"id":1469,"kind":"modifierInvocation","modifierName":{"id":1468,"name":"whenNotPaused","nameLocations":["1510:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":1857,"src":"1510:13:4"},"nodeType":"ModifierInvocation","src":"1510:13:4"}],"name":"_update","nameLocation":"1435:7:4","nodeType":"FunctionDefinition","overrides":{"id":1467,"nodeType":"OverrideSpecifier","overrides":[],"src":"1501:8:4"},"parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"from","nameLocation":"1451:4:4","nodeType":"VariableDeclaration","scope":1480,"src":"1443:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"to","nameLocation":"1465:2:4","nodeType":"VariableDeclaration","scope":1480,"src":"1457:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"1457:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"value","nameLocation":"1477:5:4","nodeType":"VariableDeclaration","scope":1480,"src":"1469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1469:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1442:41:4"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"1524:0:4"},"scope":1481,"src":"1426:145:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1482,"src":"1044:529:4","usedErrors":[381,384,1846,1849,2631,2636,2641,2650,2655,2660],"usedEvents":[389,1838,1843,3072,3081]}],"src":"124:1450:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","exportedSymbols":{"ECDSA":[5408],"EIP712Upgradeable":[2440],"ERC20PermitUpgradeable":[1650],"ERC20Upgradeable":[1431],"IERC20Permit":[3200],"Initializable":[632],"NoncesUpgradeable":[1807]},"id":1651,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","id":1485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1651,"sourceUnit":3201,"src":"148:93:5","symbolAliases":[{"foreign":{"id":1484,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"156:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1651,"sourceUnit":1432,"src":"242:57:5","symbolAliases":[{"foreign":{"id":1486,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"250:16:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1651,"sourceUnit":5409,"src":"300:75:5","symbolAliases":[{"foreign":{"id":1488,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"308:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":1491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1651,"sourceUnit":2441,"src":"376:84:5","symbolAliases":[{"foreign":{"id":1490,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"384:17:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","file":"../../../utils/NoncesUpgradeable.sol","id":1493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1651,"sourceUnit":1808,"src":"461:71:5","symbolAliases":[{"foreign":{"id":1492,"name":"NoncesUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"469:17:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1651,"sourceUnit":633,"src":"533:69:5","symbolAliases":[{"foreign":{"id":1494,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"541:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1497,"name":"Initializable","nameLocations":["1138:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1138:13:5"},"id":1498,"nodeType":"InheritanceSpecifier","src":"1138:13:5"},{"baseName":{"id":1499,"name":"ERC20Upgradeable","nameLocations":["1153:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"1153:16:5"},"id":1500,"nodeType":"InheritanceSpecifier","src":"1153:16:5"},{"baseName":{"id":1501,"name":"IERC20Permit","nameLocations":["1171:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"1171:12:5"},"id":1502,"nodeType":"InheritanceSpecifier","src":"1171:12:5"},{"baseName":{"id":1503,"name":"EIP712Upgradeable","nameLocations":["1185:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":2440,"src":"1185:17:5"},"id":1504,"nodeType":"InheritanceSpecifier","src":"1185:17:5"},{"baseName":{"id":1505,"name":"NoncesUpgradeable","nameLocations":["1204:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":1807,"src":"1204:17:5"},"id":1506,"nodeType":"InheritanceSpecifier","src":"1204:17:5"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"604:489:5","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1650,"linearizedBaseContracts":[1650,1807,2440,2609,3200,1431,2661,3164,3138,1696,632],"name":"ERC20PermitUpgradeable","nameLocation":"1112:22:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1511,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1253:15:5","nodeType":"VariableDeclaration","scope":1650,"src":"1228:146:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1228:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1289:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1508,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1279:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1279:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"1381:52:5","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1516,"name":"ERC2612ExpiredSignature","nameLocation":"1444:23:5","nodeType":"ErrorDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"deadline","nameLocation":"1476:8:5","nodeType":"VariableDeclaration","scope":1516,"src":"1468:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1467:18:5"},"src":"1438:48:5"},{"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"1492:45:5","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1523,"name":"ERC2612InvalidSigner","nameLocation":"1548:20:5","nodeType":"ErrorDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"signer","nameLocation":"1577:6:5","nodeType":"VariableDeclaration","scope":1523,"src":"1569:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"owner","nameLocation":"1593:5:5","nodeType":"VariableDeclaration","scope":1523,"src":"1585:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1568:31:5"},"src":"1542:58:5"},{"body":{"id":1536,"nodeType":"Block","src":"1906:51:5","statements":[{"expression":{"arguments":[{"id":1532,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1940:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1946:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1531,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1916:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1916:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"1916:34:5"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"1606:221:5","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1537,"implemented":true,"kind":"function","modifiers":[{"id":1529,"kind":"modifierInvocation","modifierName":{"id":1528,"name":"onlyInitializing","nameLocations":["1889:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1889:16:5"},"nodeType":"ModifierInvocation","src":"1889:16:5"}],"name":"__ERC20Permit_init","nameLocation":"1841:18:5","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"name","nameLocation":"1874:4:5","nodeType":"VariableDeclaration","scope":1537,"src":"1860:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1525,"name":"string","nodeType":"ElementaryTypeName","src":"1860:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1859:20:5"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"1906:0:5"},"scope":1650,"src":"1832:125:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1544,"nodeType":"Block","src":"2042:2:5","statements":[]},"id":1545,"implemented":true,"kind":"function","modifiers":[{"id":1542,"kind":"modifierInvocation","modifierName":{"id":1541,"name":"onlyInitializing","nameLocations":["2025:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2025:16:5"},"nodeType":"ModifierInvocation","src":"2025:16:5"}],"name":"__ERC20Permit_init_unchained","nameLocation":"1972:28:5","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"2001:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1538,"name":"string","nodeType":"ElementaryTypeName","src":"2001:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2000:15:5"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[],"src":"2042:0:5"},"scope":1650,"src":"1963:81:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3185],"body":{"id":1621,"nodeType":"Block","src":"2272:483:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1563,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2286:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"2286:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1565,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2304:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2286:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"nodeType":"IfStatement","src":"2282:97:5","trueBody":{"id":1571,"nodeType":"Block","src":"2314:65:5","statements":[{"errorCall":{"arguments":[{"id":1568,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2359:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2335:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"RevertStatement","src":"2328:40:5"}]}},{"assignments":[1574],"declarations":[{"constant":false,"id":1574,"mutability":"mutable","name":"structHash","nameLocation":"2397:10:5","nodeType":"VariableDeclaration","scope":1621,"src":"2389:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2389:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1588,"initialValue":{"arguments":[{"arguments":[{"id":1578,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"2431:15:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2448:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2455:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2464:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1583,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2481:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1582,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2471:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1585,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2489:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1576,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2420:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2424:6:5","memberName":"encode","nodeType":"MemberAccess","src":"2420:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1575,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2410:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2389:110:5"},{"assignments":[1590],"declarations":[{"constant":false,"id":1590,"mutability":"mutable","name":"hash","nameLocation":"2518:4:5","nodeType":"VariableDeclaration","scope":1621,"src":"2510:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2510:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1594,"initialValue":{"arguments":[{"id":1592,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2542:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1591,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"2525:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2525:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2510:43:5"},{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"signer","nameLocation":"2572:6:5","nodeType":"VariableDeclaration","scope":1621,"src":"2564:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1604,"initialValue":{"arguments":[{"id":1599,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2595:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1600,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2601:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1601,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2604:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1602,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"2607:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1597,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"2581:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5408_$","typeString":"type(library ECDSA)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":5358,"src":"2581:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2564:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2623:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1606,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2633:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2623:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1614,"nodeType":"IfStatement","src":"2619:88:5","trueBody":{"id":1613,"nodeType":"Block","src":"2640:67:5","statements":[{"errorCall":{"arguments":[{"id":1609,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2682:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2690:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1608,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"2661:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"RevertStatement","src":"2654:42:5"}]}},{"expression":{"arguments":[{"id":1616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2726:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1617,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2733:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2742:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1615,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1314,"src":"2717:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"2717:31:5"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"2050:28:5","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2092:6:5","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"owner","nameLocation":"2116:5:5","nodeType":"VariableDeclaration","scope":1622,"src":"2108:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"spender","nameLocation":"2139:7:5","nodeType":"VariableDeclaration","scope":1622,"src":"2131:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"value","nameLocation":"2164:5:5","nodeType":"VariableDeclaration","scope":1622,"src":"2156:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"deadline","nameLocation":"2187:8:5","nodeType":"VariableDeclaration","scope":1622,"src":"2179:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"v","nameLocation":"2211:1:5","nodeType":"VariableDeclaration","scope":1622,"src":"2205:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1555,"name":"uint8","nodeType":"ElementaryTypeName","src":"2205:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"r","nameLocation":"2230:1:5","nodeType":"VariableDeclaration","scope":1622,"src":"2222:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2222:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"s","nameLocation":"2249:1:5","nodeType":"VariableDeclaration","scope":1622,"src":"2241:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2241:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2098:158:5"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"2272:0:5"},"scope":1650,"src":"2083:672:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1759,3193],"body":{"id":1638,"nodeType":"Block","src":"2905:43:5","statements":[{"expression":{"arguments":[{"id":1635,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"2935:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1633,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2922:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PermitUpgradeable_$1650_$","typeString":"type(contract super ERC20PermitUpgradeable)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2928:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"2922:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1632,"id":1637,"nodeType":"Return","src":"2915:26:5"}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"2761:28:5","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2803:6:5","nodeType":"FunctionDefinition","overrides":{"id":1629,"nodeType":"OverrideSpecifier","overrides":[{"id":1627,"name":"IERC20Permit","nameLocations":["2854:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"2854:12:5"},{"id":1628,"name":"NoncesUpgradeable","nameLocations":["2868:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":1807,"src":"2868:17:5"}],"src":"2845:41:5"},"parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"owner","nameLocation":"2818:5:5","nodeType":"VariableDeclaration","scope":1639,"src":"2810:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2809:15:5"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1639,"src":"2896:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2895:9:5"},"scope":1650,"src":"2794:154:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3199],"body":{"id":1648,"nodeType":"Block","src":"3108:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1645,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"3125:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3125:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1644,"id":1647,"nodeType":"Return","src":"3118:27:5"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"2954:28:5","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1649,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3049:16:5","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"3065:2:5"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1649,"src":"3099:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3099:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3098:9:5"},"scope":1650,"src":"3040:112:5","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1651,"src":"1094:2060:5","usedErrors":[381,384,1516,1523,1710,2631,2636,2641,2650,2655,2660,5071,5076,5081],"usedEvents":[389,2589,3072,3081]}],"src":"122:3033:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1696],"Initializable":[632]},"id":1697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1652,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":633,"src":"126:63:6","symbolAliases":[{"foreign":{"id":1653,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"134:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1656,"name":"Initializable","nameLocations":["728:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"728:13:6"},"id":1657,"nodeType":"InheritanceSpecifier","src":"728:13:6"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"191:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1696,"linearizedBaseContracts":[1696,632],"name":"ContextUpgradeable","nameLocation":"706:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1662,"nodeType":"Block","src":"800:7:6","statements":[]},"id":1663,"implemented":true,"kind":"function","modifiers":[{"id":1660,"kind":"modifierInvocation","modifierName":{"id":1659,"name":"onlyInitializing","nameLocations":["783:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"783:16:6"},"nodeType":"ModifierInvocation","src":"783:16:6"}],"name":"__Context_init","nameLocation":"757:14:6","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"771:2:6"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"800:0:6"},"scope":1696,"src":"748:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"875:7:6","statements":[]},"id":1669,"implemented":true,"kind":"function","modifiers":[{"id":1666,"kind":"modifierInvocation","modifierName":{"id":1665,"name":"onlyInitializing","nameLocations":["858:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"858:16:6"},"nodeType":"ModifierInvocation","src":"858:16:6"}],"name":"__Context_init_unchained","nameLocation":"822:24:6","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"846:2:6"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"875:0:6"},"scope":1696,"src":"813:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1677,"nodeType":"Block","src":"949:34:6","statements":[{"expression":{"expression":{"id":1674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:6","memberName":"sender","nodeType":"MemberAccess","src":"966:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1673,"id":1676,"nodeType":"Return","src":"959:17:6"}]},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:6","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"906:2:6"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"940:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:6"},"scope":1696,"src":"887:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"1056:32:6","statements":[{"expression":{"expression":{"id":1683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:6","memberName":"data","nodeType":"MemberAccess","src":"1073:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1682,"id":1685,"nodeType":"Return","src":"1066:15:6"}]},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:6","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"1006:2:6"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"1040:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:6"},"scope":1696,"src":"989:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1694,"nodeType":"Block","src":"1166:25:6","statements":[{"expression":{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1691,"id":1693,"nodeType":"Return","src":"1176:8:6"}]},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:6","nodeType":"FunctionDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"1123:2:6"},"returnParameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1695,"src":"1157:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:6"},"scope":1696,"src":"1094:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1697,"src":"688:505:6","usedErrors":[381,384],"usedEvents":[389]}],"src":"101:1093:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","exportedSymbols":{"Initializable":[632],"NoncesUpgradeable":[1807]},"id":1808,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1808,"sourceUnit":633,"src":"124:63:7","symbolAliases":[{"foreign":{"id":1699,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"132:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1702,"name":"Initializable","nameLocations":["312:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"312:13:7"},"id":1703,"nodeType":"InheritanceSpecifier","src":"312:13:7"}],"canonicalName":"NoncesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"189:83:7","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1807,"linearizedBaseContracts":[1807,632],"name":"NoncesUpgradeable","nameLocation":"291:17:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"332:90:7","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1710,"name":"InvalidAccountNonce","nameLocation":"433:19:7","nodeType":"ErrorDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"account","nameLocation":"461:7:7","nodeType":"VariableDeclaration","scope":1710,"src":"453:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"currentNonce","nameLocation":"478:12:7","nodeType":"VariableDeclaration","scope":1710,"src":"470:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:39:7"},"src":"427:65:7"},{"canonicalName":"NoncesUpgradeable.NoncesStorage","documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"498:64:7","text":"@custom:storage-location erc7201:openzeppelin.storage.Nonces"},"id":1716,"members":[{"constant":false,"id":1715,"mutability":"mutable","name":"_nonces","nameLocation":"634:7:7","nodeType":"VariableDeclaration","scope":1716,"src":"598:43:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1714,"keyName":"account","keyNameLocation":"614:7:7","keyType":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"598:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"NoncesStorage","nameLocation":"574:13:7","nodeType":"StructDefinition","scope":1807,"src":"567:81:7","visibility":"public"},{"constant":true,"id":1719,"mutability":"constant","name":"NoncesStorageLocation","nameLocation":"789:21:7","nodeType":"VariableDeclaration","scope":1807,"src":"764:115:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"764:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835616234326365643632383838383235396330386163393864623165623063663730326663313530313334343331316438623130306364316266653462623030","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"813:66:7","typeDescriptions":{"typeIdentifier":"t_rational_41026498920877473550552694860415970151284396403628511442111957027090812156672_by_1","typeString":"int_const 4102...(69 digits omitted)...6672"},"value":"0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00"},"visibility":"private"},{"body":{"id":1726,"nodeType":"Block","src":"962:80:7","statements":[{"AST":{"nativeSrc":"981:55:7","nodeType":"YulBlock","src":"981:55:7","statements":[{"nativeSrc":"995:31:7","nodeType":"YulAssignment","src":"995:31:7","value":{"name":"NoncesStorageLocation","nativeSrc":"1005:21:7","nodeType":"YulIdentifier","src":"1005:21:7"},"variableNames":[{"name":"$.slot","nativeSrc":"995:6:7","nodeType":"YulIdentifier","src":"995:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1723,"isOffset":false,"isSlot":true,"src":"995:6:7","suffix":"slot","valueSize":1},{"declaration":1719,"isOffset":false,"isSlot":false,"src":"1005:21:7","valueSize":1}],"id":1725,"nodeType":"InlineAssembly","src":"972:64:7"}]},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"_getNoncesStorage","nameLocation":"895:17:7","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"912:2:7"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"$","nameLocation":"959:1:7","nodeType":"VariableDeclaration","scope":1727,"src":"937:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1722,"nodeType":"UserDefinedTypeName","pathNode":{"id":1721,"name":"NoncesStorage","nameLocations":["937:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"937:13:7"},"referencedDeclaration":1716,"src":"937:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"src":"936:25:7"},"scope":1807,"src":"886:156:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1732,"nodeType":"Block","src":"1099:7:7","statements":[]},"id":1733,"implemented":true,"kind":"function","modifiers":[{"id":1730,"kind":"modifierInvocation","modifierName":{"id":1729,"name":"onlyInitializing","nameLocations":["1082:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1082:16:7"},"nodeType":"ModifierInvocation","src":"1082:16:7"}],"name":"__Nonces_init","nameLocation":"1057:13:7","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"1070:2:7"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"1099:0:7"},"scope":1807,"src":"1048:58:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"1173:7:7","statements":[]},"id":1739,"implemented":true,"kind":"function","modifiers":[{"id":1736,"kind":"modifierInvocation","modifierName":{"id":1735,"name":"onlyInitializing","nameLocations":["1156:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1156:16:7"},"nodeType":"ModifierInvocation","src":"1156:16:7"}],"name":"__Nonces_init_unchained","nameLocation":"1121:23:7","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"1144:2:7"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"1173:0:7"},"scope":1807,"src":"1112:68:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"1328:95:7","statements":[{"assignments":[1749],"declarations":[{"constant":false,"id":1749,"mutability":"mutable","name":"$","nameLocation":"1360:1:7","nodeType":"VariableDeclaration","scope":1758,"src":"1338:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1748,"nodeType":"UserDefinedTypeName","pathNode":{"id":1747,"name":"NoncesStorage","nameLocations":["1338:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"1338:13:7"},"referencedDeclaration":1716,"src":"1338:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1752,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1750,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"1364:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1716_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1338:45:7"},{"expression":{"baseExpression":{"expression":{"id":1753,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"1400:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1402:7:7","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1715,"src":"1400:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1756,"indexExpression":{"id":1755,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"1410:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1400:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1746,"id":1757,"nodeType":"Return","src":"1393:23:7"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"1185:69:7","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1268:6:7","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"owner","nameLocation":"1283:5:7","nodeType":"VariableDeclaration","scope":1759,"src":"1275:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1274:15:7"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1759,"src":"1319:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1318:9:7"},"scope":1807,"src":"1259:164:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1780,"nodeType":"Block","src":"1606:383:7","statements":[{"assignments":[1769],"declarations":[{"constant":false,"id":1769,"mutability":"mutable","name":"$","nameLocation":"1638:1:7","nodeType":"VariableDeclaration","scope":1780,"src":"1616:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1768,"nodeType":"UserDefinedTypeName","pathNode":{"id":1767,"name":"NoncesStorage","nameLocations":["1616:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"1616:13:7"},"referencedDeclaration":1716,"src":"1616:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1772,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1770,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"1642:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1716_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1616:45:7"},{"id":1779,"nodeType":"UncheckedBlock","src":"1864:119:7","statements":[{"expression":{"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1954:18:7","subExpression":{"baseExpression":{"expression":{"id":1773,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1954:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1716_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1956:7:7","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1715,"src":"1954:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1776,"indexExpression":{"id":1775,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"1964:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1954:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1766,"id":1778,"nodeType":"Return","src":"1947:25:7"}]}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"1429:103:7","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1781,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"1546:9:7","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"owner","nameLocation":"1564:5:7","nodeType":"VariableDeclaration","scope":1781,"src":"1556:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:15:7"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1781,"src":"1597:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:9:7"},"scope":1807,"src":"1537:452:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"2173:149:7","statements":[{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"mutability":"mutable","name":"current","nameLocation":"2191:7:7","nodeType":"VariableDeclaration","scope":1805,"src":"2183:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1794,"initialValue":{"arguments":[{"id":1792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2211:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1791,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2201:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2183:34:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1795,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"2231:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1796,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2240:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2231:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1804,"nodeType":"IfStatement","src":"2227:89:7","trueBody":{"id":1803,"nodeType":"Block","src":"2249:67:7","statements":[{"errorCall":{"arguments":[{"id":1799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2290:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1800,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2297:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1798,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2270:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1802,"nodeType":"RevertStatement","src":"2263:42:7"}]}}]},"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"1995:100:7","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"2109:16:7","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"owner","nameLocation":"2134:5:7","nodeType":"VariableDeclaration","scope":1806,"src":"2126:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"nonce","nameLocation":"2149:5:7","nodeType":"VariableDeclaration","scope":1806,"src":"2141:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:30:7"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[],"src":"2173:0:7"},"scope":1807,"src":"2100:222:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1808,"src":"273:2051:7","usedErrors":[381,384,1710],"usedEvents":[389]}],"src":"99:2226:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1696],"Initializable":[632],"PausableUpgradeable":[1967]},"id":1968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1809,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1968,"sourceUnit":1697,"src":"128:67:8","symbolAliases":[{"foreign":{"id":1810,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"136:18:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1968,"sourceUnit":633,"src":"196:63:8","symbolAliases":[{"foreign":{"id":1812,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"204:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1815,"name":"Initializable","nameLocations":["742:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"742:13:8"},"id":1816,"nodeType":"InheritanceSpecifier","src":"742:13:8"},{"baseName":{"id":1817,"name":"ContextUpgradeable","nameLocations":["757:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"757:18:8"},"id":1818,"nodeType":"InheritanceSpecifier","src":"757:18:8"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"261:439:8","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1967,"linearizedBaseContracts":[1967,1696,632],"name":"PausableUpgradeable","nameLocation":"719:19:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"782:66:8","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1822,"members":[{"constant":false,"id":1821,"mutability":"mutable","name":"_paused","nameLocation":"891:7:8","nodeType":"VariableDeclaration","scope":1822,"src":"886:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1820,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:8","nodeType":"StructDefinition","scope":1967,"src":"853:52:8","visibility":"public"},{"constant":true,"id":1825,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:8","nodeType":"VariableDeclaration","scope":1967,"src":"1023:117:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:8","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1832,"nodeType":"Block","src":"1227:82:8","statements":[{"AST":{"nativeSrc":"1246:57:8","nodeType":"YulBlock","src":"1246:57:8","statements":[{"nativeSrc":"1260:33:8","nodeType":"YulAssignment","src":"1260:33:8","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:8","nodeType":"YulIdentifier","src":"1270:23:8"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:8","nodeType":"YulIdentifier","src":"1260:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1829,"isOffset":false,"isSlot":true,"src":"1260:6:8","suffix":"slot","valueSize":1},{"declaration":1825,"isOffset":false,"isSlot":false,"src":"1270:23:8","valueSize":1}],"id":1831,"nodeType":"InlineAssembly","src":"1237:66:8"}]},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:8","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[],"src":"1175:2:8"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"$","nameLocation":"1224:1:8","nodeType":"VariableDeclaration","scope":1833,"src":"1200:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1828,"nodeType":"UserDefinedTypeName","pathNode":{"id":1827,"name":"PausableStorage","nameLocations":["1200:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"1200:15:8"},"referencedDeclaration":1822,"src":"1200:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:8"},"scope":1967,"src":"1147:162:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"1315:73:8","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1838,"name":"Paused","nameLocation":"1399:6:8","nodeType":"EventDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:8","nodeType":"VariableDeclaration","scope":1838,"src":"1406:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:8"},"src":"1393:30:8"},{"anonymous":false,"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"1429:70:8","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1843,"name":"Unpaused","nameLocation":"1510:8:8","nodeType":"EventDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:8","nodeType":"VariableDeclaration","scope":1843,"src":"1519:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:8"},"src":"1504:32:8"},{"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"1542:76:8","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1846,"name":"EnforcedPause","nameLocation":"1629:13:8","nodeType":"ErrorDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[],"src":"1642:2:8"},"src":"1623:22:8"},{"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"1651:80:8","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1849,"name":"ExpectedPause","nameLocation":"1742:13:8","nodeType":"ErrorDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[],"src":"1755:2:8"},"src":"1736:22:8"},{"body":{"id":1856,"nodeType":"Block","src":"1969:47:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1852,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"1979:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"ExpressionStatement","src":"1979:19:8"},{"id":1855,"nodeType":"PlaceholderStatement","src":"2008:1:8"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"1764:175:8","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1857,"name":"whenNotPaused","nameLocation":"1953:13:8","nodeType":"ModifierDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"1966:2:8"},"src":"1944:72:8","virtual":false,"visibility":"internal"},{"body":{"id":1864,"nodeType":"Block","src":"2216:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1860,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2226:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1862,"nodeType":"ExpressionStatement","src":"2226:16:8"},{"id":1863,"nodeType":"PlaceholderStatement","src":"2252:1:8"}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"2022:167:8","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1865,"name":"whenPaused","nameLocation":"2203:10:8","nodeType":"ModifierDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[],"src":"2213:2:8"},"src":"2194:66:8","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"2319:7:8","statements":[]},"id":1871,"implemented":true,"kind":"function","modifiers":[{"id":1868,"kind":"modifierInvocation","modifierName":{"id":1867,"name":"onlyInitializing","nameLocations":["2302:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2302:16:8"},"nodeType":"ModifierInvocation","src":"2302:16:8"}],"name":"__Pausable_init","nameLocation":"2275:15:8","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"2290:2:8"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[],"src":"2319:0:8"},"scope":1967,"src":"2266:60:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"2395:7:8","statements":[]},"id":1877,"implemented":true,"kind":"function","modifiers":[{"id":1874,"kind":"modifierInvocation","modifierName":{"id":1873,"name":"onlyInitializing","nameLocations":["2378:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2378:16:8"},"nodeType":"ModifierInvocation","src":"2378:16:8"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:8","nodeType":"FunctionDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[],"src":"2366:2:8"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[],"src":"2395:0:8"},"scope":1967,"src":"2332:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"2549:92:8","statements":[{"assignments":[1885],"declarations":[{"constant":false,"id":1885,"mutability":"mutable","name":"$","nameLocation":"2583:1:8","nodeType":"VariableDeclaration","scope":1892,"src":"2559:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1884,"nodeType":"UserDefinedTypeName","pathNode":{"id":1883,"name":"PausableStorage","nameLocations":["2559:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"2559:15:8"},"referencedDeclaration":1822,"src":"2559:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1888,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1886,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"2587:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1822_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:8"},{"expression":{"expression":{"id":1889,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"2625:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:8","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2625:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1882,"id":1891,"nodeType":"Return","src":"2618:16:8"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"2407:84:8","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:8","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[],"src":"2511:2:8"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"2543:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1880,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:8"},"scope":1967,"src":"2496:145:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1904,"nodeType":"Block","src":"2760:77:8","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1897,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2774:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1903,"nodeType":"IfStatement","src":"2770:61:8","trueBody":{"id":1902,"nodeType":"Block","src":"2784:47:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1899,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"2805:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1901,"nodeType":"RevertStatement","src":"2798:22:8"}]}}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"2647:57:8","text":" @dev Throws if the contract is paused."},"id":1905,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:8","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"2735:2:8"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[],"src":"2760:0:8"},"scope":1967,"src":"2709:128:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1917,"nodeType":"Block","src":"2957:78:8","statements":[{"condition":{"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:8","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1909,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2972:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1916,"nodeType":"IfStatement","src":"2967:62:8","trueBody":{"id":1915,"nodeType":"Block","src":"2982:47:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1912,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"3003:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1914,"nodeType":"RevertStatement","src":"2996:22:8"}]}}]},"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"2843:61:8","text":" @dev Throws if the contract is not paused."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:8","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"2932:2:8"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[],"src":"2957:0:8"},"scope":1967,"src":"2909:126:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"3219:127:8","statements":[{"assignments":[1926],"declarations":[{"constant":false,"id":1926,"mutability":"mutable","name":"$","nameLocation":"3253:1:8","nodeType":"VariableDeclaration","scope":1941,"src":"3229:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1925,"nodeType":"UserDefinedTypeName","pathNode":{"id":1924,"name":"PausableStorage","nameLocations":["3229:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"3229:15:8"},"referencedDeclaration":1822,"src":"3229:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1929,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1927,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"3257:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1822_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:8"},{"expression":{"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1930,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"3288:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:8","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"3288:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1935,"nodeType":"ExpressionStatement","src":"3288:16:8"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1937,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3326:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1936,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"3319:6:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"EmitStatement","src":"3314:25:8"}]},"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"3041:124:8","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1942,"implemented":true,"kind":"function","modifiers":[{"id":1922,"kind":"modifierInvocation","modifierName":{"id":1921,"name":"whenNotPaused","nameLocations":["3205:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1857,"src":"3205:13:8"},"nodeType":"ModifierInvocation","src":"3205:13:8"}],"name":"_pause","nameLocation":"3179:6:8","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"3185:2:8"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[],"src":"3219:0:8"},"scope":1967,"src":"3170:176:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1965,"nodeType":"Block","src":"3526:130:8","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"$","nameLocation":"3560:1:8","nodeType":"VariableDeclaration","scope":1965,"src":"3536:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1949,"nodeType":"UserDefinedTypeName","pathNode":{"id":1948,"name":"PausableStorage","nameLocations":["3536:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"3536:15:8"},"referencedDeclaration":1822,"src":"3536:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1953,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1951,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"3564:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1822_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:8"},{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1954,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3595:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1822_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:8","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"3595:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1959,"nodeType":"ExpressionStatement","src":"3595:17:8"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1961,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3636:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1960,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"3627:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1964,"nodeType":"EmitStatement","src":"3622:27:8"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"3352:121:8","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1966,"implemented":true,"kind":"function","modifiers":[{"id":1946,"kind":"modifierInvocation","modifierName":{"id":1945,"name":"whenPaused","nameLocations":["3515:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"3515:10:8"},"nodeType":"ModifierInvocation","src":"3515:10:8"}],"name":"_unpause","nameLocation":"3487:8:8","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[],"src":"3495:2:8"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[],"src":"3526:0:8"},"scope":1967,"src":"3478:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1968,"src":"701:2957:8","usedErrors":[381,384,1846,1849],"usedEvents":[389,1838,1843]}],"src":"102:3557:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[632],"ReentrancyGuardUpgradeable":[2096]},"id":2097,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1969,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2097,"sourceUnit":633,"src":"134:63:9","symbolAliases":[{"foreign":{"id":1970,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"142:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1973,"name":"Initializable","nameLocations":["1142:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1142:13:9"},"id":1974,"nodeType":"InheritanceSpecifier","src":"1142:13:9"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"199:894:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2096,"linearizedBaseContracts":[2096,632],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1977,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:9","nodeType":"VariableDeclaration","scope":2096,"src":"1910:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1980,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:9","nodeType":"VariableDeclaration","scope":2096,"src":"1956:36:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"1999:73:9","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1984,"members":[{"constant":false,"id":1983,"mutability":"mutable","name":"_status","nameLocation":"2125:7:9","nodeType":"VariableDeclaration","scope":1984,"src":"2117:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:9","nodeType":"StructDefinition","scope":2096,"src":"2077:62:9","visibility":"public"},{"constant":true,"id":1987,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:9","nodeType":"VariableDeclaration","scope":2096,"src":"2264:124:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:9","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1994,"nodeType":"Block","src":"2489:89:9","statements":[{"AST":{"nativeSrc":"2508:64:9","nodeType":"YulBlock","src":"2508:64:9","statements":[{"nativeSrc":"2522:40:9","nodeType":"YulAssignment","src":"2522:40:9","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:9","nodeType":"YulIdentifier","src":"2532:30:9"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:9","nodeType":"YulIdentifier","src":"2522:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1991,"isOffset":false,"isSlot":true,"src":"2522:6:9","suffix":"slot","valueSize":1},{"declaration":1987,"isOffset":false,"isSlot":false,"src":"2532:30:9","valueSize":1}],"id":1993,"nodeType":"InlineAssembly","src":"2499:73:9"}]},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:9","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"2430:2:9"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"$","nameLocation":"2486:1:9","nodeType":"VariableDeclaration","scope":1995,"src":"2455:32:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1990,"nodeType":"UserDefinedTypeName","pathNode":{"id":1989,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":1984,"src":"2455:22:9"},"referencedDeclaration":1984,"src":"2455:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:9"},"scope":2096,"src":"2395:183:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"2584:52:9","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1998,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:9","nodeType":"ErrorDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[],"src":"2675:2:9"},"src":"2641:37:9"},{"body":{"id":2006,"nodeType":"Block","src":"2744:51:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2003,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"2754:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"2754:34:9"}]},"id":2007,"implemented":true,"kind":"function","modifiers":[{"id":2001,"kind":"modifierInvocation","modifierName":{"id":2000,"name":"onlyInitializing","nameLocations":["2727:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2727:16:9"},"nodeType":"ModifierInvocation","src":"2727:16:9"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:9","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[],"src":"2715:2:9"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[],"src":"2744:0:9"},"scope":2096,"src":"2684:111:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2024,"nodeType":"Block","src":"2871:113:9","statements":[{"assignments":[2014],"declarations":[{"constant":false,"id":2014,"mutability":"mutable","name":"$","nameLocation":"2912:1:9","nodeType":"VariableDeclaration","scope":2024,"src":"2881:32:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2013,"nodeType":"UserDefinedTypeName","pathNode":{"id":2012,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":1984,"src":"2881:22:9"},"referencedDeclaration":1984,"src":"2881:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2017,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2015,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"2916:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1984_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:9"},{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2018,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"2954:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:9","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"2954:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2021,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2966:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"2954:23:9"}]},"id":2025,"implemented":true,"kind":"function","modifiers":[{"id":2010,"kind":"modifierInvocation","modifierName":{"id":2009,"name":"onlyInitializing","nameLocations":["2854:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2854:16:9"},"nodeType":"ModifierInvocation","src":"2854:16:9"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:9","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[],"src":"2842:2:9"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[],"src":"2871:0:9"},"scope":2096,"src":"2801:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"3385:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2028,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"3395:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2030,"nodeType":"ExpressionStatement","src":"3395:21:9"},{"id":2031,"nodeType":"PlaceholderStatement","src":"3426:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2032,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"3437:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2034,"nodeType":"ExpressionStatement","src":"3437:20:9"}]},"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"2990:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2036,"name":"nonReentrant","nameLocation":"3370:12:9","nodeType":"ModifierDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"3382:2:9"},"src":"3361:103:9","virtual":false,"visibility":"internal"},{"body":{"id":2060,"nodeType":"Block","src":"3509:345:9","statements":[{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"$","nameLocation":"3550:1:9","nodeType":"VariableDeclaration","scope":2060,"src":"3519:32:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2040,"nodeType":"UserDefinedTypeName","pathNode":{"id":2039,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":1984,"src":"3519:22:9"},"referencedDeclaration":1984,"src":"3519:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2044,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2042,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3554:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1984_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2045,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3670:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:9","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"3670:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2047,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2053,"nodeType":"IfStatement","src":"3666:88:9","trueBody":{"id":2052,"nodeType":"Block","src":"3692:62:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2049,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"3713:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"RevertStatement","src":"3706:37:9"}]}},{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2054,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3828:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:9","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"3828:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2057,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"3828:19:9"}]},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:9","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[],"src":"3498:2:9"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[],"src":"3509:0:9"},"scope":2096,"src":"3470:384:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2076,"nodeType":"Block","src":"3898:245:9","statements":[{"assignments":[2066],"declarations":[{"constant":false,"id":2066,"mutability":"mutable","name":"$","nameLocation":"3939:1:9","nodeType":"VariableDeclaration","scope":2076,"src":"3908:32:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2065,"nodeType":"UserDefinedTypeName","pathNode":{"id":2064,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":1984,"src":"3908:22:9"},"referencedDeclaration":1984,"src":"3908:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2069,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3943:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1984_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:9"},{"expression":{"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2070,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4113:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:9","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"4113:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2073,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"4125:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2075,"nodeType":"ExpressionStatement","src":"4113:23:9"}]},"id":2077,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:9","nodeType":"FunctionDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"3887:2:9"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[],"src":"3898:0:9"},"scope":2096,"src":"3860:283:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2094,"nodeType":"Block","src":"4386:117:9","statements":[{"assignments":[2085],"declarations":[{"constant":false,"id":2085,"mutability":"mutable","name":"$","nameLocation":"4427:1:9","nodeType":"VariableDeclaration","scope":2094,"src":"4396:32:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2084,"nodeType":"UserDefinedTypeName","pathNode":{"id":2083,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":1984,"src":"4396:22:9"},"referencedDeclaration":1984,"src":"4396:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2088,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2086,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4431:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1984_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2089,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"4476:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1984_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:9","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"4476:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2091,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"4489:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2082,"id":2093,"nodeType":"Return","src":"4469:27:9"}]},"documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"4149:168:9","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:9","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"4354:2:9"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"4380:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2080,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:9"},"scope":2096,"src":"4322:181:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2097,"src":"1094:3411:9","usedErrors":[381,384,1998],"usedEvents":[389]}],"src":"109:4397:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"EIP712Upgradeable":[2440],"IERC5267":[2609],"Initializable":[632],"MessageHashUtils":[5494]},"id":2441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2098,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":2100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2441,"sourceUnit":5495,"src":"139:97:10","symbolAliases":[{"foreign":{"id":2099,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"147:16:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"@openzeppelin/contracts/interfaces/IERC5267.sol","id":2102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2441,"sourceUnit":2610,"src":"237:73:10","symbolAliases":[{"foreign":{"id":2101,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"245:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2441,"sourceUnit":633,"src":"311:66:10","symbolAliases":[{"foreign":{"id":2103,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"319:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2106,"name":"Initializable","nameLocations":["1884:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1884:13:10"},"id":2107,"nodeType":"InheritanceSpecifier","src":"1884:13:10"},{"baseName":{"id":2108,"name":"IERC5267","nameLocations":["1899:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2609,"src":"1899:8:10"},"id":2109,"nodeType":"InheritanceSpecifier","src":"1899:8:10"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"379:1465:10","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator\n each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage."},"fullyImplemented":true,"id":2440,"linearizedBaseContracts":[2440,2609,632],"name":"EIP712Upgradeable","nameLocation":"1863:17:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2114,"mutability":"constant","name":"TYPE_HASH","nameLocation":"1939:9:10","nodeType":"VariableDeclaration","scope":2440,"src":"1914:140:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1914:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1969:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2111,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1959:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"EIP712Upgradeable.EIP712Storage","documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"2061:64:10","text":"@custom:storage-location erc7201:openzeppelin.storage.EIP712"},"id":2126,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"_hashedName","nameLocation":"2218:11:10","nodeType":"VariableDeclaration","scope":2126,"src":"2210:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2210:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2299:14:10","nodeType":"VariableDeclaration","scope":2126,"src":"2291:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2291:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"_name","nameLocation":"2331:5:10","nodeType":"VariableDeclaration","scope":2126,"src":"2324:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2122,"name":"string","nodeType":"ElementaryTypeName","src":"2324:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"_version","nameLocation":"2353:8:10","nodeType":"VariableDeclaration","scope":2126,"src":"2346:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2124,"name":"string","nodeType":"ElementaryTypeName","src":"2346:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EIP712Storage","nameLocation":"2137:13:10","nodeType":"StructDefinition","scope":2440,"src":"2130:238:10","visibility":"public"},{"constant":true,"id":2129,"mutability":"constant","name":"EIP712StorageLocation","nameLocation":"2509:21:10","nodeType":"VariableDeclaration","scope":2440,"src":"2484:115:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313661343664393432363163373531376363386666383966363163306365393335393865336338343938303130313164656536343961366135353764313030","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2533:66:10","typeDescriptions":{"typeIdentifier":"t_rational_73010143390315934406010559831118728393600729754696197287367516085911467577600_by_1","typeString":"int_const 7301...(69 digits omitted)...7600"},"value":"0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100"},"visibility":"private"},{"body":{"id":2136,"nodeType":"Block","src":"2682:80:10","statements":[{"AST":{"nativeSrc":"2701:55:10","nodeType":"YulBlock","src":"2701:55:10","statements":[{"nativeSrc":"2715:31:10","nodeType":"YulAssignment","src":"2715:31:10","value":{"name":"EIP712StorageLocation","nativeSrc":"2725:21:10","nodeType":"YulIdentifier","src":"2725:21:10"},"variableNames":[{"name":"$.slot","nativeSrc":"2715:6:10","nodeType":"YulIdentifier","src":"2715:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2133,"isOffset":false,"isSlot":true,"src":"2715:6:10","suffix":"slot","valueSize":1},{"declaration":2129,"isOffset":false,"isSlot":false,"src":"2725:21:10","valueSize":1}],"id":2135,"nodeType":"InlineAssembly","src":"2692:64:10"}]},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"_getEIP712Storage","nameLocation":"2615:17:10","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[],"src":"2632:2:10"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"$","nameLocation":"2679:1:10","nodeType":"VariableDeclaration","scope":2137,"src":"2657:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2132,"nodeType":"UserDefinedTypeName","pathNode":{"id":2131,"name":"EIP712Storage","nameLocations":["2657:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"2657:13:10"},"referencedDeclaration":2126,"src":"2657:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"src":"2656:25:10"},"scope":2440,"src":"2606:156:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2152,"nodeType":"Block","src":"3424:55:10","statements":[{"expression":{"arguments":[{"id":2148,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"3458:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2149,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"3464:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2147,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"3434:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3434:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"ExpressionStatement","src":"3434:38:10"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"2768:559:10","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2153,"implemented":true,"kind":"function","modifiers":[{"id":2145,"kind":"modifierInvocation","modifierName":{"id":2144,"name":"onlyInitializing","nameLocations":["3407:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3407:16:10"},"nodeType":"ModifierInvocation","src":"3407:16:10"}],"name":"__EIP712_init","nameLocation":"3341:13:10","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"name","nameLocation":"3369:4:10","nodeType":"VariableDeclaration","scope":2153,"src":"3355:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2139,"name":"string","nodeType":"ElementaryTypeName","src":"3355:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"version","nameLocation":"3389:7:10","nodeType":"VariableDeclaration","scope":2153,"src":"3375:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2141,"name":"string","nodeType":"ElementaryTypeName","src":"3375:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3354:43:10"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[],"src":"3424:0:10"},"scope":2440,"src":"3332:147:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2192,"nodeType":"Block","src":"3587:228:10","statements":[{"assignments":[2164],"declarations":[{"constant":false,"id":2164,"mutability":"mutable","name":"$","nameLocation":"3619:1:10","nodeType":"VariableDeclaration","scope":2192,"src":"3597:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2163,"nodeType":"UserDefinedTypeName","pathNode":{"id":2162,"name":"EIP712Storage","nameLocations":["3597:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"3597:13:10"},"referencedDeclaration":2126,"src":"3597:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2167,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2165,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"3623:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2126_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3597:45:10"},{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2168,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"3652:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3654:5:10","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":2123,"src":"3652:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2171,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"3662:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3652:14:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2173,"nodeType":"ExpressionStatement","src":"3652:14:10"},{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2174,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"3676:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3678:8:10","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":2125,"src":"3676:10:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2177,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"3689:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3676:20:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2179,"nodeType":"ExpressionStatement","src":"3676:20:10"},{"expression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2180,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"3761:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3763:11:10","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"3761:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3777:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3761:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2185,"nodeType":"ExpressionStatement","src":"3761:17:10"},{"expression":{"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2186,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"3788:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3790:14:10","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"3788:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3807:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3788:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2191,"nodeType":"ExpressionStatement","src":"3788:20:10"}]},"id":2193,"implemented":true,"kind":"function","modifiers":[{"id":2160,"kind":"modifierInvocation","modifierName":{"id":2159,"name":"onlyInitializing","nameLocations":["3570:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3570:16:10"},"nodeType":"ModifierInvocation","src":"3570:16:10"}],"name":"__EIP712_init_unchained","nameLocation":"3494:23:10","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"name","nameLocation":"3532:4:10","nodeType":"VariableDeclaration","scope":2193,"src":"3518:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2154,"name":"string","nodeType":"ElementaryTypeName","src":"3518:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"version","nameLocation":"3552:7:10","nodeType":"VariableDeclaration","scope":2193,"src":"3538:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2156,"name":"string","nodeType":"ElementaryTypeName","src":"3538:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3517:43:10"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[],"src":"3587:0:10"},"scope":2440,"src":"3485:330:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"3963:47:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2199,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"3980:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3980:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2198,"id":2201,"nodeType":"Return","src":"3973:30:10"}]},"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"3821:75:10","text":" @dev Returns the domain separator for the current chain."},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3910:18:10","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[],"src":"3928:2:10"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2203,"src":"3954:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3954:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3953:9:10"},"scope":2440,"src":"3901:109:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2225,"nodeType":"Block","src":"4080:127:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2211,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"4118:9:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2212,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"4129:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2214,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4148:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2216,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4170:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4176:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"4170:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2220,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4193:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2440","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2440","typeString":"contract EIP712Upgradeable"}],"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4185:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"4185:7:10","typeDescriptions":{}}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4185:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2209,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4107:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4111:6:10","memberName":"encode","nodeType":"MemberAccess","src":"4107:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2208,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4097:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4097:103:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2207,"id":2224,"nodeType":"Return","src":"4090:110:10"}]},"id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4025:21:10","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[],"src":"4046:2:10"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2226,"src":"4071:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4071:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4070:9:10"},"scope":2440,"src":"4016:191:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2241,"nodeType":"Block","src":"4918:90:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2236,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"4968:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4968:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2238,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4990:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2234,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"4935:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$5494_$","typeString":"type(library MessageHashUtils)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4952:15:10","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":5493,"src":"4935:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2233,"id":2240,"nodeType":"Return","src":"4928:73:10"}]},"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"4213:614:10","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4841:16:10","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"structHash","nameLocation":"4866:10:10","nodeType":"VariableDeclaration","scope":2242,"src":"4858:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4858:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4857:20:10"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2242,"src":"4909:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4909:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4908:9:10"},"scope":2440,"src":"4832:176:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2608],"body":{"id":2302,"nodeType":"Block","src":"5371:575:10","statements":[{"assignments":[2263],"declarations":[{"constant":false,"id":2263,"mutability":"mutable","name":"$","nameLocation":"5403:1:10","nodeType":"VariableDeclaration","scope":2302,"src":"5381:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2262,"nodeType":"UserDefinedTypeName","pathNode":{"id":2261,"name":"EIP712Storage","nameLocations":["5381:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"5381:13:10"},"referencedDeclaration":2126,"src":"5381:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2266,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2264,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"5407:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2126_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5381:45:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2268,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5647:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5649:11:10","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"5647:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5647:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5669:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5671:14:10","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"5669:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5689:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5647:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5692:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":2267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5639:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5639:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"ExpressionStatement","src":"5639:77:10"},{"expression":{"components":[{"hexValue":"0f","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5748:7:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2281,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"5778:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5778:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2283,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"5805:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5805:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2285,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5835:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5841:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"5835:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2289,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5870:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2440","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2440","typeString":"contract EIP712Upgradeable"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5862:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"5862:7:10","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5897:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5889:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5889:7:10","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5927:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5913:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ArrayTypeName","src":"5917:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5913:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5734:205:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2260,"id":2301,"nodeType":"Return","src":"5727:212:10"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"5014:24:10","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5052:12:10","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"5064:2:10"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"fields","nameLocation":"5148:6:10","nodeType":"VariableDeclaration","scope":2303,"src":"5141:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5141:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"name","nameLocation":"5182:4:10","nodeType":"VariableDeclaration","scope":2303,"src":"5168:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2247,"name":"string","nodeType":"ElementaryTypeName","src":"5168:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"version","nameLocation":"5214:7:10","nodeType":"VariableDeclaration","scope":2303,"src":"5200:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2249,"name":"string","nodeType":"ElementaryTypeName","src":"5200:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"chainId","nameLocation":"5243:7:10","nodeType":"VariableDeclaration","scope":2303,"src":"5235:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"5235:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"verifyingContract","nameLocation":"5272:17:10","nodeType":"VariableDeclaration","scope":2303,"src":"5264:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"5264:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"salt","nameLocation":"5311:4:10","nodeType":"VariableDeclaration","scope":2303,"src":"5303:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5303:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"extensions","nameLocation":"5346:10:10","nodeType":"VariableDeclaration","scope":2303,"src":"5329:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"5329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ArrayTypeName","src":"5329:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5127:239:10"},"scope":2440,"src":"5043:903:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2318,"nodeType":"Block","src":"6239:86:10","statements":[{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"$","nameLocation":"6271:1:10","nodeType":"VariableDeclaration","scope":2318,"src":"6249:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"EIP712Storage","nameLocations":["6249:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"6249:13:10"},"referencedDeclaration":2126,"src":"6249:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2314,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2312,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6275:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2126_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6275:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6249:45:10"},{"expression":{"expression":{"id":2315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6311:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6313:5:10","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":2123,"src":"6311:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2308,"id":2317,"nodeType":"Return","src":"6304:14:10"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"5952:213:10","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6179:11:10","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"6190:2:10"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"6224:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2306,"name":"string","nodeType":"ElementaryTypeName","src":"6224:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6223:15:10"},"scope":2440,"src":"6170:155:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"6624:89:10","statements":[{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"$","nameLocation":"6656:1:10","nodeType":"VariableDeclaration","scope":2334,"src":"6634:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2326,"nodeType":"UserDefinedTypeName","pathNode":{"id":2325,"name":"EIP712Storage","nameLocations":["6634:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"6634:13:10"},"referencedDeclaration":2126,"src":"6634:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2328,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6660:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2126_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6660:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6634:45:10"},{"expression":{"expression":{"id":2331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"6696:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6698:8:10","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":2125,"src":"6696:10:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2324,"id":2333,"nodeType":"Return","src":"6689:17:10"}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"6331:216:10","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6561:14:10","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"6575:2:10"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"6609:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"6609:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6608:15:10"},"scope":2440,"src":"6552:161:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2386,"nodeType":"Block","src":"6987:628:10","statements":[{"assignments":[2343],"declarations":[{"constant":false,"id":2343,"mutability":"mutable","name":"$","nameLocation":"7019:1:10","nodeType":"VariableDeclaration","scope":2386,"src":"6997:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2342,"nodeType":"UserDefinedTypeName","pathNode":{"id":2341,"name":"EIP712Storage","nameLocations":["6997:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"6997:13:10"},"referencedDeclaration":2126,"src":"6997:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2346,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2344,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"7023:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2126_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7023:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6997:45:10"},{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"name","nameLocation":"7066:4:10","nodeType":"VariableDeclaration","scope":2386,"src":"7052:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2347,"name":"string","nodeType":"ElementaryTypeName","src":"7052:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2351,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2349,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"7073:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7073:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7052:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2354,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7106:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7100:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2352,"name":"bytes","nodeType":"ElementaryTypeName","src":"7100:5:10","typeDescriptions":{}}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7100:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7112:6:10","memberName":"length","nodeType":"MemberAccess","src":"7100:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7121:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7100:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2384,"nodeType":"Block","src":"7184:425:10","statements":[{"assignments":[2368],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"hashedName","nameLocation":"7429:10:10","nodeType":"VariableDeclaration","scope":2384,"src":"7421:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7421:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2371,"initialValue":{"expression":{"id":2369,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"7442:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7444:11:10","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"7442:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7421:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7473:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7487:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7473:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2382,"nodeType":"Block","src":"7546:53:10","statements":[{"expression":{"arguments":[{"hexValue":"","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7581:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2378,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7571:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7571:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2340,"id":2381,"nodeType":"Return","src":"7564:20:10"}]},"id":2383,"nodeType":"IfStatement","src":"7469:130:10","trueBody":{"id":2377,"nodeType":"Block","src":"7490:50:10","statements":[{"expression":{"id":2375,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7515:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2340,"id":2376,"nodeType":"Return","src":"7508:17:10"}]}}]},"id":2385,"nodeType":"IfStatement","src":"7096:513:10","trueBody":{"id":2366,"nodeType":"Block","src":"7124:54:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2362,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7161:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7155:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2360,"name":"bytes","nodeType":"ElementaryTypeName","src":"7155:5:10","typeDescriptions":{}}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7155:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2359,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7145:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7145:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2340,"id":2365,"nodeType":"Return","src":"7138:29:10"}]}}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"6719:204:10","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":2387,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"6937:15:10","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"6952:2:10"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2387,"src":"6978:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6978:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6977:9:10"},"scope":2440,"src":"6928:687:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2438,"nodeType":"Block","src":"7898:661:10","statements":[{"assignments":[2395],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"$","nameLocation":"7930:1:10","nodeType":"VariableDeclaration","scope":2438,"src":"7908:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2394,"nodeType":"UserDefinedTypeName","pathNode":{"id":2393,"name":"EIP712Storage","nameLocations":["7908:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"7908:13:10"},"referencedDeclaration":2126,"src":"7908:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2398,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2396,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"7934:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2126_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7908:45:10"},{"assignments":[2400],"declarations":[{"constant":false,"id":2400,"mutability":"mutable","name":"version","nameLocation":"7977:7:10","nodeType":"VariableDeclaration","scope":2438,"src":"7963:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2399,"name":"string","nodeType":"ElementaryTypeName","src":"7963:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2403,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2401,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"7987:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7987:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7963:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2406,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8023:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8017:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"8017:5:10","typeDescriptions":{}}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8017:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8032:6:10","memberName":"length","nodeType":"MemberAccess","src":"8017:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8041:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8017:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2436,"nodeType":"Block","src":"8107:446:10","statements":[{"assignments":[2420],"declarations":[{"constant":false,"id":2420,"mutability":"mutable","name":"hashedVersion","nameLocation":"8361:13:10","nodeType":"VariableDeclaration","scope":2436,"src":"8353:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8353:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2423,"initialValue":{"expression":{"id":2421,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"8377:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2126_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8379:14:10","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"8377:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8353:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"8411:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8428:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8411:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2434,"nodeType":"Block","src":"8490:53:10","statements":[{"expression":{"arguments":[{"hexValue":"","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8525:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2430,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8515:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8515:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2392,"id":2433,"nodeType":"Return","src":"8508:20:10"}]},"id":2435,"nodeType":"IfStatement","src":"8407:136:10","trueBody":{"id":2429,"nodeType":"Block","src":"8431:53:10","statements":[{"expression":{"id":2427,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"8456:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2392,"id":2428,"nodeType":"Return","src":"8449:20:10"}]}}]},"id":2437,"nodeType":"IfStatement","src":"8013:540:10","trueBody":{"id":2418,"nodeType":"Block","src":"8044:57:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2414,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8081:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8075:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2412,"name":"bytes","nodeType":"ElementaryTypeName","src":"8075:5:10","typeDescriptions":{}}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8075:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2411,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8065:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2392,"id":2417,"nodeType":"Return","src":"8058:32:10"}]}}]},"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"7621:210:10","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7845:18:10","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"7863:2:10"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"7889:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7889:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7888:9:10"},"scope":2440,"src":"7836:723:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2441,"src":"1845:6716:10","usedErrors":[381,384],"usedEvents":[389,2589]}],"src":"113:8449:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2480],"IERC165":[5506],"Initializable":[632]},"id":2481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2481,"sourceUnit":5507,"src":"140:80:11","symbolAliases":[{"foreign":{"id":2443,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2481,"sourceUnit":633,"src":"221:66:11","symbolAliases":[{"foreign":{"id":2445,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"229:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2448,"name":"Initializable","nameLocations":["808:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"808:13:11"},"id":2449,"nodeType":"InheritanceSpecifier","src":"808:13:11"},{"baseName":{"id":2450,"name":"IERC165","nameLocations":["823:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":5506,"src":"823:7:11"},"id":2451,"nodeType":"InheritanceSpecifier","src":"823:7:11"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"289:479:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2480,"linearizedBaseContracts":[2480,5506,632],"name":"ERC165Upgradeable","nameLocation":"787:17:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2456,"nodeType":"Block","src":"888:7:11","statements":[]},"id":2457,"implemented":true,"kind":"function","modifiers":[{"id":2454,"kind":"modifierInvocation","modifierName":{"id":2453,"name":"onlyInitializing","nameLocations":["871:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"871:16:11"},"nodeType":"ModifierInvocation","src":"871:16:11"}],"name":"__ERC165_init","nameLocation":"846:13:11","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"859:2:11"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[],"src":"888:0:11"},"scope":2480,"src":"837:58:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2462,"nodeType":"Block","src":"962:7:11","statements":[]},"id":2463,"implemented":true,"kind":"function","modifiers":[{"id":2460,"kind":"modifierInvocation","modifierName":{"id":2459,"name":"onlyInitializing","nameLocations":["945:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"945:16:11"},"nodeType":"ModifierInvocation","src":"945:16:11"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:11","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[],"src":"933:2:11"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[],"src":"962:0:11"},"scope":2480,"src":"901:68:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5505],"body":{"id":2478,"nodeType":"Block","src":"1084:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"1101:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2473,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5506_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5506_$","typeString":"type(contract IERC165)"}],"id":2472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1116:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5506","typeString":"type(contract IERC165)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1130:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1116:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1101:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2470,"id":2477,"nodeType":"Return","src":"1094:47:11"}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"974:23:11","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1011:17:11","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"interfaceId","nameLocation":"1036:11:11","nodeType":"VariableDeclaration","scope":2479,"src":"1029:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2465,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:20:11"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"1078:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2468,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1077:6:11"},"scope":2480,"src":"1002:146:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2481,"src":"769:381:11","usedErrors":[381,384],"usedEvents":[389]}],"src":"114:1037:11"},"id":11},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[2563]},"id":2564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2482,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"135:90:12","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":2563,"linearizedBaseContracts":[2563],"name":"IAccessControl","nameLocation":"236:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"257:56:12","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":2490,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:12","nodeType":"ErrorDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"account","nameLocation":"365:7:12","nodeType":"VariableDeclaration","scope":2490,"src":"357:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:12","nodeType":"VariableDeclaration","scope":2490,"src":"374:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:12"},"src":"318:76:12"},{"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"400:148:12","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":2493,"name":"AccessControlBadConfirmation","nameLocation":"559:28:12","nodeType":"ErrorDefinition","parameters":{"id":2492,"nodeType":"ParameterList","parameters":[],"src":"587:2:12"},"src":"553:37:12"},{"anonymous":false,"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"596:254:12","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":2502,"name":"RoleAdminChanged","nameLocation":"861:16:12","nodeType":"EventDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:12","nodeType":"VariableDeclaration","scope":2502,"src":"878:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2498,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:12","nodeType":"VariableDeclaration","scope":2502,"src":"900:33:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2500,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:12","nodeType":"VariableDeclaration","scope":2502,"src":"935:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:12"},"src":"855:110:12"},{"anonymous":false,"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"971:295:12","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":2511,"name":"RoleGranted","nameLocation":"1277:11:12","nodeType":"EventDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:12","nodeType":"VariableDeclaration","scope":2511,"src":"1289:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2507,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:12","nodeType":"VariableDeclaration","scope":2511,"src":"1311:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2509,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:12","nodeType":"VariableDeclaration","scope":2511,"src":"1336:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:12"},"src":"1271:89:12"},{"anonymous":false,"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"1366:275:12","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":2520,"name":"RoleRevoked","nameLocation":"1652:11:12","nodeType":"EventDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:12","nodeType":"VariableDeclaration","scope":2520,"src":"1664:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2516,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:12","nodeType":"VariableDeclaration","scope":2520,"src":"1686:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2515,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2518,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:12","nodeType":"VariableDeclaration","scope":2520,"src":"1711:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:12"},"src":"1646:89:12"},{"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"1741:76:12","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":2530,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:12","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"role","nameLocation":"1847:4:12","nodeType":"VariableDeclaration","scope":2530,"src":"1839:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"account","nameLocation":"1861:7:12","nodeType":"VariableDeclaration","scope":2530,"src":"1853:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:12"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"1893:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:12"},"scope":2563,"src":"1822:77:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"1905:184:12","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":2538,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:12","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"role","nameLocation":"2124:4:12","nodeType":"VariableDeclaration","scope":2538,"src":"2116:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:12"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2538,"src":"2153:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:12"},"scope":2563,"src":"2094:68:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"2168:239:12","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":2546,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:12","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"role","nameLocation":"2439:4:12","nodeType":"VariableDeclaration","scope":2546,"src":"2431:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"account","nameLocation":"2453:7:12","nodeType":"VariableDeclaration","scope":2546,"src":"2445:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:12"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[],"src":"2470:0:12"},"scope":2563,"src":"2412:59:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"2477:223:12","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":2554,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:12","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"role","nameLocation":"2733:4:12","nodeType":"VariableDeclaration","scope":2554,"src":"2725:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"account","nameLocation":"2747:7:12","nodeType":"VariableDeclaration","scope":2554,"src":"2739:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:12"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"2764:0:12"},"scope":2563,"src":"2705:60:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"2771:491:12","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:12","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"role","nameLocation":"3297:4:12","nodeType":"VariableDeclaration","scope":2562,"src":"3289:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:12","nodeType":"VariableDeclaration","scope":2562,"src":"3303:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:12"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[],"src":"3339:0:12"},"scope":2563,"src":"3267:73:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2564,"src":"226:3116:12","usedErrors":[2490,2493],"usedEvents":[2502,2511,2520]}],"src":"109:3234:12"},"id":12},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2584]},"id":2585,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2565,"literals":["solidity",">=","0.4",".11"],"nodeType":"PragmaDirective","src":"107:25:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"134:101:13","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2584,"linearizedBaseContracts":[2584],"name":"IERC1967","nameLocation":"246:8:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"261:68:13","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2571,"name":"Upgraded","nameLocation":"340:8:13","nodeType":"EventDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"365:14:13","nodeType":"VariableDeclaration","scope":2571,"src":"349:30:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:32:13"},"src":"334:47:13"},{"anonymous":false,"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"387:67:13","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2578,"name":"AdminChanged","nameLocation":"465:12:13","nodeType":"EventDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"486:13:13","nodeType":"VariableDeclaration","scope":2578,"src":"478:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2576,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"509:8:13","nodeType":"VariableDeclaration","scope":2578,"src":"501:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:41:13"},"src":"459:60:13"},{"anonymous":false,"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"525:59:13","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2583,"name":"BeaconUpgraded","nameLocation":"595:14:13","nodeType":"EventDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"626:6:13","nodeType":"VariableDeclaration","scope":2583,"src":"610:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:24:13"},"src":"589:45:13"}],"scope":2585,"src":"236:400:13","usedErrors":[],"usedEvents":[2571,2578,2583]}],"src":"107:530:13"},"id":13},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[2609]},"id":2610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2586,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2609,"linearizedBaseContracts":[2609],"name":"IERC5267","nameLocation":"144:8:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2587,"nodeType":"StructuredDocumentation","src":"159:84:14","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":2589,"name":"EIP712DomainChanged","nameLocation":"254:19:14","nodeType":"EventDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[],"src":"273:2:14"},"src":"248:28:14"},{"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"282:140:14","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":2608,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:14","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"448:2:14"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"fields","nameLocation":"518:6:14","nodeType":"VariableDeclaration","scope":2608,"src":"511:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2592,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"name","nameLocation":"552:4:14","nodeType":"VariableDeclaration","scope":2608,"src":"538:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2594,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"version","nameLocation":"584:7:14","nodeType":"VariableDeclaration","scope":2608,"src":"570:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2596,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"chainId","nameLocation":"613:7:14","nodeType":"VariableDeclaration","scope":2608,"src":"605:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:14","nodeType":"VariableDeclaration","scope":2608,"src":"634:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"salt","nameLocation":"681:4:14","nodeType":"VariableDeclaration","scope":2608,"src":"673:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"extensions","nameLocation":"716:10:14","nodeType":"VariableDeclaration","scope":2608,"src":"699:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2605,"nodeType":"ArrayTypeName","src":"699:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:14"},"scope":2609,"src":"427:310:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2610,"src":"134:605:14","usedErrors":[],"usedEvents":[2589]}],"src":"107:633:14"},"id":14},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2619]},"id":2620,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2611,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"113:25:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"140:204:15","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2619,"linearizedBaseContracts":[2619],"name":"IERC1822Proxiable","nameLocation":"355:17:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"379:438:15","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2618,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"831:13:15","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[],"src":"844:2:15"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2618,"src":"870:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"869:9:15"},"scope":2619,"src":"822:57:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2620,"src":"345:536:15","usedErrors":[],"usedEvents":[]}],"src":"113:769:15"},"id":15},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2756],"IERC20Errors":[2661],"IERC721Errors":[2709]},"id":2757,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2621,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"138:141:16","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2661,"linearizedBaseContracts":[2661],"name":"IERC20Errors","nameLocation":"290:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"309:309:16","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2631,"name":"ERC20InsufficientBalance","nameLocation":"629:24:16","nodeType":"ErrorDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"sender","nameLocation":"662:6:16","nodeType":"VariableDeclaration","scope":2631,"src":"654:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"balance","nameLocation":"678:7:16","nodeType":"VariableDeclaration","scope":2631,"src":"670:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"needed","nameLocation":"695:6:16","nodeType":"VariableDeclaration","scope":2631,"src":"687:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:16"},"src":"623:80:16"},{"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"709:152:16","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2636,"name":"ERC20InvalidSender","nameLocation":"872:18:16","nodeType":"ErrorDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"sender","nameLocation":"899:6:16","nodeType":"VariableDeclaration","scope":2636,"src":"891:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:16"},"src":"866:41:16"},{"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"913:159:16","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2641,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:16","nodeType":"ErrorDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:16","nodeType":"VariableDeclaration","scope":2641,"src":"1104:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:16"},"src":"1077:45:16"},{"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"1128:345:16","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2650,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:16","nodeType":"ErrorDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"spender","nameLocation":"1519:7:16","nodeType":"VariableDeclaration","scope":2650,"src":"1511:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:16","nodeType":"VariableDeclaration","scope":2650,"src":"1528:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"needed","nameLocation":"1555:6:16","nodeType":"VariableDeclaration","scope":2650,"src":"1547:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:16"},"src":"1478:85:16"},{"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"1569:174:16","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2655,"name":"ERC20InvalidApprover","nameLocation":"1754:20:16","nodeType":"ErrorDefinition","parameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"approver","nameLocation":"1783:8:16","nodeType":"VariableDeclaration","scope":2655,"src":"1775:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:16"},"src":"1748:45:16"},{"documentation":{"id":2656,"nodeType":"StructuredDocumentation","src":"1799:195:16","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2660,"name":"ERC20InvalidSpender","nameLocation":"2005:19:16","nodeType":"ErrorDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"spender","nameLocation":"2033:7:16","nodeType":"VariableDeclaration","scope":2660,"src":"2025:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:16"},"src":"1999:43:16"}],"scope":2757,"src":"280:1764:16","usedErrors":[2631,2636,2641,2650,2655,2660],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"2046:143:16","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2709,"linearizedBaseContracts":[2709],"name":"IERC721Errors","nameLocation":"2200:13:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"2220:219:16","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2667,"name":"ERC721InvalidOwner","nameLocation":"2450:18:16","nodeType":"ErrorDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"owner","nameLocation":"2477:5:16","nodeType":"VariableDeclaration","scope":2667,"src":"2469:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:16"},"src":"2444:40:16"},{"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"2490:132:16","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2672,"name":"ERC721NonexistentToken","nameLocation":"2633:22:16","nodeType":"ErrorDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:16","nodeType":"VariableDeclaration","scope":2672,"src":"2656:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:16"},"src":"2627:46:16"},{"documentation":{"id":2673,"nodeType":"StructuredDocumentation","src":"2679:289:16","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2681,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:16","nodeType":"ErrorDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"sender","nameLocation":"3008:6:16","nodeType":"VariableDeclaration","scope":2681,"src":"3000:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:16","nodeType":"VariableDeclaration","scope":2681,"src":"3016:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"owner","nameLocation":"3041:5:16","nodeType":"VariableDeclaration","scope":2681,"src":"3033:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:16"},"src":"2973:75:16"},{"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"3054:152:16","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2686,"name":"ERC721InvalidSender","nameLocation":"3217:19:16","nodeType":"ErrorDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"sender","nameLocation":"3245:6:16","nodeType":"VariableDeclaration","scope":2686,"src":"3237:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:16"},"src":"3211:42:16"},{"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"3259:159:16","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2691,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:16","nodeType":"ErrorDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:16","nodeType":"VariableDeclaration","scope":2691,"src":"3451:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:16"},"src":"3423:46:16"},{"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"3475:247:16","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2698,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:16","nodeType":"ErrorDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"operator","nameLocation":"3768:8:16","nodeType":"VariableDeclaration","scope":2698,"src":"3760:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:16","nodeType":"VariableDeclaration","scope":2698,"src":"3778:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:16"},"src":"3727:68:16"},{"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"3801:174:16","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2703,"name":"ERC721InvalidApprover","nameLocation":"3986:21:16","nodeType":"ErrorDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"approver","nameLocation":"4016:8:16","nodeType":"VariableDeclaration","scope":2703,"src":"4008:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:16"},"src":"3980:46:16"},{"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"4032:197:16","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2708,"name":"ERC721InvalidOperator","nameLocation":"4240:21:16","nodeType":"ErrorDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"operator","nameLocation":"4270:8:16","nodeType":"VariableDeclaration","scope":2708,"src":"4262:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:16"},"src":"4234:46:16"}],"scope":2757,"src":"2190:2092:16","usedErrors":[2667,2672,2681,2686,2691,2698,2703,2708],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"4284:145:16","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2756,"linearizedBaseContracts":[2756],"name":"IERC1155Errors","nameLocation":"4440:14:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"4461:361:16","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2721,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:16","nodeType":"ErrorDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"sender","nameLocation":"4868:6:16","nodeType":"VariableDeclaration","scope":2721,"src":"4860:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"balance","nameLocation":"4884:7:16","nodeType":"VariableDeclaration","scope":2721,"src":"4876:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"needed","nameLocation":"4901:6:16","nodeType":"VariableDeclaration","scope":2721,"src":"4893:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:16","nodeType":"VariableDeclaration","scope":2721,"src":"4909:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:16"},"src":"4827:99:16"},{"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"4932:152:16","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2726,"name":"ERC1155InvalidSender","nameLocation":"5095:20:16","nodeType":"ErrorDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"sender","nameLocation":"5124:6:16","nodeType":"VariableDeclaration","scope":2726,"src":"5116:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:16"},"src":"5089:43:16"},{"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"5138:159:16","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2731,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:16","nodeType":"ErrorDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:16","nodeType":"VariableDeclaration","scope":2731,"src":"5331:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2728,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:16"},"src":"5302:47:16"},{"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"5355:256:16","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2738,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:16","nodeType":"ErrorDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"operator","nameLocation":"5659:8:16","nodeType":"VariableDeclaration","scope":2738,"src":"5651:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"owner","nameLocation":"5677:5:16","nodeType":"VariableDeclaration","scope":2738,"src":"5669:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2735,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:16"},"src":"5616:68:16"},{"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"5690:174:16","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2743,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:16","nodeType":"ErrorDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"approver","nameLocation":"5906:8:16","nodeType":"VariableDeclaration","scope":2743,"src":"5898:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:16"},"src":"5869:47:16"},{"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"5922:197:16","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2748,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:16","nodeType":"ErrorDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"operator","nameLocation":"6161:8:16","nodeType":"VariableDeclaration","scope":2748,"src":"6153:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:16"},"src":"6124:47:16"},{"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"6177:280:16","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2755,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:16","nodeType":"ErrorDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:16","nodeType":"VariableDeclaration","scope":2755,"src":"6494:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:16","nodeType":"VariableDeclaration","scope":2755,"src":"6513:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:16"},"src":"6462:73:16"}],"scope":2757,"src":"4430:2107:16","usedErrors":[2721,2726,2731,2738,2743,2748,2755],"usedEvents":[]}],"src":"112:6426:16"},"id":16},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3460],"ERC1967Utils":[3050],"IBeacon":[3060],"IERC1967":[2584],"StorageSlot":[3658]},"id":3051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2758,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:17"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2760,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3051,"sourceUnit":3061,"src":"140:46:17","symbolAliases":[{"foreign":{"id":2759,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"148:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2762,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3051,"sourceUnit":2585,"src":"187:55:17","symbolAliases":[{"foreign":{"id":2761,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"195:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2764,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3051,"sourceUnit":3461,"src":"243:48:17","symbolAliases":[{"foreign":{"id":2763,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"251:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3051,"sourceUnit":3659,"src":"292:56:17","symbolAliases":[{"foreign":{"id":2765,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"300:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"350:145:17","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":3050,"linearizedBaseContracts":[3050],"name":"ERC1967Utils","nameLocation":"504:12:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2768,"nodeType":"StructuredDocumentation","src":"523:170:17","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":2771,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:17","nodeType":"VariableDeclaration","scope":3050,"src":"763:114:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:17","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"884:69:17","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":2776,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:17","nodeType":"ErrorDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:17","nodeType":"VariableDeclaration","scope":2776,"src":"993:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2773,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:17"},"src":"958:59:17"},{"documentation":{"id":2777,"nodeType":"StructuredDocumentation","src":"1023:60:17","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":2781,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:17","nodeType":"ErrorDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"admin","nameLocation":"1122:5:17","nodeType":"VariableDeclaration","scope":2781,"src":"1114:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:17"},"src":"1088:41:17"},{"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"1135:61:17","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":2786,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:17","nodeType":"ErrorDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:17","nodeType":"VariableDeclaration","scope":2786,"src":"1228:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:17"},"src":"1201:43:17"},{"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"1250:82:17","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":2789,"name":"ERC1967NonPayable","nameLocation":"1343:17:17","nodeType":"ErrorDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"1360:2:17"},"src":"1337:26:17"},{"body":{"id":2801,"nodeType":"Block","src":"1502:77:17","statements":[{"expression":{"expression":{"arguments":[{"id":2797,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"1546:19:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2795,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1519:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3658_$","typeString":"type(library StorageSlot)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3569,"src":"1519:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3540_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"1519:53:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2794,"id":2800,"nodeType":"Return","src":"1512:60:17"}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"1369:67:17","text":" @dev Returns the current implementation address."},"id":2802,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:17","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[],"src":"1467:2:17"},"returnParameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"1493:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:17"},"scope":3050,"src":"1441:138:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2828,"nodeType":"Block","src":"1734:218:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2808,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"1748:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:17","memberName":"code","nodeType":"MemberAccess","src":"1748:22:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:17","memberName":"length","nodeType":"MemberAccess","src":"1748:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"1744:119:17","trueBody":{"id":2817,"nodeType":"Block","src":"1784:79:17","statements":[{"errorCall":{"arguments":[{"id":2814,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"1834:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2813,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"1805:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2816,"nodeType":"RevertStatement","src":"1798:54:17"}]}},{"expression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2822,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"1899:19:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2819,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1872:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3658_$","typeString":"type(library StorageSlot)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3569,"src":"1872:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3540_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"1872:53:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2825,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"1928:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2827,"nodeType":"ExpressionStatement","src":"1872:73:17"}]},"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"1585:81:17","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2829,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:17","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:17","nodeType":"VariableDeclaration","scope":2829,"src":"1699:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:17"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"1734:0:17"},"scope":3050,"src":"1671:281:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2864,"nodeType":"Block","src":"2345:263:17","statements":[{"expression":{"arguments":[{"id":2838,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2374:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2837,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2355:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2840,"nodeType":"ExpressionStatement","src":"2355:37:17"},{"eventCall":{"arguments":[{"id":2844,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2425:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2841,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2407:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2584_$","typeString":"type(contract IERC1967)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:17","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2571,"src":"2407:17:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2846,"nodeType":"EmitStatement","src":"2402:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2847,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"2458:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:17","memberName":"length","nodeType":"MemberAccess","src":"2458:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2862,"nodeType":"Block","src":"2559:43:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2859,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2573:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"ExpressionStatement","src":"2573:18:17"}]},"id":2863,"nodeType":"IfStatement","src":"2454:148:17","trueBody":{"id":2858,"nodeType":"Block","src":"2475:78:17","statements":[{"expression":{"arguments":[{"id":2854,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2518:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2855,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"2537:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2851,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"2489:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3460_$","typeString":"type(library Address)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:17","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3377,"src":"2489:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2857,"nodeType":"ExpressionStatement","src":"2489:53:17"}]}}]},"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"1958:301:17","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2865,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:17","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:17","nodeType":"VariableDeclaration","scope":2865,"src":"2290:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"data","nameLocation":"2330:4:17","nodeType":"VariableDeclaration","scope":2865,"src":"2317:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2833,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:17"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[],"src":"2345:0:17"},"scope":3050,"src":"2264:344:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"2614:145:17","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2869,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:17","nodeType":"VariableDeclaration","scope":3050,"src":"2829:105:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:17","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"3339:68:17","statements":[{"expression":{"expression":{"arguments":[{"id":2877,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"3383:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2875,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3356:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3658_$","typeString":"type(library StorageSlot)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3569,"src":"3356:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3540_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"3356:44:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2874,"id":2880,"nodeType":"Return","src":"3349:51:17"}]},"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"2941:341:17","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:17","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[],"src":"3304:2:17"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"3330:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:17"},"scope":3050,"src":"3287:120:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"3535:172:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"3549:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:17","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2902,"nodeType":"IfStatement","src":"3545:91:17","trueBody":{"id":2901,"nodeType":"Block","src":"3573:63:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:17","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2894,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"3594:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2900,"nodeType":"RevertStatement","src":"3587:38:17"}]}},{"expression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2906,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"3672:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2903,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3645:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3658_$","typeString":"type(library StorageSlot)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3569,"src":"3645:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3540_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"3645:44:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2909,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"3692:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2911,"nodeType":"ExpressionStatement","src":"3645:55:17"}]},"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"3413:72:17","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:17","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:17","nodeType":"VariableDeclaration","scope":2913,"src":"3509:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:17"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[],"src":"3535:0:17"},"scope":3050,"src":"3490:217:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2931,"nodeType":"Block","src":"3875:94:17","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2922,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"3912:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2924,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"3924:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2919,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"3890:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2584_$","typeString":"type(contract IERC1967)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:17","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2578,"src":"3890:21:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2926,"nodeType":"EmitStatement","src":"3885:48:17"},{"expression":{"arguments":[{"id":2928,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"3953:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2927,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"3943:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2930,"nodeType":"ExpressionStatement","src":"3943:19:17"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"3713:109:17","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:17","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:17","nodeType":"VariableDeclaration","scope":2932,"src":"3848:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:17"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[],"src":"3875:0:17"},"scope":3050,"src":"3827:142:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"3975:201:17","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2936,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:17","nodeType":"VariableDeclaration","scope":3050,"src":"4246:106:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:17","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2948,"nodeType":"Block","src":"4468:69:17","statements":[{"expression":{"expression":{"arguments":[{"id":2944,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"4512:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2942,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"4485:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3658_$","typeString":"type(library StorageSlot)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3569,"src":"4485:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3540_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"4485:45:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2941,"id":2947,"nodeType":"Return","src":"4478:52:17"}]},"documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"4359:51:17","text":" @dev Returns the current beacon."},"id":2949,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:17","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[],"src":"4433:2:17"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2949,"src":"4459:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:17"},"scope":3050,"src":"4415:122:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2994,"nodeType":"Block","src":"4667:390:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2955,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"4681:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:17","memberName":"code","nodeType":"MemberAccess","src":"4681:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:17","memberName":"length","nodeType":"MemberAccess","src":"4681:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2965,"nodeType":"IfStatement","src":"4677:95:17","trueBody":{"id":2964,"nodeType":"Block","src":"4709:63:17","statements":[{"errorCall":{"arguments":[{"id":2961,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"4751:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2960,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"4730:20:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2963,"nodeType":"RevertStatement","src":"4723:38:17"}]}},{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2969,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"4809:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2966,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"4782:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3658_$","typeString":"type(library StorageSlot)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3569,"src":"4782:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3540_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"4782:45:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2972,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"4830:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2974,"nodeType":"ExpressionStatement","src":"4782:57:17"},{"assignments":[2976],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:17","nodeType":"VariableDeclaration","scope":2994,"src":"4850:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2982,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2978,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"4889:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2977,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4881:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$3060_$","typeString":"type(contract IBeacon)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$3060","typeString":"contract IBeacon"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:17","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":3059,"src":"4881:33:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2983,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"4930:20:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:17","memberName":"code","nodeType":"MemberAccess","src":"4930:25:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:17","memberName":"length","nodeType":"MemberAccess","src":"4930:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2993,"nodeType":"IfStatement","src":"4926:125:17","trueBody":{"id":2992,"nodeType":"Block","src":"4969:82:17","statements":[{"errorCall":{"arguments":[{"id":2989,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"5019:20:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2988,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4990:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2991,"nodeType":"RevertStatement","src":"4983:57:17"}]}}]},"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"4543:72:17","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:17","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:17","nodeType":"VariableDeclaration","scope":2995,"src":"4640:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:17"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[],"src":"4667:0:17"},"scope":3050,"src":"4620:437:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3034,"nodeType":"Block","src":"5661:263:17","statements":[{"expression":{"arguments":[{"id":3004,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"5682:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3003,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"5671:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3006,"nodeType":"ExpressionStatement","src":"5671:21:17"},{"eventCall":{"arguments":[{"id":3010,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"5731:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3007,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"5707:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2584_$","typeString":"type(contract IERC1967)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:17","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2583,"src":"5707:23:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3012,"nodeType":"EmitStatement","src":"5702:39:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3013,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"5756:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:17","memberName":"length","nodeType":"MemberAccess","src":"5756:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3032,"nodeType":"Block","src":"5875:43:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3029,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"5889:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3031,"nodeType":"ExpressionStatement","src":"5889:18:17"}]},"id":3033,"nodeType":"IfStatement","src":"5752:166:17","trueBody":{"id":3028,"nodeType":"Block","src":"5773:96:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3021,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"5824:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3020,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"5816:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$3060_$","typeString":"type(contract IBeacon)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$3060","typeString":"contract IBeacon"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:17","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":3059,"src":"5816:33:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3025,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"5853:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3017,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"5787:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3460_$","typeString":"type(library Address)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:17","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3377,"src":"5787:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3027,"nodeType":"ExpressionStatement","src":"5787:71:17"}]}}]},"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"5063:514:17","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:17","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:17","nodeType":"VariableDeclaration","scope":3035,"src":"5614:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"data","nameLocation":"5646:4:17","nodeType":"VariableDeclaration","scope":3035,"src":"5633:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2999,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:17"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[],"src":"5661:0:17"},"scope":3050,"src":"5582:342:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3048,"nodeType":"Block","src":"6149:86:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3039,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:17","memberName":"value","nodeType":"MemberAccess","src":"6163:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3047,"nodeType":"IfStatement","src":"6159:70:17","trueBody":{"id":3046,"nodeType":"Block","src":"6178:51:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3043,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6199:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3045,"nodeType":"RevertStatement","src":"6192:26:17"}]}}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"5930:178:17","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":3049,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:17","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[],"src":"6138:2:17"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[],"src":"6149:0:17"},"scope":3050,"src":"6113:122:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3051,"src":"496:5741:17","usedErrors":[2776,2781,2786,2789],"usedEvents":[]}],"src":"114:6124:17"},"id":17},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[3060]},"id":3061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3052,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"108:25:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"135:79:18","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":3060,"linearizedBaseContracts":[3060],"name":"IBeacon","nameLocation":"225:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"239:168:18","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":3059,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"421:14:18","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[],"src":"435:2:18"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3059,"src":"461:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:9:18"},"scope":3060,"src":"412:58:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3061,"src":"215:257:18","usedErrors":[],"usedEvents":[]}],"src":"108:365:18"},"id":18},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3138]},"id":3139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3062,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3063,"nodeType":"StructuredDocumentation","src":"133:71:19","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":3138,"linearizedBaseContracts":[3138],"name":"IERC20","nameLocation":"215:6:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3064,"nodeType":"StructuredDocumentation","src":"228:158:19","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3072,"name":"Transfer","nameLocation":"397:8:19","nodeType":"EventDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:19","nodeType":"VariableDeclaration","scope":3072,"src":"406:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3068,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:19","nodeType":"VariableDeclaration","scope":3072,"src":"428:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3067,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3070,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:19","nodeType":"VariableDeclaration","scope":3072,"src":"448:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:19"},"src":"391:72:19"},{"anonymous":false,"documentation":{"id":3073,"nodeType":"StructuredDocumentation","src":"469:148:19","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3081,"name":"Approval","nameLocation":"628:8:19","nodeType":"EventDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:19","nodeType":"VariableDeclaration","scope":3081,"src":"637:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3074,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3077,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:19","nodeType":"VariableDeclaration","scope":3081,"src":"660:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3076,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3079,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:19","nodeType":"VariableDeclaration","scope":3081,"src":"685:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:19"},"src":"622:78:19"},{"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"706:65:19","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":3087,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:19","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"796:2:19"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"822:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:19"},"scope":3138,"src":"776:55:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"837:71:19","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":3095,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:19","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"account","nameLocation":"940:7:19","nodeType":"VariableDeclaration","scope":3095,"src":"932:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:19"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3095,"src":"972:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:19"},"scope":3138,"src":"913:68:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3096,"nodeType":"StructuredDocumentation","src":"987:213:19","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3105,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:19","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"to","nameLocation":"1231:2:19","nodeType":"VariableDeclaration","scope":3105,"src":"1223:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"value","nameLocation":"1243:5:19","nodeType":"VariableDeclaration","scope":3105,"src":"1235:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:19"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3105,"src":"1268:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3102,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:19"},"scope":3138,"src":"1205:69:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3106,"nodeType":"StructuredDocumentation","src":"1280:264:19","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3115,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:19","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"owner","nameLocation":"1576:5:19","nodeType":"VariableDeclaration","scope":3115,"src":"1568:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"spender","nameLocation":"1591:7:19","nodeType":"VariableDeclaration","scope":3115,"src":"1583:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:19"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"1623:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:19"},"scope":3138,"src":"1549:83:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"1638:667:19","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3125,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:19","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"spender","nameLocation":"2335:7:19","nodeType":"VariableDeclaration","scope":3125,"src":"2327:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"value","nameLocation":"2352:5:19","nodeType":"VariableDeclaration","scope":3125,"src":"2344:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:19"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3125,"src":"2377:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3122,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:19"},"scope":3138,"src":"2310:73:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"2389:297:19","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3137,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:19","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"from","nameLocation":"2721:4:19","nodeType":"VariableDeclaration","scope":3137,"src":"2713:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"to","nameLocation":"2735:2:19","nodeType":"VariableDeclaration","scope":3137,"src":"2727:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"value","nameLocation":"2747:5:19","nodeType":"VariableDeclaration","scope":3137,"src":"2739:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:19"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"2772:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3134,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:19"},"scope":3138,"src":"2691:87:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3139,"src":"205:2575:19","usedErrors":[],"usedEvents":[3072,3081]}],"src":"106:2675:19"},"id":19},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[3138],"IERC20Metadata":[3164]},"id":3165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3140,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3165,"sourceUnit":3139,"src":"151:37:20","symbolAliases":[{"foreign":{"id":3141,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"159:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3144,"name":"IERC20","nameLocations":["306:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":3138,"src":"306:6:20"},"id":3145,"nodeType":"InheritanceSpecifier","src":"306:6:20"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"190:87:20","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":3164,"linearizedBaseContracts":[3164,3138],"name":"IERC20Metadata","nameLocation":"288:14:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"319:54:20","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3151,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:20","nodeType":"FunctionDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[],"src":"391:2:20"},"returnParameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3151,"src":"417:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3148,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:20"},"scope":3164,"src":"378:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"438:56:20","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3157,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:20","nodeType":"FunctionDefinition","parameters":{"id":3153,"nodeType":"ParameterList","parameters":[],"src":"514:2:20"},"returnParameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3157,"src":"540:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3154,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:20"},"scope":3164,"src":"499:56:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3158,"nodeType":"StructuredDocumentation","src":"561:65:20","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3163,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:20","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[],"src":"648:2:20"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"674:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3160,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:20"},"scope":3164,"src":"631:50:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3165,"src":"278:405:20","usedErrors":[],"usedEvents":[3072,3081]}],"src":"125:559:20"},"id":20},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3200]},"id":3201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3166,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"150:1965:21","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":3200,"linearizedBaseContracts":[3200],"name":"IERC20Permit","nameLocation":"2126:12:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"2145:850:21","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":3185,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:21","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"owner","nameLocation":"3033:5:21","nodeType":"VariableDeclaration","scope":3185,"src":"3025:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"spender","nameLocation":"3056:7:21","nodeType":"VariableDeclaration","scope":3185,"src":"3048:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3171,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"value","nameLocation":"3081:5:21","nodeType":"VariableDeclaration","scope":3185,"src":"3073:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:21","nodeType":"VariableDeclaration","scope":3185,"src":"3096:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"v","nameLocation":"3128:1:21","nodeType":"VariableDeclaration","scope":3185,"src":"3122:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3177,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"r","nameLocation":"3147:1:21","nodeType":"VariableDeclaration","scope":3185,"src":"3139:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"s","nameLocation":"3166:1:21","nodeType":"VariableDeclaration","scope":3185,"src":"3158:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:21"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"3182:0:21"},"scope":3200,"src":"3000:183:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"3189:294:21","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":3193,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:21","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"owner","nameLocation":"3512:5:21","nodeType":"VariableDeclaration","scope":3193,"src":"3504:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:21"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3193,"src":"3542:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:21"},"scope":3200,"src":"3488:63:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"3557:128:21","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":3199,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:21","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[],"src":"3768:2:21"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3199,"src":"3794:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:21"},"scope":3200,"src":"3743:60:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3201,"src":"2116:1689:21","usedErrors":[],"usedEvents":[]}],"src":"123:3683:21"},"id":21},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3460],"Errors":[3482]},"id":3461,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3202,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":3204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3461,"sourceUnit":3483,"src":"127:36:22","symbolAliases":[{"foreign":{"id":3203,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"135:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"165:67:22","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3460,"linearizedBaseContracts":[3460],"name":"Address","nameLocation":"241:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"255:75:22","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":3210,"name":"AddressEmptyCode","nameLocation":"341:16:22","nodeType":"ErrorDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"target","nameLocation":"366:6:22","nodeType":"VariableDeclaration","scope":3210,"src":"358:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:22"},"src":"335:39:22"},{"body":{"id":3257,"nodeType":"Block","src":"1361:294:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3220,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}],"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:22","typeDescriptions":{}}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:22","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3223,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"1399:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3237,"nodeType":"IfStatement","src":"1371:125:22","trueBody":{"id":3236,"nodeType":"Block","src":"1407:89:22","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3230,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:22","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:22","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"1478:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3225,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"1428:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3482_$","typeString":"type(library Errors)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:22","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3470,"src":"1428:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3235,"nodeType":"RevertStatement","src":"1421:64:22"}]}},{"assignments":[3239,3241],"declarations":[{"constant":false,"id":3239,"mutability":"mutable","name":"success","nameLocation":"1512:7:22","nodeType":"VariableDeclaration","scope":3257,"src":"1507:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3238,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:22","nodeType":"VariableDeclaration","scope":3257,"src":"1521:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3240,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3248,"initialValue":{"arguments":[{"hexValue":"","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3242,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"1548:9:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:22","memberName":"call","nodeType":"MemberAccess","src":"1548:14:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"1570:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:22"},{"condition":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:22","subExpression":{"id":3249,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"1596:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"IfStatement","src":"1591:58:22","trueBody":{"id":3255,"nodeType":"Block","src":"1605:44:22","statements":[{"expression":{"arguments":[{"id":3252,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"1627:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3251,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"1619:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"ExpressionStatement","src":"1619:19:22"}]}}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"380:905:22","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:22","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:22","nodeType":"VariableDeclaration","scope":3258,"src":"1309:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3212,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"amount","nameLocation":"1344:6:22","nodeType":"VariableDeclaration","scope":3258,"src":"1336:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:22"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[],"src":"1361:0:22"},"scope":3460,"src":"1290:365:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"2589:62:22","statements":[{"expression":{"arguments":[{"id":3269,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"2628:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"2636:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3268,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"2606:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3267,"id":3273,"nodeType":"Return","src":"2599:45:22"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"1661:834:22","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:22","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"target","nameLocation":"2530:6:22","nodeType":"VariableDeclaration","scope":3275,"src":"2522:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"data","nameLocation":"2551:4:22","nodeType":"VariableDeclaration","scope":3275,"src":"2538:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3262,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:22"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"2575:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3265,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:22"},"scope":3460,"src":"2500:151:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"3088:294:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3289,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:22","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:22","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3126:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3306,"nodeType":"IfStatement","src":"3098:123:22","trueBody":{"id":3305,"nodeType":"Block","src":"3133:88:22","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3299,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3460","typeString":"library Address"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:22","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:22","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3204:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3294,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"3154:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3482_$","typeString":"type(library Errors)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:22","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3470,"src":"3154:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3304,"nodeType":"RevertStatement","src":"3147:63:22"}]}},{"assignments":[3308,3310],"declarations":[{"constant":false,"id":3308,"mutability":"mutable","name":"success","nameLocation":"3236:7:22","nodeType":"VariableDeclaration","scope":3324,"src":"3231:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3307,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:22","nodeType":"VariableDeclaration","scope":3324,"src":"3245:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3309,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3317,"initialValue":{"arguments":[{"id":3315,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"3298:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3311,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"3272:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:22","memberName":"call","nodeType":"MemberAccess","src":"3272:11:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3291:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:22"},{"expression":{"arguments":[{"id":3319,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"3347:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"3355:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3321,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3364:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3318,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"3320:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3286,"id":3323,"nodeType":"Return","src":"3313:62:22"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"2657:313:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:22","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"target","nameLocation":"3014:6:22","nodeType":"VariableDeclaration","scope":3325,"src":"3006:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"data","nameLocation":"3035:4:22","nodeType":"VariableDeclaration","scope":3325,"src":"3022:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3279,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"value","nameLocation":"3049:5:22","nodeType":"VariableDeclaration","scope":3325,"src":"3041:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:22"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3325,"src":"3074:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3284,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:22"},"scope":3460,"src":"2975:407:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3350,"nodeType":"Block","src":"3621:154:22","statements":[{"assignments":[3336,3338],"declarations":[{"constant":false,"id":3336,"mutability":"mutable","name":"success","nameLocation":"3637:7:22","nodeType":"VariableDeclaration","scope":3350,"src":"3632:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3335,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:22","nodeType":"VariableDeclaration","scope":3350,"src":"3646:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3343,"initialValue":{"arguments":[{"id":3341,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"3691:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3339,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"3673:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:22","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:22","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:22"},{"expression":{"arguments":[{"id":3345,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"3740:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3346,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"3748:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3347,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"3757:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3344,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"3713:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3334,"id":3349,"nodeType":"Return","src":"3706:62:22"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"3388:128:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3351,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:22","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"target","nameLocation":"3557:6:22","nodeType":"VariableDeclaration","scope":3351,"src":"3549:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3327,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"data","nameLocation":"3578:4:22","nodeType":"VariableDeclaration","scope":3351,"src":"3565:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3329,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:22"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3351,"src":"3607:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3332,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:22"},"scope":3460,"src":"3521:254:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"4013:156:22","statements":[{"assignments":[3362,3364],"declarations":[{"constant":false,"id":3362,"mutability":"mutable","name":"success","nameLocation":"4029:7:22","nodeType":"VariableDeclaration","scope":3376,"src":"4024:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3361,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3364,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:22","nodeType":"VariableDeclaration","scope":3376,"src":"4038:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3363,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3369,"initialValue":{"arguments":[{"id":3367,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"4085:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3365,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"4065:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:22","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:22","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:22"},{"expression":{"arguments":[{"id":3371,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"4134:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3372,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"4142:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3373,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"4151:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3370,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"4107:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3360,"id":3375,"nodeType":"Return","src":"4100:62:22"}]},"documentation":{"id":3352,"nodeType":"StructuredDocumentation","src":"3781:130:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:22","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"target","nameLocation":"3954:6:22","nodeType":"VariableDeclaration","scope":3377,"src":"3946:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"data","nameLocation":"3975:4:22","nodeType":"VariableDeclaration","scope":3377,"src":"3962:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3355,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:22"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"3999:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3358,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:22"},"scope":3460,"src":"3916:253:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3416,"nodeType":"Block","src":"4595:424:22","statements":[{"condition":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:22","subExpression":{"id":3389,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"4610:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3414,"nodeType":"Block","src":"4669:344:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3396,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"4857:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:22","memberName":"length","nodeType":"MemberAccess","src":"4857:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3400,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4883:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:22","memberName":"code","nodeType":"MemberAccess","src":"4883:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:22","memberName":"length","nodeType":"MemberAccess","src":"4883:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3411,"nodeType":"IfStatement","src":"4853:119:22","trueBody":{"id":3410,"nodeType":"Block","src":"4908:64:22","statements":[{"errorCall":{"arguments":[{"id":3407,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4950:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3406,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"4933:16:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3409,"nodeType":"RevertStatement","src":"4926:31:22"}]}},{"expression":{"id":3412,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"4992:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3388,"id":3413,"nodeType":"Return","src":"4985:17:22"}]},"id":3415,"nodeType":"IfStatement","src":"4605:408:22","trueBody":{"id":3395,"nodeType":"Block","src":"4619:44:22","statements":[{"expression":{"arguments":[{"id":3392,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"4641:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3391,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"4633:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3394,"nodeType":"ExpressionStatement","src":"4633:19:22"}]}}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"4175:257:22","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:22","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"target","nameLocation":"4490:6:22","nodeType":"VariableDeclaration","scope":3417,"src":"4482:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3379,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"success","nameLocation":"4511:7:22","nodeType":"VariableDeclaration","scope":3417,"src":"4506:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3381,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:22","nodeType":"VariableDeclaration","scope":3417,"src":"4528:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3383,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:22"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"4581:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3386,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:22"},"scope":3460,"src":"4437:582:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"5323:122:22","statements":[{"condition":{"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:22","subExpression":{"id":3427,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"5338:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3436,"nodeType":"Block","src":"5397:42:22","statements":[{"expression":{"id":3434,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"5418:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3426,"id":3435,"nodeType":"Return","src":"5411:17:22"}]},"id":3437,"nodeType":"IfStatement","src":"5333:106:22","trueBody":{"id":3433,"nodeType":"Block","src":"5347:44:22","statements":[{"expression":{"arguments":[{"id":3430,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"5369:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3429,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5361:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3432,"nodeType":"ExpressionStatement","src":"5361:19:22"}]}}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"5025:191:22","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:22","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"success","nameLocation":"5252:7:22","nodeType":"VariableDeclaration","scope":3439,"src":"5247:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3419,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:22","nodeType":"VariableDeclaration","scope":3439,"src":"5261:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3421,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:22"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"5309:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3424,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:22"},"scope":3460,"src":"5221:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3458,"nodeType":"Block","src":"5614:379:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3445,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"5690:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:22","memberName":"length","nodeType":"MemberAccess","src":"5690:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3456,"nodeType":"Block","src":"5936:51:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3451,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"5957:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3482_$","typeString":"type(library Errors)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:22","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"5957:17:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3455,"nodeType":"RevertStatement","src":"5950:26:22"}]},"id":3457,"nodeType":"IfStatement","src":"5686:301:22","trueBody":{"id":3450,"nodeType":"Block","src":"5713:217:22","statements":[{"AST":{"nativeSrc":"5840:80:22","nodeType":"YulBlock","src":"5840:80:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:22","nodeType":"YulIdentifier","src":"5869:10:22"},{"kind":"number","nativeSrc":"5881:4:22","nodeType":"YulLiteral","src":"5881:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:22","nodeType":"YulIdentifier","src":"5865:3:22"},"nativeSrc":"5865:21:22","nodeType":"YulFunctionCall","src":"5865:21:22"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:22","nodeType":"YulIdentifier","src":"5894:10:22"}],"functionName":{"name":"mload","nativeSrc":"5888:5:22","nodeType":"YulIdentifier","src":"5888:5:22"},"nativeSrc":"5888:17:22","nodeType":"YulFunctionCall","src":"5888:17:22"}],"functionName":{"name":"revert","nativeSrc":"5858:6:22","nodeType":"YulIdentifier","src":"5858:6:22"},"nativeSrc":"5858:48:22","nodeType":"YulFunctionCall","src":"5858:48:22"},"nativeSrc":"5858:48:22","nodeType":"YulExpressionStatement","src":"5858:48:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":3442,"isOffset":false,"isSlot":false,"src":"5869:10:22","valueSize":1},{"declaration":3442,"isOffset":false,"isSlot":false,"src":"5894:10:22","valueSize":1}],"flags":["memory-safe"],"id":3449,"nodeType":"InlineAssembly","src":"5815:105:22"}]}}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"5451:103:22","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3459,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:22","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:22","nodeType":"VariableDeclaration","scope":3459,"src":"5576:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3441,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:22"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[],"src":"5614:0:22"},"scope":3460,"src":"5559:434:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3461,"src":"233:5762:22","usedErrors":[3210],"usedEvents":[]}],"src":"101:5895:22"},"id":22},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3482]},"id":3483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3462,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"126:284:23","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3482,"linearizedBaseContracts":[3482],"name":"Errors","nameLocation":"419:6:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3464,"nodeType":"StructuredDocumentation","src":"432:94:23","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3470,"name":"InsufficientBalance","nameLocation":"537:19:23","nodeType":"ErrorDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"balance","nameLocation":"565:7:23","nodeType":"VariableDeclaration","scope":3470,"src":"557:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"needed","nameLocation":"582:6:23","nodeType":"VariableDeclaration","scope":3470,"src":"574:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:23"},"src":"531:59:23"},{"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"596:89:23","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3473,"name":"FailedCall","nameLocation":"696:10:23","nodeType":"ErrorDefinition","parameters":{"id":3472,"nodeType":"ParameterList","parameters":[],"src":"706:2:23"},"src":"690:19:23"},{"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"715:46:23","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3476,"name":"FailedDeployment","nameLocation":"772:16:23","nodeType":"ErrorDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[],"src":"788:2:23"},"src":"766:25:23"},{"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"797:58:23","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3481,"name":"MissingPrecompile","nameLocation":"866:17:23","nodeType":"ErrorDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"884:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:23"},"src":"860:33:23"}],"scope":3483,"src":"411:484:23","usedErrors":[3470,3473,3476,3481],"usedEvents":[]}],"src":"100:796:23"},"id":23},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3534]},"id":3535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3484,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"125:489:24","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3534,"linearizedBaseContracts":[3534],"name":"Panic","nameLocation":"665:5:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"677:36:24","text":"@dev generic / unspecified error"},"id":3489,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:24","nodeType":"VariableDeclaration","scope":3534,"src":"718:40:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"764:37:24","text":"@dev used by the assert() builtin"},"id":3493,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:24","nodeType":"VariableDeclaration","scope":3534,"src":"806:39:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"851:41:24","text":"@dev arithmetic underflow or overflow"},"id":3497,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:24","nodeType":"VariableDeclaration","scope":3534,"src":"897:47:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:24","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3498,"nodeType":"StructuredDocumentation","src":"950:35:24","text":"@dev division or modulo by zero"},"id":3501,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:24","nodeType":"VariableDeclaration","scope":3534,"src":"990:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:24","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"1045:30:24","text":"@dev enum conversion error"},"id":3505,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:24","nodeType":"VariableDeclaration","scope":3534,"src":"1080:54:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:24","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3506,"nodeType":"StructuredDocumentation","src":"1140:36:24","text":"@dev invalid encoding in storage"},"id":3509,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:24","nodeType":"VariableDeclaration","scope":3534,"src":"1181:55:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:24","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"1242:24:24","text":"@dev empty array pop"},"id":3513,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:24","nodeType":"VariableDeclaration","scope":3534,"src":"1271:48:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:24","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"1325:35:24","text":"@dev array out of bounds access"},"id":3517,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:24","nodeType":"VariableDeclaration","scope":3534,"src":"1365:52:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:24","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"1423:65:24","text":"@dev resource error (too large allocation or too large array)"},"id":3521,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:24","nodeType":"VariableDeclaration","scope":3534,"src":"1493:47:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:24","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"1546:42:24","text":"@dev calling invalid internal function"},"id":3525,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:24","nodeType":"VariableDeclaration","scope":3534,"src":"1593:58:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:24","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3532,"nodeType":"Block","src":"1819:151:24","statements":[{"AST":{"nativeSrc":"1854:110:24","nodeType":"YulBlock","src":"1854:110:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:24","nodeType":"YulLiteral","src":"1875:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:24","nodeType":"YulLiteral","src":"1881:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:24","nodeType":"YulIdentifier","src":"1868:6:24"},"nativeSrc":"1868:24:24","nodeType":"YulFunctionCall","src":"1868:24:24"},"nativeSrc":"1868:24:24","nodeType":"YulExpressionStatement","src":"1868:24:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:24","nodeType":"YulLiteral","src":"1912:4:24","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:24","nodeType":"YulIdentifier","src":"1918:4:24"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:24","nodeType":"YulIdentifier","src":"1905:6:24"},"nativeSrc":"1905:18:24","nodeType":"YulFunctionCall","src":"1905:18:24"},"nativeSrc":"1905:18:24","nodeType":"YulExpressionStatement","src":"1905:18:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:24","nodeType":"YulLiteral","src":"1943:4:24","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:24","nodeType":"YulLiteral","src":"1949:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:24","nodeType":"YulIdentifier","src":"1936:6:24"},"nativeSrc":"1936:18:24","nodeType":"YulFunctionCall","src":"1936:18:24"},"nativeSrc":"1936:18:24","nodeType":"YulExpressionStatement","src":"1936:18:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3528,"isOffset":false,"isSlot":false,"src":"1918:4:24","valueSize":1}],"flags":["memory-safe"],"id":3531,"nodeType":"InlineAssembly","src":"1829:135:24"}]},"documentation":{"id":3526,"nodeType":"StructuredDocumentation","src":"1658:113:24","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3533,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:24","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3528,"mutability":"mutable","name":"code","nameLocation":"1799:4:24","nodeType":"VariableDeclaration","scope":3533,"src":"1791:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:24"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[],"src":"1819:0:24"},"scope":3534,"src":"1776:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3535,"src":"657:1315:24","usedErrors":[],"usedEvents":[]}],"src":"99:1874:24"},"id":24},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3658]},"id":3659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3536,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"219:1187:25","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3658,"linearizedBaseContracts":[3658],"name":"StorageSlot","nameLocation":"1415:11:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3540,"members":[{"constant":false,"id":3539,"mutability":"mutable","name":"value","nameLocation":"1470:5:25","nodeType":"VariableDeclaration","scope":3540,"src":"1462:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:25","nodeType":"StructDefinition","scope":3658,"src":"1433:49:25","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3543,"members":[{"constant":false,"id":3542,"mutability":"mutable","name":"value","nameLocation":"1522:5:25","nodeType":"VariableDeclaration","scope":3543,"src":"1517:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3541,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:25","nodeType":"StructDefinition","scope":3658,"src":"1488:46:25","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3546,"members":[{"constant":false,"id":3545,"mutability":"mutable","name":"value","nameLocation":"1577:5:25","nodeType":"VariableDeclaration","scope":3546,"src":"1569:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:25","nodeType":"StructDefinition","scope":3658,"src":"1540:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3549,"members":[{"constant":false,"id":3548,"mutability":"mutable","name":"value","nameLocation":"1632:5:25","nodeType":"VariableDeclaration","scope":3549,"src":"1624:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:25","nodeType":"StructDefinition","scope":3658,"src":"1595:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3552,"members":[{"constant":false,"id":3551,"mutability":"mutable","name":"value","nameLocation":"1685:5:25","nodeType":"VariableDeclaration","scope":3552,"src":"1678:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3550,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:25","nodeType":"StructDefinition","scope":3658,"src":"1650:47:25","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3555,"members":[{"constant":false,"id":3554,"mutability":"mutable","name":"value","nameLocation":"1738:5:25","nodeType":"VariableDeclaration","scope":3555,"src":"1731:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3553,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:25","nodeType":"StructDefinition","scope":3658,"src":"1703:47:25","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3558,"members":[{"constant":false,"id":3557,"mutability":"mutable","name":"value","nameLocation":"1789:5:25","nodeType":"VariableDeclaration","scope":3558,"src":"1783:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3556,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:25","nodeType":"StructDefinition","scope":3658,"src":"1756:45:25","visibility":"public"},{"body":{"id":3568,"nodeType":"Block","src":"1983:79:25","statements":[{"AST":{"nativeSrc":"2018:38:25","nodeType":"YulBlock","src":"2018:38:25","statements":[{"nativeSrc":"2032:14:25","nodeType":"YulAssignment","src":"2032:14:25","value":{"name":"slot","nativeSrc":"2042:4:25","nodeType":"YulIdentifier","src":"2042:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:25","nodeType":"YulIdentifier","src":"2032:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3565,"isOffset":false,"isSlot":true,"src":"2032:6:25","suffix":"slot","valueSize":1},{"declaration":3561,"isOffset":false,"isSlot":false,"src":"2042:4:25","valueSize":1}],"flags":["memory-safe"],"id":3567,"nodeType":"InlineAssembly","src":"1993:63:25"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"1807:87:25","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3569,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:25","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"slot","nameLocation":"1931:4:25","nodeType":"VariableDeclaration","scope":3569,"src":"1923:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:25"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"r","nameLocation":"1980:1:25","nodeType":"VariableDeclaration","scope":3569,"src":"1960:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3564,"nodeType":"UserDefinedTypeName","pathNode":{"id":3563,"name":"AddressSlot","nameLocations":["1960:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3540,"src":"1960:11:25"},"referencedDeclaration":3540,"src":"1960:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3540_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:25"},"scope":3658,"src":"1899:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3579,"nodeType":"Block","src":"2243:79:25","statements":[{"AST":{"nativeSrc":"2278:38:25","nodeType":"YulBlock","src":"2278:38:25","statements":[{"nativeSrc":"2292:14:25","nodeType":"YulAssignment","src":"2292:14:25","value":{"name":"slot","nativeSrc":"2302:4:25","nodeType":"YulIdentifier","src":"2302:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:25","nodeType":"YulIdentifier","src":"2292:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3576,"isOffset":false,"isSlot":true,"src":"2292:6:25","suffix":"slot","valueSize":1},{"declaration":3572,"isOffset":false,"isSlot":false,"src":"2302:4:25","valueSize":1}],"flags":["memory-safe"],"id":3578,"nodeType":"InlineAssembly","src":"2253:63:25"}]},"documentation":{"id":3570,"nodeType":"StructuredDocumentation","src":"2068:86:25","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3580,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:25","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"slot","nameLocation":"2191:4:25","nodeType":"VariableDeclaration","scope":3580,"src":"2183:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:25"},"returnParameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"r","nameLocation":"2240:1:25","nodeType":"VariableDeclaration","scope":3580,"src":"2220:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3543_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3575,"nodeType":"UserDefinedTypeName","pathNode":{"id":3574,"name":"BooleanSlot","nameLocations":["2220:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3543,"src":"2220:11:25"},"referencedDeclaration":3543,"src":"2220:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3543_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:25"},"scope":3658,"src":"2159:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3590,"nodeType":"Block","src":"2503:79:25","statements":[{"AST":{"nativeSrc":"2538:38:25","nodeType":"YulBlock","src":"2538:38:25","statements":[{"nativeSrc":"2552:14:25","nodeType":"YulAssignment","src":"2552:14:25","value":{"name":"slot","nativeSrc":"2562:4:25","nodeType":"YulIdentifier","src":"2562:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:25","nodeType":"YulIdentifier","src":"2552:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3587,"isOffset":false,"isSlot":true,"src":"2552:6:25","suffix":"slot","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"2562:4:25","valueSize":1}],"flags":["memory-safe"],"id":3589,"nodeType":"InlineAssembly","src":"2513:63:25"}]},"documentation":{"id":3581,"nodeType":"StructuredDocumentation","src":"2328:86:25","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3591,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:25","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"slot","nameLocation":"2451:4:25","nodeType":"VariableDeclaration","scope":3591,"src":"2443:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:25"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"r","nameLocation":"2500:1:25","nodeType":"VariableDeclaration","scope":3591,"src":"2480:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3546_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3586,"nodeType":"UserDefinedTypeName","pathNode":{"id":3585,"name":"Bytes32Slot","nameLocations":["2480:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3546,"src":"2480:11:25"},"referencedDeclaration":3546,"src":"2480:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3546_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:25"},"scope":3658,"src":"2419:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"2763:79:25","statements":[{"AST":{"nativeSrc":"2798:38:25","nodeType":"YulBlock","src":"2798:38:25","statements":[{"nativeSrc":"2812:14:25","nodeType":"YulAssignment","src":"2812:14:25","value":{"name":"slot","nativeSrc":"2822:4:25","nodeType":"YulIdentifier","src":"2822:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:25","nodeType":"YulIdentifier","src":"2812:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3598,"isOffset":false,"isSlot":true,"src":"2812:6:25","suffix":"slot","valueSize":1},{"declaration":3594,"isOffset":false,"isSlot":false,"src":"2822:4:25","valueSize":1}],"flags":["memory-safe"],"id":3600,"nodeType":"InlineAssembly","src":"2773:63:25"}]},"documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"2588:86:25","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:25","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"slot","nameLocation":"2711:4:25","nodeType":"VariableDeclaration","scope":3602,"src":"2703:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:25"},"returnParameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"r","nameLocation":"2760:1:25","nodeType":"VariableDeclaration","scope":3602,"src":"2740:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3549_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3597,"nodeType":"UserDefinedTypeName","pathNode":{"id":3596,"name":"Uint256Slot","nameLocations":["2740:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3549,"src":"2740:11:25"},"referencedDeclaration":3549,"src":"2740:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3549_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:25"},"scope":3658,"src":"2679:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3612,"nodeType":"Block","src":"3020:79:25","statements":[{"AST":{"nativeSrc":"3055:38:25","nodeType":"YulBlock","src":"3055:38:25","statements":[{"nativeSrc":"3069:14:25","nodeType":"YulAssignment","src":"3069:14:25","value":{"name":"slot","nativeSrc":"3079:4:25","nodeType":"YulIdentifier","src":"3079:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:25","nodeType":"YulIdentifier","src":"3069:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3609,"isOffset":false,"isSlot":true,"src":"3069:6:25","suffix":"slot","valueSize":1},{"declaration":3605,"isOffset":false,"isSlot":false,"src":"3079:4:25","valueSize":1}],"flags":["memory-safe"],"id":3611,"nodeType":"InlineAssembly","src":"3030:63:25"}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"2848:85:25","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:25","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"slot","nameLocation":"2969:4:25","nodeType":"VariableDeclaration","scope":3613,"src":"2961:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:25"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"r","nameLocation":"3017:1:25","nodeType":"VariableDeclaration","scope":3613,"src":"2998:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3552_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3608,"nodeType":"UserDefinedTypeName","pathNode":{"id":3607,"name":"Int256Slot","nameLocations":["2998:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"2998:10:25"},"referencedDeclaration":3552,"src":"2998:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3552_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:25"},"scope":3658,"src":"2938:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"3277:79:25","statements":[{"AST":{"nativeSrc":"3312:38:25","nodeType":"YulBlock","src":"3312:38:25","statements":[{"nativeSrc":"3326:14:25","nodeType":"YulAssignment","src":"3326:14:25","value":{"name":"slot","nativeSrc":"3336:4:25","nodeType":"YulIdentifier","src":"3336:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:25","nodeType":"YulIdentifier","src":"3326:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3620,"isOffset":false,"isSlot":true,"src":"3326:6:25","suffix":"slot","valueSize":1},{"declaration":3616,"isOffset":false,"isSlot":false,"src":"3336:4:25","valueSize":1}],"flags":["memory-safe"],"id":3622,"nodeType":"InlineAssembly","src":"3287:63:25"}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"3105:85:25","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:25","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"slot","nameLocation":"3226:4:25","nodeType":"VariableDeclaration","scope":3624,"src":"3218:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:25"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"r","nameLocation":"3274:1:25","nodeType":"VariableDeclaration","scope":3624,"src":"3255:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3555_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3619,"nodeType":"UserDefinedTypeName","pathNode":{"id":3618,"name":"StringSlot","nameLocations":["3255:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"3255:10:25"},"referencedDeclaration":3555,"src":"3255:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3555_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:25"},"scope":3658,"src":"3195:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3634,"nodeType":"Block","src":"3558:85:25","statements":[{"AST":{"nativeSrc":"3593:44:25","nodeType":"YulBlock","src":"3593:44:25","statements":[{"nativeSrc":"3607:20:25","nodeType":"YulAssignment","src":"3607:20:25","value":{"name":"store.slot","nativeSrc":"3617:10:25","nodeType":"YulIdentifier","src":"3617:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3631,"isOffset":false,"isSlot":true,"src":"3607:6:25","suffix":"slot","valueSize":1},{"declaration":3627,"isOffset":false,"isSlot":true,"src":"3617:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3633,"nodeType":"InlineAssembly","src":"3568:69:25"}]},"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"3362:101:25","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:25","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"store","nameLocation":"3506:5:25","nodeType":"VariableDeclaration","scope":3635,"src":"3491:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3626,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:25"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"r","nameLocation":"3555:1:25","nodeType":"VariableDeclaration","scope":3635,"src":"3536:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3555_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3630,"nodeType":"UserDefinedTypeName","pathNode":{"id":3629,"name":"StringSlot","nameLocations":["3536:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"3536:10:25"},"referencedDeclaration":3555,"src":"3536:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3555_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:25"},"scope":3658,"src":"3468:175:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3645,"nodeType":"Block","src":"3818:79:25","statements":[{"AST":{"nativeSrc":"3853:38:25","nodeType":"YulBlock","src":"3853:38:25","statements":[{"nativeSrc":"3867:14:25","nodeType":"YulAssignment","src":"3867:14:25","value":{"name":"slot","nativeSrc":"3877:4:25","nodeType":"YulIdentifier","src":"3877:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:25","nodeType":"YulIdentifier","src":"3867:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3642,"isOffset":false,"isSlot":true,"src":"3867:6:25","suffix":"slot","valueSize":1},{"declaration":3638,"isOffset":false,"isSlot":false,"src":"3877:4:25","valueSize":1}],"flags":["memory-safe"],"id":3644,"nodeType":"InlineAssembly","src":"3828:63:25"}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"3649:84:25","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3646,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:25","nodeType":"FunctionDefinition","parameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"slot","nameLocation":"3768:4:25","nodeType":"VariableDeclaration","scope":3646,"src":"3760:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:25"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"r","nameLocation":"3815:1:25","nodeType":"VariableDeclaration","scope":3646,"src":"3797:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3558_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3641,"nodeType":"UserDefinedTypeName","pathNode":{"id":3640,"name":"BytesSlot","nameLocations":["3797:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"3797:9:25"},"referencedDeclaration":3558,"src":"3797:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3558_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:25"},"scope":3658,"src":"3738:159:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3656,"nodeType":"Block","src":"4094:85:25","statements":[{"AST":{"nativeSrc":"4129:44:25","nodeType":"YulBlock","src":"4129:44:25","statements":[{"nativeSrc":"4143:20:25","nodeType":"YulAssignment","src":"4143:20:25","value":{"name":"store.slot","nativeSrc":"4153:10:25","nodeType":"YulIdentifier","src":"4153:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:25","nodeType":"YulIdentifier","src":"4143:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3653,"isOffset":false,"isSlot":true,"src":"4143:6:25","suffix":"slot","valueSize":1},{"declaration":3649,"isOffset":false,"isSlot":true,"src":"4153:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3655,"nodeType":"InlineAssembly","src":"4104:69:25"}]},"documentation":{"id":3647,"nodeType":"StructuredDocumentation","src":"3903:99:25","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3657,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:25","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"store","nameLocation":"4043:5:25","nodeType":"VariableDeclaration","scope":3657,"src":"4029:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3648,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:25"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"r","nameLocation":"4091:1:25","nodeType":"VariableDeclaration","scope":3657,"src":"4073:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3558_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3652,"nodeType":"UserDefinedTypeName","pathNode":{"id":3651,"name":"BytesSlot","nameLocations":["4073:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"4073:9:25"},"referencedDeclaration":3558,"src":"4073:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3558_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:25"},"scope":3658,"src":"4007:172:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3659,"src":"1407:2774:25","usedErrors":[],"usedEvents":[]}],"src":"193:3989:25"},"id":25},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7127],"SafeCast":[8892],"SignedMath":[9036],"Strings":[5060]},"id":5061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3660,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5061,"sourceUnit":7128,"src":"127:37:26","symbolAliases":[{"foreign":{"id":3661,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"135:4:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5061,"sourceUnit":8893,"src":"165:45:26","symbolAliases":[{"foreign":{"id":3663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"173:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5061,"sourceUnit":9037,"src":"211:49:26","symbolAliases":[{"foreign":{"id":3665,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"219:10:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"262:34:26","text":" @dev String operations."},"fullyImplemented":true,"id":5060,"linearizedBaseContracts":[5060],"name":"Strings","nameLocation":"305:7:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3669,"libraryName":{"id":3668,"name":"SafeCast","nameLocations":["325:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8892,"src":"325:8:26"},"nodeType":"UsingForDirective","src":"319:21:26"},{"constant":true,"id":3672,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:26","nodeType":"VariableDeclaration","scope":5060,"src":"346:56:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3670,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3675,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:26","nodeType":"VariableDeclaration","scope":5060,"src":"408:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3673,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:26","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":3711,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:26","nodeType":"VariableDeclaration","scope":5060,"src":"456:302:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":3705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":3695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":3683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:26","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":3684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:26","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:26","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:26","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":3689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:26","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:26","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:26","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":3694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:26","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:26","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:26","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:26","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":3699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:26","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:26","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:26","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:26","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:26","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:26","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:26","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":3709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":3712,"nodeType":"StructuredDocumentation","src":"778:81:26","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3718,"name":"StringsInsufficientHexLength","nameLocation":"870:28:26","nodeType":"ErrorDefinition","parameters":{"id":3717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"value","nameLocation":"907:5:26","nodeType":"VariableDeclaration","scope":3718,"src":"899:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3716,"mutability":"mutable","name":"length","nameLocation":"922:6:26","nodeType":"VariableDeclaration","scope":3718,"src":"914:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:26"},"src":"864:66:26"},{"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"936:108:26","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3721,"name":"StringsInvalidChar","nameLocation":"1055:18:26","nodeType":"ErrorDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[],"src":"1073:2:26"},"src":"1049:27:26"},{"documentation":{"id":3722,"nodeType":"StructuredDocumentation","src":"1082:84:26","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3724,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:26","nodeType":"ErrorDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[],"src":"1204:2:26"},"src":"1171:36:26"},{"body":{"id":3771,"nodeType":"Block","src":"1379:563:26","statements":[{"id":3770,"nodeType":"UncheckedBlock","src":"1389:547:26","statements":[{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"length","nameLocation":"1421:6:26","nodeType":"VariableDeclaration","scope":3770,"src":"1413:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"1441:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3734,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"1430:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7127_$","typeString":"type(library Math)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:26","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6959,"src":"1430:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:26"},{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:26","nodeType":"VariableDeclaration","scope":3770,"src":"1465:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3741,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3747,"initialValue":{"arguments":[{"id":3745,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"1499:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3743,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:26"},{"assignments":[3749],"declarations":[{"constant":false,"id":3749,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:26","nodeType":"VariableDeclaration","scope":3770,"src":"1520:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"nodeType":"VariableDeclarationStatement","src":"1520:11:26"},{"AST":{"nativeSrc":"1570:69:26","nodeType":"YulBlock","src":"1570:69:26","statements":[{"nativeSrc":"1588:37:26","nodeType":"YulAssignment","src":"1588:37:26","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:26","nodeType":"YulIdentifier","src":"1603:6:26"},{"kind":"number","nativeSrc":"1611:4:26","nodeType":"YulLiteral","src":"1611:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:26","nodeType":"YulIdentifier","src":"1599:3:26"},"nativeSrc":"1599:17:26","nodeType":"YulFunctionCall","src":"1599:17:26"},{"name":"length","nativeSrc":"1618:6:26","nodeType":"YulIdentifier","src":"1618:6:26"}],"functionName":{"name":"add","nativeSrc":"1595:3:26","nodeType":"YulIdentifier","src":"1595:3:26"},"nativeSrc":"1595:30:26","nodeType":"YulFunctionCall","src":"1595:30:26"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:26","nodeType":"YulIdentifier","src":"1588:3:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3742,"isOffset":false,"isSlot":false,"src":"1603:6:26","valueSize":1},{"declaration":3733,"isOffset":false,"isSlot":false,"src":"1618:6:26","valueSize":1},{"declaration":3749,"isOffset":false,"isSlot":false,"src":"1588:3:26","valueSize":1}],"flags":["memory-safe"],"id":3751,"nodeType":"InlineAssembly","src":"1545:94:26"},{"body":{"id":3766,"nodeType":"Block","src":"1665:234:26","statements":[{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:26","subExpression":{"id":3753,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"1683:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"1683:5:26"},{"AST":{"nativeSrc":"1731:86:26","nodeType":"YulBlock","src":"1731:86:26","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:26","nodeType":"YulIdentifier","src":"1761:3:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:26","nodeType":"YulIdentifier","src":"1775:5:26"},{"kind":"number","nativeSrc":"1782:2:26","nodeType":"YulLiteral","src":"1782:2:26","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:26","nodeType":"YulIdentifier","src":"1771:3:26"},"nativeSrc":"1771:14:26","nodeType":"YulFunctionCall","src":"1771:14:26"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:26","nodeType":"YulIdentifier","src":"1787:10:26"}],"functionName":{"name":"byte","nativeSrc":"1766:4:26","nodeType":"YulIdentifier","src":"1766:4:26"},"nativeSrc":"1766:32:26","nodeType":"YulFunctionCall","src":"1766:32:26"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:26","nodeType":"YulIdentifier","src":"1753:7:26"},"nativeSrc":"1753:46:26","nodeType":"YulFunctionCall","src":"1753:46:26"},"nativeSrc":"1753:46:26","nodeType":"YulExpressionStatement","src":"1753:46:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":3672,"isOffset":false,"isSlot":false,"src":"1787:10:26","valueSize":1},{"declaration":3749,"isOffset":false,"isSlot":false,"src":"1761:3:26","valueSize":1},{"declaration":3727,"isOffset":false,"isSlot":false,"src":"1775:5:26","valueSize":1}],"flags":["memory-safe"],"id":3756,"nodeType":"InlineAssembly","src":"1706:111:26"},{"expression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ExpressionStatement","src":"1834:11:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"1867:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"1863:21:26","trueBody":{"id":3764,"nodeType":"Break","src":"1879:5:26"}}]},"condition":{"hexValue":"74727565","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3767,"nodeType":"WhileStatement","src":"1652:247:26"},{"expression":{"id":3768,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"1919:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3731,"id":3769,"nodeType":"Return","src":"1912:13:26"}]}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"1213:90:26","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3772,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:26","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"value","nameLocation":"1334:5:26","nodeType":"VariableDeclaration","scope":3772,"src":"1326:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:26"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3772,"src":"1364:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3729,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:26"},"scope":5060,"src":"1308:634:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3797,"nodeType":"Block","src":"2118:92:26","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"2149:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:26","trueExpression":{"hexValue":"2d","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"2195:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3790,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"2180:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9036_$","typeString":"type(library SignedMath)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:26","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9035,"src":"2180:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3789,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2171:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3780,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:26","typeDescriptions":{}}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:26","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:26","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3779,"id":3796,"nodeType":"Return","src":"2128:75:26"}]},"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"1948:89:26","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3798,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:26","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"value","nameLocation":"2073:5:26","nodeType":"VariableDeclaration","scope":3798,"src":"2066:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3774,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:26"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3798,"src":"2103:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3777,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:26"},"scope":5060,"src":"2042:168:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"2389:100:26","statements":[{"id":3816,"nodeType":"UncheckedBlock","src":"2399:84:26","statements":[{"expression":{"arguments":[{"id":3807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"2442:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"2461:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3808,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"2449:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7127_$","typeString":"type(library Math)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:26","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7070,"src":"2449:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3806,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3818,3901,3921],"referencedDeclaration":3901,"src":"2430:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3805,"id":3815,"nodeType":"Return","src":"2423:49:26"}]}]},"documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"2216:94:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:26","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"value","nameLocation":"2344:5:26","nodeType":"VariableDeclaration","scope":3818,"src":"2336:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:26"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"2374:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3803,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:26"},"scope":5060,"src":"2315:174:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3900,"nodeType":"Block","src":"2702:435:26","statements":[{"assignments":[3829],"declarations":[{"constant":false,"id":3829,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:26","nodeType":"VariableDeclaration","scope":3900,"src":"2712:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3831,"initialValue":{"id":3830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"2733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:26"},{"assignments":[3833],"declarations":[{"constant":false,"id":3833,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:26","nodeType":"VariableDeclaration","scope":3900,"src":"2748:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3832,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3842,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3837,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"2784:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3834,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:26"},{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3843,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"2805:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3845,"indexExpression":{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3848,"nodeType":"ExpressionStatement","src":"2805:15:26"},{"expression":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3849,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"2830:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3851,"indexExpression":{"hexValue":"31","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3854,"nodeType":"ExpressionStatement","src":"2830:15:26"},{"body":{"id":3883,"nodeType":"Block","src":"2900:95:26","statements":[{"expression":{"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3869,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"2914:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3871,"indexExpression":{"id":3870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"2921:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3872,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"2926:10:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3876,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"2937:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3878,"nodeType":"ExpressionStatement","src":"2914:40:26"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3879,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"2968:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3882,"nodeType":"ExpressionStatement","src":"2968:16:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"2888:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3884,"initializationExpression":{"assignments":[3856],"declarations":[{"constant":false,"id":3856,"mutability":"mutable","name":"i","nameLocation":"2868:1:26","nodeType":"VariableDeclaration","scope":3884,"src":"2860:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3862,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3858,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"2876:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:26","subExpression":{"id":3866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"2897:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"2895:3:26"},"nodeType":"ForStatement","src":"2855:140:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"3008:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"3004:96:26","trueBody":{"id":3893,"nodeType":"Block","src":"3025:75:26","statements":[{"errorCall":{"arguments":[{"id":3889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"3075:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3890,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"3082:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3888,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"3046:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3892,"nodeType":"RevertStatement","src":"3039:50:26"}]}},{"expression":{"arguments":[{"id":3897,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"3123:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3895,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:26","typeDescriptions":{}}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3827,"id":3899,"nodeType":"Return","src":"3109:21:26"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"2495:112:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3901,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:26","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"value","nameLocation":"2641:5:26","nodeType":"VariableDeclaration","scope":3901,"src":"2633:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"length","nameLocation":"2656:6:26","nodeType":"VariableDeclaration","scope":3901,"src":"2648:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:26"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3901,"src":"2687:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3825,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:26"},"scope":5060,"src":"2612:525:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"3369:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3914,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"3414:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3912,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:26","typeDescriptions":{}}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:26","typeDescriptions":{}}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3917,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"3422:14:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3909,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3818,3901,3921],"referencedDeclaration":3901,"src":"3386:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3908,"id":3919,"nodeType":"Return","src":"3379:58:26"}]},"documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"3143:148:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:26","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"addr","nameLocation":"3325:4:26","nodeType":"VariableDeclaration","scope":3921,"src":"3317:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3903,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:26"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3921,"src":"3354:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3906,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:26"},"scope":5060,"src":"3296:148:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3985,"nodeType":"Block","src":"3701:642:26","statements":[{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:26","nodeType":"VariableDeclaration","scope":3985,"src":"3711:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3929,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3937,"initialValue":{"arguments":[{"arguments":[{"id":3934,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"3751:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3933,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3818,3901,3921],"referencedDeclaration":3921,"src":"3739:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3931,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:26","typeDescriptions":{}}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:26"},{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:26","nodeType":"VariableDeclaration","scope":3985,"src":"3842:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3940,"nodeType":"VariableDeclarationStatement","src":"3842:17:26"},{"AST":{"nativeSrc":"3894:78:26","nodeType":"YulBlock","src":"3894:78:26","statements":[{"nativeSrc":"3908:54:26","nodeType":"YulAssignment","src":"3908:54:26","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:26","nodeType":"YulLiteral","src":"3925:2:26","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:26","nodeType":"YulIdentifier","src":"3943:6:26"},{"kind":"number","nativeSrc":"3951:4:26","nodeType":"YulLiteral","src":"3951:4:26","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:26","nodeType":"YulIdentifier","src":"3939:3:26"},"nativeSrc":"3939:17:26","nodeType":"YulFunctionCall","src":"3939:17:26"},{"kind":"number","nativeSrc":"3958:2:26","nodeType":"YulLiteral","src":"3958:2:26","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:26","nodeType":"YulIdentifier","src":"3929:9:26"},"nativeSrc":"3929:32:26","nodeType":"YulFunctionCall","src":"3929:32:26"}],"functionName":{"name":"shr","nativeSrc":"3921:3:26","nodeType":"YulIdentifier","src":"3921:3:26"},"nativeSrc":"3921:41:26","nodeType":"YulFunctionCall","src":"3921:41:26"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:26","nodeType":"YulIdentifier","src":"3908:9:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3930,"isOffset":false,"isSlot":false,"src":"3943:6:26","valueSize":1},{"declaration":3939,"isOffset":false,"isSlot":false,"src":"3908:9:26","valueSize":1}],"flags":["memory-safe"],"id":3941,"nodeType":"InlineAssembly","src":"3869:103:26"},{"body":{"id":3978,"nodeType":"Block","src":"4015:291:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"4121:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3959,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"4150:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3961,"indexExpression":{"id":3960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"4157:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3957,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:26","typeDescriptions":{}}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"IfStatement","src":"4117:150:26","trueBody":{"id":3972,"nodeType":"Block","src":"4167:100:26","statements":[{"expression":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3966,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"4235:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3968,"indexExpression":{"id":3967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"4242:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3971,"nodeType":"ExpressionStatement","src":"4235:17:26"}]}},{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3974,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"4280:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3977,"nodeType":"ExpressionStatement","src":"4280:15:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"4003:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3979,"initializationExpression":{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"i","nameLocation":"3995:1:26","nodeType":"VariableDeclaration","scope":3979,"src":"3987:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3945,"initialValue":{"hexValue":"3431","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:26","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:26","subExpression":{"id":3949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"4012:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3951,"nodeType":"ExpressionStatement","src":"4010:3:26"},"nodeType":"ForStatement","src":"3982:324:26"},{"expression":{"arguments":[{"id":3982,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"4329:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3980,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:26","typeDescriptions":{}}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3928,"id":3984,"nodeType":"Return","src":"4315:21:26"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"3450:165:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3986,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:26","nodeType":"FunctionDefinition","parameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"addr","nameLocation":"3657:4:26","nodeType":"VariableDeclaration","scope":3986,"src":"3649:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3923,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:26"},"returnParameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3986,"src":"3686:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3926,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:26"},"scope":5060,"src":"3620:723:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4022,"nodeType":"Block","src":"4498:104:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"4521:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3996,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:26","typeDescriptions":{}}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:26","memberName":"length","nodeType":"MemberAccess","src":"4515:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4003,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"4540:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4001,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:26","typeDescriptions":{}}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:26","memberName":"length","nodeType":"MemberAccess","src":"4534:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"4569:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4008,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:26","typeDescriptions":{}}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4007,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4016,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"4592:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4014,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:26","typeDescriptions":{}}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4013,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3995,"id":4021,"nodeType":"Return","src":"4508:87:26"}]},"documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"4349:66:26","text":" @dev Returns true if the two strings are equal."},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:26","nodeType":"FunctionDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"a","nameLocation":"4449:1:26","nodeType":"VariableDeclaration","scope":4023,"src":"4435:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3988,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"b","nameLocation":"4466:1:26","nodeType":"VariableDeclaration","scope":4023,"src":"4452:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3990,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:26"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"4492:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3993,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:26"},"scope":5060,"src":"4420:182:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4041,"nodeType":"Block","src":"4899:64:26","statements":[{"expression":{"arguments":[{"id":4032,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"4926:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4036,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"4942:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4034,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:26","typeDescriptions":{}}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:26","memberName":"length","nodeType":"MemberAccess","src":"4936:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4031,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4042,4073],"referencedDeclaration":4073,"src":"4916:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4030,"id":4040,"nodeType":"Return","src":"4909:47:26"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"4608:214:26","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4042,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:26","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"input","nameLocation":"4860:5:26","nodeType":"VariableDeclaration","scope":4042,"src":"4846:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4025,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:26"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"4890:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:26"},"scope":5060,"src":"4827:136:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4072,"nodeType":"Block","src":"5368:153:26","statements":[{"assignments":[4055,4057],"declarations":[{"constant":false,"id":4055,"mutability":"mutable","name":"success","nameLocation":"5384:7:26","nodeType":"VariableDeclaration","scope":4072,"src":"5379:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4054,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"value","nameLocation":"5401:5:26","nodeType":"VariableDeclaration","scope":4072,"src":"5393:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4063,"initialValue":{"arguments":[{"id":4059,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"5423:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4060,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"5430:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4061,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"5437:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4058,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4094,4131],"referencedDeclaration":4131,"src":"5410:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:26"},{"condition":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:26","subExpression":{"id":4064,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"5456:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"nodeType":"IfStatement","src":"5451:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4066,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"5472:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"RevertStatement","src":"5465:27:26"}},{"expression":{"id":4070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"5509:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4053,"id":4071,"nodeType":"Return","src":"5502:12:26"}]},"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"4969:294:26","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4073,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:26","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"input","nameLocation":"5301:5:26","nodeType":"VariableDeclaration","scope":4073,"src":"5287:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4044,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"begin","nameLocation":"5316:5:26","nodeType":"VariableDeclaration","scope":4073,"src":"5308:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4049,"mutability":"mutable","name":"end","nameLocation":"5331:3:26","nodeType":"VariableDeclaration","scope":4073,"src":"5323:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:26"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4073,"src":"5359:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:26"},"scope":5060,"src":"5268:253:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4093,"nodeType":"Block","src":"5842:83:26","statements":[{"expression":{"arguments":[{"id":4084,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"5888:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4088,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"5904:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4086,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:26","typeDescriptions":{}}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:26","memberName":"length","nodeType":"MemberAccess","src":"5898:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4083,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"5859:28:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4082,"id":4092,"nodeType":"Return","src":"5852:66:26"}]},"documentation":{"id":4074,"nodeType":"StructuredDocumentation","src":"5527:215:26","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4094,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:26","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"input","nameLocation":"5783:5:26","nodeType":"VariableDeclaration","scope":4094,"src":"5769:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4075,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:26"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"success","nameLocation":"5818:7:26","nodeType":"VariableDeclaration","scope":4094,"src":"5813:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4078,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4081,"mutability":"mutable","name":"value","nameLocation":"5835:5:26","nodeType":"VariableDeclaration","scope":4094,"src":"5827:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:26"},"scope":5060,"src":"5747:178:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"6327:144:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6341:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4111,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"6353:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4109,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:26","typeDescriptions":{}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:26","memberName":"length","nodeType":"MemberAccess","src":"6347:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"6370:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4116,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6378:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4123,"nodeType":"IfStatement","src":"6337:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4107,"id":4122,"nodeType":"Return","src":"6383:17:26"}},{"expression":{"arguments":[{"id":4125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"6446:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4126,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"6453:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4127,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6460:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4124,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"6417:28:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4107,"id":4129,"nodeType":"Return","src":"6410:54:26"}]},"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"5931:238:26","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:26","nodeType":"FunctionDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"input","nameLocation":"6219:5:26","nodeType":"VariableDeclaration","scope":4131,"src":"6205:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4096,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4099,"mutability":"mutable","name":"begin","nameLocation":"6242:5:26","nodeType":"VariableDeclaration","scope":4131,"src":"6234:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4101,"mutability":"mutable","name":"end","nameLocation":"6265:3:26","nodeType":"VariableDeclaration","scope":4131,"src":"6257:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:26"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"success","nameLocation":"6303:7:26","nodeType":"VariableDeclaration","scope":4131,"src":"6298:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4103,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"value","nameLocation":"6320:5:26","nodeType":"VariableDeclaration","scope":4131,"src":"6312:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:26"},"scope":5060,"src":"6174:297:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4200,"nodeType":"Block","src":"6874:347:26","statements":[{"assignments":[4146],"declarations":[{"constant":false,"id":4146,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:26","nodeType":"VariableDeclaration","scope":4200,"src":"6884:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4145,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4151,"initialValue":{"arguments":[{"id":4149,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"6912:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4147,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:26","typeDescriptions":{}}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:26"},{"assignments":[4153],"declarations":[{"constant":false,"id":4153,"mutability":"mutable","name":"result","nameLocation":"6937:6:26","nodeType":"VariableDeclaration","scope":4200,"src":"6929:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4155,"initialValue":{"hexValue":"30","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:26"},{"body":{"id":4194,"nodeType":"Block","src":"6995:189:26","statements":[{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"chr","nameLocation":"7015:3:26","nodeType":"VariableDeclaration","scope":4194,"src":"7009:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4166,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4177,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4172,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"7064:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"7072:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4171,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"7041:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4169,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:26","typeDescriptions":{}}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4168,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"7021:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4178,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"7094:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4185,"nodeType":"IfStatement","src":"7090:30:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4144,"id":4184,"nodeType":"Return","src":"7103:17:26"}},{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"7134:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4189,"nodeType":"ExpressionStatement","src":"7134:12:26"},{"expression":{"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"7160:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4191,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"7170:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4193,"nodeType":"ExpressionStatement","src":"7160:13:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"6981:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4161,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"6985:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4195,"initializationExpression":{"assignments":[4157],"declarations":[{"constant":false,"id":4157,"mutability":"mutable","name":"i","nameLocation":"6970:1:26","nodeType":"VariableDeclaration","scope":4195,"src":"6962:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4159,"initialValue":{"id":4158,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"6974:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:26","subExpression":{"id":4163,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"6992:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4165,"nodeType":"ExpressionStatement","src":"6990:3:26"},"nodeType":"ForStatement","src":"6957:227:26"},{"expression":{"components":[{"hexValue":"74727565","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"7207:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4144,"id":4199,"nodeType":"Return","src":"7193:21:26"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"6477:224:26","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4201,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:26","nodeType":"FunctionDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"input","nameLocation":"6767:5:26","nodeType":"VariableDeclaration","scope":4201,"src":"6753:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4133,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"begin","nameLocation":"6790:5:26","nodeType":"VariableDeclaration","scope":4201,"src":"6782:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4138,"mutability":"mutable","name":"end","nameLocation":"6813:3:26","nodeType":"VariableDeclaration","scope":4201,"src":"6805:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:26"},"returnParameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"success","nameLocation":"6850:7:26","nodeType":"VariableDeclaration","scope":4201,"src":"6845:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4140,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"value","nameLocation":"6867:5:26","nodeType":"VariableDeclaration","scope":4201,"src":"6859:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:26"},"scope":5060,"src":"6706:515:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4219,"nodeType":"Block","src":"7518:63:26","statements":[{"expression":{"arguments":[{"id":4210,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"7544:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4214,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"7560:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4212,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:26","typeDescriptions":{}}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:26","memberName":"length","nodeType":"MemberAccess","src":"7554:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4220,4251],"referencedDeclaration":4251,"src":"7535:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4208,"id":4218,"nodeType":"Return","src":"7528:46:26"}]},"documentation":{"id":4202,"nodeType":"StructuredDocumentation","src":"7227:216:26","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4220,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:26","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"input","nameLocation":"7480:5:26","nodeType":"VariableDeclaration","scope":4220,"src":"7466:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4203,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:26"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4220,"src":"7510:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4206,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:26"},"scope":5060,"src":"7448:133:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4250,"nodeType":"Block","src":"7986:151:26","statements":[{"assignments":[4233,4235],"declarations":[{"constant":false,"id":4233,"mutability":"mutable","name":"success","nameLocation":"8002:7:26","nodeType":"VariableDeclaration","scope":4250,"src":"7997:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4232,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4235,"mutability":"mutable","name":"value","nameLocation":"8018:5:26","nodeType":"VariableDeclaration","scope":4250,"src":"8011:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4234,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4241,"initialValue":{"arguments":[{"id":4237,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"8039:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4238,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"8046:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4239,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"8053:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4236,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4272,4314],"referencedDeclaration":4314,"src":"8027:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:26"},{"condition":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:26","subExpression":{"id":4242,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"8072:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4247,"nodeType":"IfStatement","src":"8067:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4244,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"8088:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"RevertStatement","src":"8081:27:26"}},{"expression":{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"8125:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4231,"id":4249,"nodeType":"Return","src":"8118:12:26"}]},"documentation":{"id":4221,"nodeType":"StructuredDocumentation","src":"7587:296:26","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4251,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:26","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"input","nameLocation":"7920:5:26","nodeType":"VariableDeclaration","scope":4251,"src":"7906:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4222,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4225,"mutability":"mutable","name":"begin","nameLocation":"7935:5:26","nodeType":"VariableDeclaration","scope":4251,"src":"7927:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4227,"mutability":"mutable","name":"end","nameLocation":"7950:3:26","nodeType":"VariableDeclaration","scope":4251,"src":"7942:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:26"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"7978:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4229,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:26"},"scope":5060,"src":"7888:249:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4271,"nodeType":"Block","src":"8528:82:26","statements":[{"expression":{"arguments":[{"id":4262,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"8573:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4266,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"8589:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4264,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:26","typeDescriptions":{}}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:26","memberName":"length","nodeType":"MemberAccess","src":"8583:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4261,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"8545:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4260,"id":4270,"nodeType":"Return","src":"8538:65:26"}]},"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"8143:287:26","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4272,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:26","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"input","nameLocation":"8470:5:26","nodeType":"VariableDeclaration","scope":4272,"src":"8456:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4253,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:26"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"success","nameLocation":"8505:7:26","nodeType":"VariableDeclaration","scope":4272,"src":"8500:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4256,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"value","nameLocation":"8521:5:26","nodeType":"VariableDeclaration","scope":4272,"src":"8514:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4258,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:26"},"scope":5060,"src":"8435:175:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4277,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:26","nodeType":"VariableDeclaration","scope":5060,"src":"8616:50:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:26","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4313,"nodeType":"Block","src":"9132:143:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9146:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4294,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"9158:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4292,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:26","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:26","memberName":"length","nodeType":"MemberAccess","src":"9152:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"9175:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4299,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9183:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4306,"nodeType":"IfStatement","src":"9142:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4290,"id":4305,"nodeType":"Return","src":"9188:17:26"}},{"expression":{"arguments":[{"id":4308,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"9250:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4309,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"9257:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4310,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9264:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4307,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"9222:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4290,"id":4312,"nodeType":"Return","src":"9215:53:26"}]},"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"8673:303:26","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4314,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:26","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"input","nameLocation":"9025:5:26","nodeType":"VariableDeclaration","scope":4314,"src":"9011:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4279,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"begin","nameLocation":"9048:5:26","nodeType":"VariableDeclaration","scope":4314,"src":"9040:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"end","nameLocation":"9071:3:26","nodeType":"VariableDeclaration","scope":4314,"src":"9063:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:26"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"success","nameLocation":"9109:7:26","nodeType":"VariableDeclaration","scope":4314,"src":"9104:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4286,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4289,"mutability":"mutable","name":"value","nameLocation":"9125:5:26","nodeType":"VariableDeclaration","scope":4314,"src":"9118:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4288,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:26"},"scope":5060,"src":"8981:294:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4434,"nodeType":"Block","src":"9675:812:26","statements":[{"assignments":[4329],"declarations":[{"constant":false,"id":4329,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:26","nodeType":"VariableDeclaration","scope":4434,"src":"9685:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4328,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4334,"initialValue":{"arguments":[{"id":4332,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9713:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4330,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:26","typeDescriptions":{}}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:26"},{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"sign","nameLocation":"9783:4:26","nodeType":"VariableDeclaration","scope":4434,"src":"9776:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4335,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4352,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"9790:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4338,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"9799:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4347,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"9847:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4348,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"9855:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4346,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"9824:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4344,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:26","typeDescriptions":{}}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:26","trueExpression":{"arguments":[{"hexValue":"30","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4340,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:26","typeDescriptions":{}}},"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:26"},{"assignments":[4354],"declarations":[{"constant":false,"id":4354,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:26","nodeType":"VariableDeclaration","scope":4434,"src":"9943:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4353,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4361,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9963:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4356,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:26","typeDescriptions":{}}},"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:26"},{"assignments":[4363],"declarations":[{"constant":false,"id":4363,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:26","nodeType":"VariableDeclaration","scope":4434,"src":"9992:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4362,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4370,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10012:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4365,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:26","typeDescriptions":{}}},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:26"},{"assignments":[4372],"declarations":[{"constant":false,"id":4372,"mutability":"mutable","name":"offset","nameLocation":"10049:6:26","nodeType":"VariableDeclaration","scope":4434,"src":"10041:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"10059:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4374,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"10075:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"10058:37:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:26"},{"assignments":[4381,4383],"declarations":[{"constant":false,"id":4381,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:26","nodeType":"VariableDeclaration","scope":4434,"src":"10109:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4380,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:26","nodeType":"VariableDeclaration","scope":4434,"src":"10126:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4391,"initialValue":{"arguments":[{"id":4385,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"10159:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"10166:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4387,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10174:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4389,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"10182:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4384,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4094,4131],"referencedDeclaration":4131,"src":"10146:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"10201:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10215:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4394,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"10226:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"10343:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4413,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"10357:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10373:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4416,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"10385:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4327,"id":4431,"nodeType":"Return","src":"10463:17:26"},"id":4432,"nodeType":"IfStatement","src":"10339:141:26","trueBody":{"id":4427,"nodeType":"Block","src":"10401:56:26","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4421,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4420,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:26","memberName":"min","nodeType":"MemberAccess","src":"10429:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4327,"id":4426,"nodeType":"Return","src":"10415:31:26"}]}},"id":4433,"nodeType":"IfStatement","src":"10197:283:26","trueBody":{"id":4411,"nodeType":"Block","src":"10242:91:26","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4398,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"10270:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4406,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10312:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4404,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:26","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:26","trueExpression":{"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:26","subExpression":{"arguments":[{"id":4401,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10293:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4399,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:26","typeDescriptions":{}}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4327,"id":4410,"nodeType":"Return","src":"10256:66:26"}]}}]},"documentation":{"id":4315,"nodeType":"StructuredDocumentation","src":"9281:223:26","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:26","nodeType":"FunctionDefinition","parameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"input","nameLocation":"9569:5:26","nodeType":"VariableDeclaration","scope":4435,"src":"9555:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4316,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4319,"mutability":"mutable","name":"begin","nameLocation":"9592:5:26","nodeType":"VariableDeclaration","scope":4435,"src":"9584:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"end","nameLocation":"9615:3:26","nodeType":"VariableDeclaration","scope":4435,"src":"9607:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:26"},"returnParameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"success","nameLocation":"9652:7:26","nodeType":"VariableDeclaration","scope":4435,"src":"9647:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4323,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"value","nameLocation":"9668:5:26","nodeType":"VariableDeclaration","scope":4435,"src":"9661:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4325,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:26"},"scope":5060,"src":"9509:978:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4453,"nodeType":"Block","src":"10832:67:26","statements":[{"expression":{"arguments":[{"id":4444,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"10862:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4448,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"10878:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4446,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:26","typeDescriptions":{}}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:26","memberName":"length","nodeType":"MemberAccess","src":"10872:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4443,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4454,4485],"referencedDeclaration":4485,"src":"10849:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4442,"id":4452,"nodeType":"Return","src":"10842:50:26"}]},"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"10493:259:26","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:26","nodeType":"FunctionDefinition","parameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"input","nameLocation":"10793:5:26","nodeType":"VariableDeclaration","scope":4454,"src":"10779:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4437,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:26"},"returnParameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"10823:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:26"},"scope":5060,"src":"10757:142:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4484,"nodeType":"Block","src":"11320:156:26","statements":[{"assignments":[4467,4469],"declarations":[{"constant":false,"id":4467,"mutability":"mutable","name":"success","nameLocation":"11336:7:26","nodeType":"VariableDeclaration","scope":4484,"src":"11331:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4466,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"value","nameLocation":"11353:5:26","nodeType":"VariableDeclaration","scope":4484,"src":"11345:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4475,"initialValue":{"arguments":[{"id":4471,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"11378:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4472,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11385:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4473,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"11392:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4470,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4506,4543],"referencedDeclaration":4543,"src":"11362:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:26"},{"condition":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:26","subExpression":{"id":4476,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"11411:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4481,"nodeType":"IfStatement","src":"11406:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4478,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"11427:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4480,"nodeType":"RevertStatement","src":"11420:27:26"}},{"expression":{"id":4482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"11464:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4465,"id":4483,"nodeType":"Return","src":"11457:12:26"}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"10905:307:26","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4485,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:26","nodeType":"FunctionDefinition","parameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"input","nameLocation":"11253:5:26","nodeType":"VariableDeclaration","scope":4485,"src":"11239:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4456,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"begin","nameLocation":"11268:5:26","nodeType":"VariableDeclaration","scope":4485,"src":"11260:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"end","nameLocation":"11283:3:26","nodeType":"VariableDeclaration","scope":4485,"src":"11275:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:26"},"returnParameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4485,"src":"11311:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:26"},"scope":5060,"src":"11217:259:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4505,"nodeType":"Block","src":"11803:86:26","statements":[{"expression":{"arguments":[{"id":4496,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"11852:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4500,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"11868:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4498,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:26","typeDescriptions":{}}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:26","memberName":"length","nodeType":"MemberAccess","src":"11862:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4495,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"11820:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4494,"id":4504,"nodeType":"Return","src":"11813:69:26"}]},"documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"11482:218:26","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4506,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:26","nodeType":"FunctionDefinition","parameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"input","nameLocation":"11744:5:26","nodeType":"VariableDeclaration","scope":4506,"src":"11730:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4487,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:26"},"returnParameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"success","nameLocation":"11779:7:26","nodeType":"VariableDeclaration","scope":4506,"src":"11774:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4490,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4493,"mutability":"mutable","name":"value","nameLocation":"11796:5:26","nodeType":"VariableDeclaration","scope":4506,"src":"11788:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:26"},"scope":5060,"src":"11705:184:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4542,"nodeType":"Block","src":"12297:147:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"12311:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4523,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"12323:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4521,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:26","typeDescriptions":{}}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:26","memberName":"length","nodeType":"MemberAccess","src":"12317:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"12340:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4528,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"12348:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4535,"nodeType":"IfStatement","src":"12307:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4519,"id":4534,"nodeType":"Return","src":"12353:17:26"}},{"expression":{"arguments":[{"id":4537,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"12419:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4538,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"12426:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4539,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"12433:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4536,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"12387:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4519,"id":4541,"nodeType":"Return","src":"12380:57:26"}]},"documentation":{"id":4507,"nodeType":"StructuredDocumentation","src":"11895:241:26","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4543,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:26","nodeType":"FunctionDefinition","parameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4509,"mutability":"mutable","name":"input","nameLocation":"12189:5:26","nodeType":"VariableDeclaration","scope":4543,"src":"12175:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4508,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4511,"mutability":"mutable","name":"begin","nameLocation":"12212:5:26","nodeType":"VariableDeclaration","scope":4543,"src":"12204:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4510,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4513,"mutability":"mutable","name":"end","nameLocation":"12235:3:26","nodeType":"VariableDeclaration","scope":4543,"src":"12227:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4512,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:26"},"returnParameters":{"id":4519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"success","nameLocation":"12273:7:26","nodeType":"VariableDeclaration","scope":4543,"src":"12268:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4515,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4518,"mutability":"mutable","name":"value","nameLocation":"12290:5:26","nodeType":"VariableDeclaration","scope":4543,"src":"12282:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:26"},"scope":5060,"src":"12141:303:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4645,"nodeType":"Block","src":"12853:881:26","statements":[{"assignments":[4558],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:26","nodeType":"VariableDeclaration","scope":4645,"src":"12863:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4557,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4563,"initialValue":{"arguments":[{"id":4561,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"12891:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4559,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:26","typeDescriptions":{}}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:26"},{"assignments":[4565],"declarations":[{"constant":false,"id":4565,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:26","nodeType":"VariableDeclaration","scope":4645,"src":"12945:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4564,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4585,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"12963:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4567,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"12969:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4575,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"13013:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4576,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"13021:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4574,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"12990:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4572,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:26","typeDescriptions":{}}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4579,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:26","typeDescriptions":{}}},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:26"},{"assignments":[4587],"declarations":[{"constant":false,"id":4587,"mutability":"mutable","name":"offset","nameLocation":"13133:6:26","nodeType":"VariableDeclaration","scope":4645,"src":"13125:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4593,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4588,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13142:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"13142:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:26"},{"assignments":[4595],"declarations":[{"constant":false,"id":4595,"mutability":"mutable","name":"result","nameLocation":"13183:6:26","nodeType":"VariableDeclaration","scope":4645,"src":"13175:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4597,"initialValue":{"hexValue":"30","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:26"},{"body":{"id":4639,"nodeType":"Block","src":"13250:447:26","statements":[{"assignments":[4611],"declarations":[{"constant":false,"id":4611,"mutability":"mutable","name":"chr","nameLocation":"13270:3:26","nodeType":"VariableDeclaration","scope":4639,"src":"13264:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4610,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4621,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4616,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"13319:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"13327:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4615,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"13296:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4613,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:26","typeDescriptions":{}}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4612,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"13276:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"13349:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4629,"nodeType":"IfStatement","src":"13345:31:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4556,"id":4628,"nodeType":"Return","src":"13359:17:26"}},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"13390:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"13390:12:26"},{"id":4638,"nodeType":"UncheckedBlock","src":"13416:271:26","statements":[{"expression":{"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"13659:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4635,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"13669:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4637,"nodeType":"ExpressionStatement","src":"13659:13:26"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"13236:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4605,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"13240:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"initializationExpression":{"assignments":[4599],"declarations":[{"constant":false,"id":4599,"mutability":"mutable","name":"i","nameLocation":"13216:1:26","nodeType":"VariableDeclaration","scope":4640,"src":"13208:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4603,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4600,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"13220:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4601,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"13228:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:26","subExpression":{"id":4607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"13247:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4609,"nodeType":"ExpressionStatement","src":"13245:3:26"},"nodeType":"ForStatement","src":"13203:494:26"},{"expression":{"components":[{"hexValue":"74727565","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"13720:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4556,"id":4644,"nodeType":"Return","src":"13706:21:26"}]},"documentation":{"id":4544,"nodeType":"StructuredDocumentation","src":"12450:227:26","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4646,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:26","nodeType":"FunctionDefinition","parameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"input","nameLocation":"12746:5:26","nodeType":"VariableDeclaration","scope":4646,"src":"12732:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4545,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4548,"mutability":"mutable","name":"begin","nameLocation":"12769:5:26","nodeType":"VariableDeclaration","scope":4646,"src":"12761:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"end","nameLocation":"12792:3:26","nodeType":"VariableDeclaration","scope":4646,"src":"12784:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:26"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"success","nameLocation":"12829:7:26","nodeType":"VariableDeclaration","scope":4646,"src":"12824:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4552,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4555,"mutability":"mutable","name":"value","nameLocation":"12846:5:26","nodeType":"VariableDeclaration","scope":4646,"src":"12838:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:26"},"scope":5060,"src":"12682:1052:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4664,"nodeType":"Block","src":"14032:67:26","statements":[{"expression":{"arguments":[{"id":4655,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"14062:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4659,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"14078:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4657,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:26","typeDescriptions":{}}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:26","memberName":"length","nodeType":"MemberAccess","src":"14072:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4654,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4665,4696],"referencedDeclaration":4696,"src":"14049:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4653,"id":4663,"nodeType":"Return","src":"14042:50:26"}]},"documentation":{"id":4647,"nodeType":"StructuredDocumentation","src":"13740:212:26","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4665,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:26","nodeType":"FunctionDefinition","parameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"input","nameLocation":"13993:5:26","nodeType":"VariableDeclaration","scope":4665,"src":"13979:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4648,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:26"},"returnParameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4665,"src":"14023:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4651,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:26"},"scope":5060,"src":"13957:142:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4695,"nodeType":"Block","src":"14472:165:26","statements":[{"assignments":[4678,4680],"declarations":[{"constant":false,"id":4678,"mutability":"mutable","name":"success","nameLocation":"14488:7:26","nodeType":"VariableDeclaration","scope":4695,"src":"14483:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4677,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4680,"mutability":"mutable","name":"value","nameLocation":"14505:5:26","nodeType":"VariableDeclaration","scope":4695,"src":"14497:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4679,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4686,"initialValue":{"arguments":[{"id":4682,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"14530:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4683,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"14537:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4684,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"14544:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4681,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4717,4821],"referencedDeclaration":4821,"src":"14514:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:26"},{"condition":{"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:26","subExpression":{"id":4687,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"14563:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4692,"nodeType":"IfStatement","src":"14558:50:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4689,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"14579:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4691,"nodeType":"RevertStatement","src":"14572:36:26"}},{"expression":{"id":4693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"14625:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4676,"id":4694,"nodeType":"Return","src":"14618:12:26"}]},"documentation":{"id":4666,"nodeType":"StructuredDocumentation","src":"14105:259:26","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4696,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:26","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"input","nameLocation":"14405:5:26","nodeType":"VariableDeclaration","scope":4696,"src":"14391:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4667,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"begin","nameLocation":"14420:5:26","nodeType":"VariableDeclaration","scope":4696,"src":"14412:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4672,"mutability":"mutable","name":"end","nameLocation":"14435:3:26","nodeType":"VariableDeclaration","scope":4696,"src":"14427:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:26"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4696,"src":"14463:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4674,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:26"},"scope":5060,"src":"14369:268:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4716,"nodeType":"Block","src":"14944:70:26","statements":[{"expression":{"arguments":[{"id":4707,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"14977:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4711,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"14993:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4709,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:26","typeDescriptions":{}}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:26","memberName":"length","nodeType":"MemberAccess","src":"14987:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4706,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4717,4821],"referencedDeclaration":4821,"src":"14961:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4705,"id":4715,"nodeType":"Return","src":"14954:53:26"}]},"documentation":{"id":4697,"nodeType":"StructuredDocumentation","src":"14643:198:26","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":4717,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:26","nodeType":"FunctionDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4699,"mutability":"mutable","name":"input","nameLocation":"14885:5:26","nodeType":"VariableDeclaration","scope":4717,"src":"14871:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4698,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:26"},"returnParameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"success","nameLocation":"14920:7:26","nodeType":"VariableDeclaration","scope":4717,"src":"14915:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4701,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4704,"mutability":"mutable","name":"value","nameLocation":"14937:5:26","nodeType":"VariableDeclaration","scope":4717,"src":"14929:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4703,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:26"},"scope":5060,"src":"14846:168:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4820,"nodeType":"Block","src":"15407:733:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"15421:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4734,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"15433:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4732,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:26","typeDescriptions":{}}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:26","memberName":"length","nodeType":"MemberAccess","src":"15427:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4738,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"15450:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4739,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"15458:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4749,"nodeType":"IfStatement","src":"15417:72:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4743,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:26","typeDescriptions":{}}},"id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4730,"id":4748,"nodeType":"Return","src":"15463:26:26"}},{"assignments":[4751],"declarations":[{"constant":false,"id":4751,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:26","nodeType":"VariableDeclaration","scope":4820,"src":"15500:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4750,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4774,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"15518:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"15524:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4763,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"15574:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4761,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:26","typeDescriptions":{}}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4765,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"15582:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4760,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"15545:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4758,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:26","typeDescriptions":{}}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4768,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:26","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:26"},{"assignments":[4776],"declarations":[{"constant":false,"id":4776,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:26","nodeType":"VariableDeclaration","scope":4820,"src":"15686:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4784,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4778,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"15716:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"15716:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4785,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"15803:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4786,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"15809:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4788,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"15818:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4818,"nodeType":"Block","src":"16083:51:26","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4812,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:26","typeDescriptions":{}}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4730,"id":4817,"nodeType":"Return","src":"16097:26:26"}]},"id":4819,"nodeType":"IfStatement","src":"15799:335:26","trueBody":{"id":4810,"nodeType":"Block","src":"15834:243:26","statements":[{"assignments":[4791,4793],"declarations":[{"constant":false,"id":4791,"mutability":"mutable","name":"s","nameLocation":"15955:1:26","nodeType":"VariableDeclaration","scope":4810,"src":"15950:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4790,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4793,"mutability":"mutable","name":"v","nameLocation":"15966:1:26","nodeType":"VariableDeclaration","scope":4810,"src":"15958:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4799,"initialValue":{"arguments":[{"id":4795,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"16003:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4796,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"16010:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4797,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"16017:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4794,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"15971:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:26"},{"expression":{"components":[{"id":4800,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"16043:1:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4805,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"16062:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4803,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:26","typeDescriptions":{}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4801,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:26","typeDescriptions":{}}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4730,"id":4809,"nodeType":"Return","src":"16035:31:26"}]}}]},"documentation":{"id":4718,"nodeType":"StructuredDocumentation","src":"15020:226:26","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4821,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:26","nodeType":"FunctionDefinition","parameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"input","nameLocation":"15299:5:26","nodeType":"VariableDeclaration","scope":4821,"src":"15285:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4719,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"begin","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":4821,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4724,"mutability":"mutable","name":"end","nameLocation":"15345:3:26","nodeType":"VariableDeclaration","scope":4821,"src":"15337:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:26"},"returnParameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4727,"mutability":"mutable","name":"success","nameLocation":"15383:7:26","nodeType":"VariableDeclaration","scope":4821,"src":"15378:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4726,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4729,"mutability":"mutable","name":"value","nameLocation":"15400:5:26","nodeType":"VariableDeclaration","scope":4821,"src":"15392:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4728,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:26"},"scope":5060,"src":"15251:889:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4880,"nodeType":"Block","src":"16209:461:26","statements":[{"assignments":[4829],"declarations":[{"constant":false,"id":4829,"mutability":"mutable","name":"value","nameLocation":"16225:5:26","nodeType":"VariableDeclaration","scope":4880,"src":"16219:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4828,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4834,"initialValue":{"arguments":[{"id":4832,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16239:3:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4830,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:26","typeDescriptions":{}}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:26"},{"id":4877,"nodeType":"UncheckedBlock","src":"16403:238:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16431:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:26","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16445:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:26","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16491:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16505:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:26","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16552:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16566:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:26","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4869,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4868,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:26","memberName":"max","nodeType":"MemberAccess","src":"16615:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4827,"id":4873,"nodeType":"Return","src":"16608:22:26"},"id":4874,"nodeType":"IfStatement","src":"16548:82:26","trueBody":{"expression":{"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16578:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:26","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4867,"nodeType":"ExpressionStatement","src":"16578:11:26"}},"id":4875,"nodeType":"IfStatement","src":"16487:143:26","trueBody":{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16518:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:26","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4856,"nodeType":"ExpressionStatement","src":"16518:11:26"}},"id":4876,"nodeType":"IfStatement","src":"16427:203:26","trueBody":{"expression":{"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16457:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4845,"nodeType":"ExpressionStatement","src":"16457:11:26"}}]},{"expression":{"id":4878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"16658:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4827,"id":4879,"nodeType":"Return","src":"16651:12:26"}]},"id":4881,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:26","nodeType":"FunctionDefinition","parameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"chr","nameLocation":"16175:3:26","nodeType":"VariableDeclaration","scope":4881,"src":"16168:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4822,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:26"},"returnParameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4881,"src":"16202:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4825,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:26"},"scope":5060,"src":"16146:524:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5046,"nodeType":"Block","src":"17336:1331:26","statements":[{"assignments":[4890],"declarations":[{"constant":false,"id":4890,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:26","nodeType":"VariableDeclaration","scope":5046,"src":"17346:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4889,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4895,"initialValue":{"arguments":[{"id":4893,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"17374:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4891,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:26","typeDescriptions":{}}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:26"},{"assignments":[4897],"declarations":[{"constant":false,"id":4897,"mutability":"mutable","name":"output","nameLocation":"17403:6:26","nodeType":"VariableDeclaration","scope":5046,"src":"17390:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4896,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4905,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4901,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"17426:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:26","memberName":"length","nodeType":"MemberAccess","src":"17426:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4898,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:26"},{"assignments":[4907],"declarations":[{"constant":false,"id":4907,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:26","nodeType":"VariableDeclaration","scope":5046,"src":"17473:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4909,"initialValue":{"hexValue":"30","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:26"},{"body":{"id":5038,"nodeType":"Block","src":"17548:854:26","statements":[{"assignments":[4921],"declarations":[{"constant":false,"id":4921,"mutability":"mutable","name":"char","nameLocation":"17569:4:26","nodeType":"VariableDeclaration","scope":5038,"src":"17562:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4920,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4929,"initialValue":{"arguments":[{"arguments":[{"id":4925,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"17606:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4926,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"17614:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4924,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"17583:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4922,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:26","typeDescriptions":{}}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:26"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"17637:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4934,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17672:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4932,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:26","typeDescriptions":{}}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5036,"nodeType":"Block","src":"18330:62:26","statements":[{"expression":{"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5029,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"18348:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5032,"indexExpression":{"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:26","subExpression":{"id":5030,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"18355:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5033,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"18373:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5035,"nodeType":"ExpressionStatement","src":"18348:29:26"}]},"id":5037,"nodeType":"IfStatement","src":"17631:761:26","trueBody":{"id":5028,"nodeType":"Block","src":"17687:637:26","statements":[{"expression":{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4943,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4946,"indexExpression":{"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:26","subExpression":{"id":4944,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"17712:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4949,"nodeType":"ExpressionStatement","src":"17705:29:26"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17756:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17825:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17894:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17963:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:26","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"18032:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:26","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"18101:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:26","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5010,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"18171:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:26","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5021,"nodeType":"IfStatement","src":"18167:143:26","trueBody":{"id":5020,"nodeType":"Block","src":"18185:125:26","statements":[{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5013,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"18263:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5016,"indexExpression":{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:26","subExpression":{"id":5014,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"18270:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5019,"nodeType":"ExpressionStatement","src":"18263:28:26"}]}},"id":5022,"nodeType":"IfStatement","src":"18097:213:26","trueBody":{"expression":{"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5003,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"18115:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5006,"indexExpression":{"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:26","subExpression":{"id":5004,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"18122:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5009,"nodeType":"ExpressionStatement","src":"18115:29:26"}},"id":5023,"nodeType":"IfStatement","src":"18028:282:26","trueBody":{"expression":{"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4993,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"18046:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4996,"indexExpression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:26","subExpression":{"id":4994,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"18053:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4999,"nodeType":"ExpressionStatement","src":"18046:28:26"}},"id":5024,"nodeType":"IfStatement","src":"17959:351:26","trueBody":{"expression":{"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4983,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"17977:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4986,"indexExpression":{"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:26","subExpression":{"id":4984,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"17984:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4989,"nodeType":"ExpressionStatement","src":"17977:28:26"}},"id":5025,"nodeType":"IfStatement","src":"17890:420:26","trueBody":{"expression":{"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4973,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"17908:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4976,"indexExpression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:26","subExpression":{"id":4974,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"17915:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4979,"nodeType":"ExpressionStatement","src":"17908:28:26"}},"id":5026,"nodeType":"IfStatement","src":"17821:489:26","trueBody":{"expression":{"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4963,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"17839:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4966,"indexExpression":{"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:26","subExpression":{"id":4964,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"17846:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4969,"nodeType":"ExpressionStatement","src":"17839:28:26"}},"id":5027,"nodeType":"IfStatement","src":"17752:558:26","trueBody":{"expression":{"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4953,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"17770:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4956,"indexExpression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:26","subExpression":{"id":4954,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"17777:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4959,"nodeType":"ExpressionStatement","src":"17770:28:26"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"17524:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4914,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"17528:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:26","memberName":"length","nodeType":"MemberAccess","src":"17528:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5039,"initializationExpression":{"assignments":[4911],"declarations":[{"constant":false,"id":4911,"mutability":"mutable","name":"i","nameLocation":"17521:1:26","nodeType":"VariableDeclaration","scope":5039,"src":"17513:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4912,"nodeType":"VariableDeclarationStatement","src":"17513:9:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:26","subExpression":{"id":4917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"17545:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4919,"nodeType":"ExpressionStatement","src":"17543:3:26"},"nodeType":"ForStatement","src":"17508:894:26"},{"AST":{"nativeSrc":"18500:129:26","nodeType":"YulBlock","src":"18500:129:26","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:26","nodeType":"YulIdentifier","src":"18521:6:26"},{"name":"outputLength","nativeSrc":"18529:12:26","nodeType":"YulIdentifier","src":"18529:12:26"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:26","nodeType":"YulIdentifier","src":"18514:6:26"},"nativeSrc":"18514:28:26","nodeType":"YulFunctionCall","src":"18514:28:26"},"nativeSrc":"18514:28:26","nodeType":"YulExpressionStatement","src":"18514:28:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:26","nodeType":"YulLiteral","src":"18562:4:26","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:26","nodeType":"YulIdentifier","src":"18572:6:26"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:26","nodeType":"YulLiteral","src":"18584:1:26","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:26","nodeType":"YulLiteral","src":"18591:1:26","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:26","nodeType":"YulIdentifier","src":"18598:12:26"},{"kind":"number","nativeSrc":"18612:2:26","nodeType":"YulLiteral","src":"18612:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:26","nodeType":"YulIdentifier","src":"18594:3:26"},"nativeSrc":"18594:21:26","nodeType":"YulFunctionCall","src":"18594:21:26"}],"functionName":{"name":"shr","nativeSrc":"18587:3:26","nodeType":"YulIdentifier","src":"18587:3:26"},"nativeSrc":"18587:29:26","nodeType":"YulFunctionCall","src":"18587:29:26"}],"functionName":{"name":"shl","nativeSrc":"18580:3:26","nodeType":"YulIdentifier","src":"18580:3:26"},"nativeSrc":"18580:37:26","nodeType":"YulFunctionCall","src":"18580:37:26"}],"functionName":{"name":"add","nativeSrc":"18568:3:26","nodeType":"YulIdentifier","src":"18568:3:26"},"nativeSrc":"18568:50:26","nodeType":"YulFunctionCall","src":"18568:50:26"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:26","nodeType":"YulIdentifier","src":"18555:6:26"},"nativeSrc":"18555:64:26","nodeType":"YulFunctionCall","src":"18555:64:26"},"nativeSrc":"18555:64:26","nodeType":"YulExpressionStatement","src":"18555:64:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":4897,"isOffset":false,"isSlot":false,"src":"18521:6:26","valueSize":1},{"declaration":4897,"isOffset":false,"isSlot":false,"src":"18572:6:26","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"18529:12:26","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"18598:12:26","valueSize":1}],"flags":["memory-safe"],"id":5040,"nodeType":"InlineAssembly","src":"18475:154:26"},{"expression":{"arguments":[{"id":5043,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"18653:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5041,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:26","typeDescriptions":{}}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4888,"id":5045,"nodeType":"Return","src":"18639:21:26"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"16676:576:26","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":5047,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:26","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"input","nameLocation":"17291:5:26","nodeType":"VariableDeclaration","scope":5047,"src":"17277:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4883,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:26"},"returnParameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5047,"src":"17321:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4886,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:26"},"scope":5060,"src":"17257:1410:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5058,"nodeType":"Block","src":"19052:225:26","statements":[{"AST":{"nativeSrc":"19201:70:26","nodeType":"YulBlock","src":"19201:70:26","statements":[{"nativeSrc":"19215:46:26","nodeType":"YulAssignment","src":"19215:46:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:26","nodeType":"YulIdentifier","src":"19238:6:26"},{"kind":"number","nativeSrc":"19246:4:26","nodeType":"YulLiteral","src":"19246:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:26","nodeType":"YulIdentifier","src":"19234:3:26"},"nativeSrc":"19234:17:26","nodeType":"YulFunctionCall","src":"19234:17:26"},{"name":"offset","nativeSrc":"19253:6:26","nodeType":"YulIdentifier","src":"19253:6:26"}],"functionName":{"name":"add","nativeSrc":"19230:3:26","nodeType":"YulIdentifier","src":"19230:3:26"},"nativeSrc":"19230:30:26","nodeType":"YulFunctionCall","src":"19230:30:26"}],"functionName":{"name":"mload","nativeSrc":"19224:5:26","nodeType":"YulIdentifier","src":"19224:5:26"},"nativeSrc":"19224:37:26","nodeType":"YulFunctionCall","src":"19224:37:26"},"variableNames":[{"name":"value","nativeSrc":"19215:5:26","nodeType":"YulIdentifier","src":"19215:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5050,"isOffset":false,"isSlot":false,"src":"19238:6:26","valueSize":1},{"declaration":5052,"isOffset":false,"isSlot":false,"src":"19253:6:26","valueSize":1},{"declaration":5055,"isOffset":false,"isSlot":false,"src":"19215:5:26","valueSize":1}],"flags":["memory-safe"],"id":5057,"nodeType":"InlineAssembly","src":"19176:95:26"}]},"documentation":{"id":5048,"nodeType":"StructuredDocumentation","src":"18673:268:26","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5059,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:26","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:26","nodeType":"VariableDeclaration","scope":5059,"src":"18978:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5049,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"offset","nameLocation":"19007:6:26","nodeType":"VariableDeclaration","scope":5059,"src":"18999:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:26"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"value","nameLocation":"19045:5:26","nodeType":"VariableDeclaration","scope":5059,"src":"19037:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:26"},"scope":5060,"src":"18946:331:26","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5061,"src":"297:18982:26","usedErrors":[3718,3721,3724],"usedEvents":[]}],"src":"101:19179:26"},"id":26},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5408]},"id":5409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5062,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":5063,"nodeType":"StructuredDocumentation","src":"138:205:27","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5408,"linearizedBaseContracts":[5408],"name":"ECDSA","nameLocation":"352:5:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":5068,"members":[{"id":5064,"name":"NoError","nameLocation":"392:7:27","nodeType":"EnumValue","src":"392:7:27"},{"id":5065,"name":"InvalidSignature","nameLocation":"409:16:27","nodeType":"EnumValue","src":"409:16:27"},{"id":5066,"name":"InvalidSignatureLength","nameLocation":"435:22:27","nodeType":"EnumValue","src":"435:22:27"},{"id":5067,"name":"InvalidSignatureS","nameLocation":"467:17:27","nodeType":"EnumValue","src":"467:17:27"}],"name":"RecoverError","nameLocation":"369:12:27","nodeType":"EnumDefinition","src":"364:126:27"},{"documentation":{"id":5069,"nodeType":"StructuredDocumentation","src":"496:63:27","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":5071,"name":"ECDSAInvalidSignature","nameLocation":"570:21:27","nodeType":"ErrorDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[],"src":"591:2:27"},"src":"564:30:27"},{"documentation":{"id":5072,"nodeType":"StructuredDocumentation","src":"600:60:27","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":5076,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:27","nodeType":"ErrorDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"length","nameLocation":"707:6:27","nodeType":"VariableDeclaration","scope":5076,"src":"699:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:27"},"src":"665:50:27"},{"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"721:85:27","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":5081,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:27","nodeType":"ErrorDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"s","nameLocation":"848:1:27","nodeType":"VariableDeclaration","scope":5081,"src":"840:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:27"},"src":"811:40:27"},{"body":{"id":5133,"nodeType":"Block","src":"2285:622:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5096,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"2299:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:27","memberName":"length","nodeType":"MemberAccess","src":"2299:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:27","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5131,"nodeType":"Block","src":"2793:108:27","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5118,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:27","typeDescriptions":{}}},"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5122,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"2827:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:27","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5066,"src":"2827:35:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":5126,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"2872:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:27","memberName":"length","nodeType":"MemberAccess","src":"2872:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:27","typeDescriptions":{}}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5095,"id":5130,"nodeType":"Return","src":"2807:83:27"}]},"id":5132,"nodeType":"IfStatement","src":"2295:606:27","trueBody":{"id":5117,"nodeType":"Block","src":"2323:464:27","statements":[{"assignments":[5101],"declarations":[{"constant":false,"id":5101,"mutability":"mutable","name":"r","nameLocation":"2345:1:27","nodeType":"VariableDeclaration","scope":5117,"src":"2337:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5102,"nodeType":"VariableDeclarationStatement","src":"2337:9:27"},{"assignments":[5104],"declarations":[{"constant":false,"id":5104,"mutability":"mutable","name":"s","nameLocation":"2368:1:27","nodeType":"VariableDeclaration","scope":5117,"src":"2360:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5105,"nodeType":"VariableDeclarationStatement","src":"2360:9:27"},{"assignments":[5107],"declarations":[{"constant":false,"id":5107,"mutability":"mutable","name":"v","nameLocation":"2389:1:27","nodeType":"VariableDeclaration","scope":5117,"src":"2383:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5106,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5108,"nodeType":"VariableDeclarationStatement","src":"2383:7:27"},{"AST":{"nativeSrc":"2560:171:27","nodeType":"YulBlock","src":"2560:171:27","statements":[{"nativeSrc":"2578:32:27","nodeType":"YulAssignment","src":"2578:32:27","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:27","nodeType":"YulIdentifier","src":"2593:9:27"},{"kind":"number","nativeSrc":"2604:4:27","nodeType":"YulLiteral","src":"2604:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:27","nodeType":"YulIdentifier","src":"2589:3:27"},"nativeSrc":"2589:20:27","nodeType":"YulFunctionCall","src":"2589:20:27"}],"functionName":{"name":"mload","nativeSrc":"2583:5:27","nodeType":"YulIdentifier","src":"2583:5:27"},"nativeSrc":"2583:27:27","nodeType":"YulFunctionCall","src":"2583:27:27"},"variableNames":[{"name":"r","nativeSrc":"2578:1:27","nodeType":"YulIdentifier","src":"2578:1:27"}]},{"nativeSrc":"2627:32:27","nodeType":"YulAssignment","src":"2627:32:27","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:27","nodeType":"YulIdentifier","src":"2642:9:27"},{"kind":"number","nativeSrc":"2653:4:27","nodeType":"YulLiteral","src":"2653:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:27","nodeType":"YulIdentifier","src":"2638:3:27"},"nativeSrc":"2638:20:27","nodeType":"YulFunctionCall","src":"2638:20:27"}],"functionName":{"name":"mload","nativeSrc":"2632:5:27","nodeType":"YulIdentifier","src":"2632:5:27"},"nativeSrc":"2632:27:27","nodeType":"YulFunctionCall","src":"2632:27:27"},"variableNames":[{"name":"s","nativeSrc":"2627:1:27","nodeType":"YulIdentifier","src":"2627:1:27"}]},{"nativeSrc":"2676:41:27","nodeType":"YulAssignment","src":"2676:41:27","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:27","nodeType":"YulLiteral","src":"2686:1:27","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:27","nodeType":"YulIdentifier","src":"2699:9:27"},{"kind":"number","nativeSrc":"2710:4:27","nodeType":"YulLiteral","src":"2710:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:27","nodeType":"YulIdentifier","src":"2695:3:27"},"nativeSrc":"2695:20:27","nodeType":"YulFunctionCall","src":"2695:20:27"}],"functionName":{"name":"mload","nativeSrc":"2689:5:27","nodeType":"YulIdentifier","src":"2689:5:27"},"nativeSrc":"2689:27:27","nodeType":"YulFunctionCall","src":"2689:27:27"}],"functionName":{"name":"byte","nativeSrc":"2681:4:27","nodeType":"YulIdentifier","src":"2681:4:27"},"nativeSrc":"2681:36:27","nodeType":"YulFunctionCall","src":"2681:36:27"},"variableNames":[{"name":"v","nativeSrc":"2676:1:27","nodeType":"YulIdentifier","src":"2676:1:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5101,"isOffset":false,"isSlot":false,"src":"2578:1:27","valueSize":1},{"declaration":5104,"isOffset":false,"isSlot":false,"src":"2627:1:27","valueSize":1},{"declaration":5086,"isOffset":false,"isSlot":false,"src":"2593:9:27","valueSize":1},{"declaration":5086,"isOffset":false,"isSlot":false,"src":"2642:9:27","valueSize":1},{"declaration":5086,"isOffset":false,"isSlot":false,"src":"2699:9:27","valueSize":1},{"declaration":5107,"isOffset":false,"isSlot":false,"src":"2676:1:27","valueSize":1}],"flags":["memory-safe"],"id":5109,"nodeType":"InlineAssembly","src":"2535:196:27"},{"expression":{"arguments":[{"id":5111,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"2762:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5112,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"2768:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5113,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"2771:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5114,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"2774:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5110,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5134,5214,5322],"referencedDeclaration":5322,"src":"2751:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5095,"id":5116,"nodeType":"Return","src":"2744:32:27"}]}}]},"documentation":{"id":5082,"nodeType":"StructuredDocumentation","src":"857:1267:27","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:27","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"hash","nameLocation":"2166:4:27","nodeType":"VariableDeclaration","scope":5134,"src":"2158:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5086,"mutability":"mutable","name":"signature","nameLocation":"2193:9:27","nodeType":"VariableDeclaration","scope":5134,"src":"2180:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5085,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:27"},"returnParameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:27","nodeType":"VariableDeclaration","scope":5134,"src":"2232:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5088,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5092,"mutability":"mutable","name":"err","nameLocation":"2264:3:27","nodeType":"VariableDeclaration","scope":5134,"src":"2251:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5091,"nodeType":"UserDefinedTypeName","pathNode":{"id":5090,"name":"RecoverError","nameLocations":["2251:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"2251:12:27"},"referencedDeclaration":5068,"src":"2251:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5094,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:27","nodeType":"VariableDeclaration","scope":5134,"src":"2269:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:27"},"scope":5408,"src":"2129:778:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5163,"nodeType":"Block","src":"3801:168:27","statements":[{"assignments":[5145,5148,5150],"declarations":[{"constant":false,"id":5145,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:27","nodeType":"VariableDeclaration","scope":5163,"src":"3812:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5144,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5148,"mutability":"mutable","name":"error","nameLocation":"3844:5:27","nodeType":"VariableDeclaration","scope":5163,"src":"3831:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5147,"nodeType":"UserDefinedTypeName","pathNode":{"id":5146,"name":"RecoverError","nameLocations":["3831:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"3831:12:27"},"referencedDeclaration":5068,"src":"3831:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5150,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:27","nodeType":"VariableDeclaration","scope":5163,"src":"3851:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5155,"initialValue":{"arguments":[{"id":5152,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"3882:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5153,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"3888:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5151,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5134,5214,5322],"referencedDeclaration":5134,"src":"3871:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:27"},{"expression":{"arguments":[{"id":5157,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"3920:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},{"id":5158,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"3927:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5156,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"3908:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5068_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5160,"nodeType":"ExpressionStatement","src":"3908:28:27"},{"expression":{"id":5161,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"3953:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5143,"id":5162,"nodeType":"Return","src":"3946:16:27"}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"2913:796:27","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":5164,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:27","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"hash","nameLocation":"3739:4:27","nodeType":"VariableDeclaration","scope":5164,"src":"3731:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5139,"mutability":"mutable","name":"signature","nameLocation":"3758:9:27","nodeType":"VariableDeclaration","scope":5164,"src":"3745:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5138,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:27"},"returnParameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5164,"src":"3792:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5141,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:27"},"scope":5408,"src":"3714:255:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5213,"nodeType":"Block","src":"4348:342:27","statements":[{"id":5212,"nodeType":"UncheckedBlock","src":"4358:326:27","statements":[{"assignments":[5182],"declarations":[{"constant":false,"id":5182,"mutability":"mutable","name":"s","nameLocation":"4390:1:27","nodeType":"VariableDeclaration","scope":5212,"src":"4382:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5189,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"4394:2:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:27","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:27","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:27"},{"assignments":[5191],"declarations":[{"constant":false,"id":5191,"mutability":"mutable","name":"v","nameLocation":"4591:1:27","nodeType":"VariableDeclaration","scope":5212,"src":"4585:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5190,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5204,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5196,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"4610:2:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:27","typeDescriptions":{}}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:27","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5192,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:27","typeDescriptions":{}}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:27"},{"expression":{"arguments":[{"id":5206,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"4659:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5207,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"4665:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5208,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"4668:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5209,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"4671:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5205,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5134,5214,5322],"referencedDeclaration":5322,"src":"4648:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5180,"id":5211,"nodeType":"Return","src":"4641:32:27"}]}]},"documentation":{"id":5165,"nodeType":"StructuredDocumentation","src":"3975:205:27","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":5214,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:27","nodeType":"FunctionDefinition","parameters":{"id":5172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"hash","nameLocation":"4222:4:27","nodeType":"VariableDeclaration","scope":5214,"src":"4214:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5169,"mutability":"mutable","name":"r","nameLocation":"4244:1:27","nodeType":"VariableDeclaration","scope":5214,"src":"4236:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5171,"mutability":"mutable","name":"vs","nameLocation":"4263:2:27","nodeType":"VariableDeclaration","scope":5214,"src":"4255:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:27"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:27","nodeType":"VariableDeclaration","scope":5214,"src":"4295:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5173,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5177,"mutability":"mutable","name":"err","nameLocation":"4327:3:27","nodeType":"VariableDeclaration","scope":5214,"src":"4314:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5176,"nodeType":"UserDefinedTypeName","pathNode":{"id":5175,"name":"RecoverError","nameLocations":["4314:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"4314:12:27"},"referencedDeclaration":5068,"src":"4314:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5179,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:27","nodeType":"VariableDeclaration","scope":5214,"src":"4332:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:27"},"scope":5408,"src":"4185:505:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5246,"nodeType":"Block","src":"4903:164:27","statements":[{"assignments":[5227,5230,5232],"declarations":[{"constant":false,"id":5227,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:27","nodeType":"VariableDeclaration","scope":5246,"src":"4914:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5226,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5230,"mutability":"mutable","name":"error","nameLocation":"4946:5:27","nodeType":"VariableDeclaration","scope":5246,"src":"4933:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5229,"nodeType":"UserDefinedTypeName","pathNode":{"id":5228,"name":"RecoverError","nameLocations":["4933:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"4933:12:27"},"referencedDeclaration":5068,"src":"4933:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5232,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:27","nodeType":"VariableDeclaration","scope":5246,"src":"4953:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5238,"initialValue":{"arguments":[{"id":5234,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"4984:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5235,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"4990:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5236,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"4993:2:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5233,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5134,5214,5322],"referencedDeclaration":5214,"src":"4973:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:27"},{"expression":{"arguments":[{"id":5240,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"5018:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},{"id":5241,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"5025:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5239,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"5006:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5068_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5243,"nodeType":"ExpressionStatement","src":"5006:28:27"},{"expression":{"id":5244,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"5051:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5225,"id":5245,"nodeType":"Return","src":"5044:16:27"}]},"documentation":{"id":5215,"nodeType":"StructuredDocumentation","src":"4696:116:27","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":5247,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:27","nodeType":"FunctionDefinition","parameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"hash","nameLocation":"4842:4:27","nodeType":"VariableDeclaration","scope":5247,"src":"4834:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5219,"mutability":"mutable","name":"r","nameLocation":"4856:1:27","nodeType":"VariableDeclaration","scope":5247,"src":"4848:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5221,"mutability":"mutable","name":"vs","nameLocation":"4867:2:27","nodeType":"VariableDeclaration","scope":5247,"src":"4859:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:27"},"returnParameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"4894:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5223,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:27"},"scope":5408,"src":"4817:250:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"5382:1372:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5268,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"6278:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:27","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:27","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5282,"nodeType":"IfStatement","src":"6266:164:27","trueBody":{"id":5281,"nodeType":"Block","src":"6351:79:27","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5272,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:27","typeDescriptions":{}}},"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5276,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"6385:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:27","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"6385:30:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},{"id":5278,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"6417:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5265,"id":5280,"nodeType":"Return","src":"6365:54:27"}]}},{"assignments":[5284],"declarations":[{"constant":false,"id":5284,"mutability":"mutable","name":"signer","nameLocation":"6532:6:27","nodeType":"VariableDeclaration","scope":5321,"src":"6524:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5283,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5291,"initialValue":{"arguments":[{"id":5286,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"6551:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5287,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"6557:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5288,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"6560:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5289,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"6563:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5285,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:27","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6579:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5293,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:27","typeDescriptions":{}}},"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5311,"nodeType":"IfStatement","src":"6575:113:27","trueBody":{"id":5310,"nodeType":"Block","src":"6601:87:27","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5298,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:27","typeDescriptions":{}}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5302,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"6635:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:27","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5065,"src":"6635:29:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":5306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:27","typeDescriptions":{}}},"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5265,"id":5309,"nodeType":"Return","src":"6615:62:27"}]}},{"expression":{"components":[{"id":5312,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6706:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5313,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"6714:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:27","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"6714:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:27","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5265,"id":5320,"nodeType":"Return","src":"6698:49:27"}]},"documentation":{"id":5248,"nodeType":"StructuredDocumentation","src":"5073:125:27","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:27","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"hash","nameLocation":"5240:4:27","nodeType":"VariableDeclaration","scope":5322,"src":"5232:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5252,"mutability":"mutable","name":"v","nameLocation":"5260:1:27","nodeType":"VariableDeclaration","scope":5322,"src":"5254:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5251,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5254,"mutability":"mutable","name":"r","nameLocation":"5279:1:27","nodeType":"VariableDeclaration","scope":5322,"src":"5271:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5256,"mutability":"mutable","name":"s","nameLocation":"5298:1:27","nodeType":"VariableDeclaration","scope":5322,"src":"5290:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:27"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:27","nodeType":"VariableDeclaration","scope":5322,"src":"5329:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5258,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"err","nameLocation":"5361:3:27","nodeType":"VariableDeclaration","scope":5322,"src":"5348:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5261,"nodeType":"UserDefinedTypeName","pathNode":{"id":5260,"name":"RecoverError","nameLocations":["5348:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"5348:12:27"},"referencedDeclaration":5068,"src":"5348:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5264,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:27","nodeType":"VariableDeclaration","scope":5322,"src":"5366:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:27"},"scope":5408,"src":"5203:1551:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"6981:166:27","statements":[{"assignments":[5337,5340,5342],"declarations":[{"constant":false,"id":5337,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:27","nodeType":"VariableDeclaration","scope":5357,"src":"6992:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5336,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5340,"mutability":"mutable","name":"error","nameLocation":"7024:5:27","nodeType":"VariableDeclaration","scope":5357,"src":"7011:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5339,"nodeType":"UserDefinedTypeName","pathNode":{"id":5338,"name":"RecoverError","nameLocations":["7011:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"7011:12:27"},"referencedDeclaration":5068,"src":"7011:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5342,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:27","nodeType":"VariableDeclaration","scope":5357,"src":"7031:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5349,"initialValue":{"arguments":[{"id":5344,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"7062:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5345,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"7068:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5346,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"7071:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5347,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"7074:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5343,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5134,5214,5322],"referencedDeclaration":5322,"src":"7051:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5068_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:27"},{"expression":{"arguments":[{"id":5351,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"7098:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},{"id":5352,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"7105:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5350,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"7086:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5068_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5354,"nodeType":"ExpressionStatement","src":"7086:28:27"},{"expression":{"id":5355,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"7131:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5335,"id":5356,"nodeType":"Return","src":"7124:16:27"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"6760:122:27","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:27","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"hash","nameLocation":"6912:4:27","nodeType":"VariableDeclaration","scope":5358,"src":"6904:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"v","nameLocation":"6924:1:27","nodeType":"VariableDeclaration","scope":5358,"src":"6918:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5326,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"r","nameLocation":"6935:1:27","nodeType":"VariableDeclaration","scope":5358,"src":"6927:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5331,"mutability":"mutable","name":"s","nameLocation":"6946:1:27","nodeType":"VariableDeclaration","scope":5358,"src":"6938:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:27"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5358,"src":"6972:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5333,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:27"},"scope":5408,"src":"6887:260:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5406,"nodeType":"Block","src":"7352:460:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"7366:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5368,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"7375:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:27","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"7375:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"7462:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5374,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"7471:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:27","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5065,"src":"7471:29:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"7567:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5382,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"7576:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:27","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5066,"src":"7576:35:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"7701:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5394,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"7710:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5068_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:27","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"7710:30:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5402,"nodeType":"IfStatement","src":"7697:109:27","trueBody":{"id":5401,"nodeType":"Block","src":"7742:64:27","statements":[{"errorCall":{"arguments":[{"id":5398,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"7786:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5397,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"7763:22:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5400,"nodeType":"RevertStatement","src":"7756:39:27"}]}},"id":5403,"nodeType":"IfStatement","src":"7563:243:27","trueBody":{"id":5392,"nodeType":"Block","src":"7613:78:27","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":5388,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"7670:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:27","typeDescriptions":{}}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5385,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"7634:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5391,"nodeType":"RevertStatement","src":"7627:53:27"}]}},"id":5404,"nodeType":"IfStatement","src":"7458:348:27","trueBody":{"id":5380,"nodeType":"Block","src":"7502:55:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5377,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"7523:21:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5379,"nodeType":"RevertStatement","src":"7516:30:27"}]}},"id":5405,"nodeType":"IfStatement","src":"7362:444:27","trueBody":{"id":5372,"nodeType":"Block","src":"7397:55:27","statements":[{"functionReturnParameters":5366,"id":5371,"nodeType":"Return","src":"7411:7:27"}]}}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"7153:122:27","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":5407,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:27","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"error","nameLocation":"7314:5:27","nodeType":"VariableDeclaration","scope":5407,"src":"7301:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5361,"nodeType":"UserDefinedTypeName","pathNode":{"id":5360,"name":"RecoverError","nameLocations":["7301:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"7301:12:27"},"referencedDeclaration":5068,"src":"7301:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5068","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5364,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:27","nodeType":"VariableDeclaration","scope":5407,"src":"7321:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:27"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[],"src":"7352:0:27"},"scope":5408,"src":"7280:532:27","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5409,"src":"344:7470:27","usedErrors":[5071,5076,5081],"usedEvents":[]}],"src":"112:7703:27"},"id":27},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[5494],"Strings":[5060]},"id":5495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":5412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5495,"sourceUnit":5061,"src":"149:39:28","symbolAliases":[{"foreign":{"id":5411,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"157:7:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":5413,"nodeType":"StructuredDocumentation","src":"190:330:28","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":5494,"linearizedBaseContracts":[5494],"name":"MessageHashUtils","nameLocation":"529:16:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":5422,"nodeType":"Block","src":"1339:341:28","statements":[{"AST":{"nativeSrc":"1374:300:28","nodeType":"YulBlock","src":"1374:300:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:28","nodeType":"YulLiteral","src":"1395:4:28","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:28","nodeType":"YulLiteral","src":"1401:34:28","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:28","nodeType":"YulIdentifier","src":"1388:6:28"},"nativeSrc":"1388:48:28","nodeType":"YulFunctionCall","src":"1388:48:28"},"nativeSrc":"1388:48:28","nodeType":"YulExpressionStatement","src":"1388:48:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:28","nodeType":"YulLiteral","src":"1497:4:28","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:28","nodeType":"YulIdentifier","src":"1503:11:28"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:28","nodeType":"YulIdentifier","src":"1490:6:28"},"nativeSrc":"1490:25:28","nodeType":"YulFunctionCall","src":"1490:25:28"},"nativeSrc":"1490:25:28","nodeType":"YulExpressionStatement","src":"1490:25:28"},{"nativeSrc":"1569:31:28","nodeType":"YulAssignment","src":"1569:31:28","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:28","nodeType":"YulLiteral","src":"1589:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:28","nodeType":"YulLiteral","src":"1595:4:28","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:28","nodeType":"YulIdentifier","src":"1579:9:28"},"nativeSrc":"1579:21:28","nodeType":"YulFunctionCall","src":"1579:21:28"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:28","nodeType":"YulIdentifier","src":"1569:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5419,"isOffset":false,"isSlot":false,"src":"1569:6:28","valueSize":1},{"declaration":5416,"isOffset":false,"isSlot":false,"src":"1503:11:28","valueSize":1}],"flags":["memory-safe"],"id":5421,"nodeType":"InlineAssembly","src":"1349:325:28"}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"552:690:28","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":5423,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:28","nodeType":"FunctionDefinition","parameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:28","nodeType":"VariableDeclaration","scope":5423,"src":"1279:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:28"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"digest","nameLocation":"1331:6:28","nodeType":"VariableDeclaration","scope":5423,"src":"1323:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:28"},"scope":5494,"src":"1247:433:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5448,"nodeType":"Block","src":"2257:143:28","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":5440,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"2366:7:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:28","memberName":"length","nodeType":"MemberAccess","src":"2366:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5438,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2349:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5060_$","typeString":"type(library Strings)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:28","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3772,"src":"2349:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5436,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:28","typeDescriptions":{}}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5444,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"2384:7:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5432,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:28","typeDescriptions":{}}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:28","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:28","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5431,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5430,"id":5447,"nodeType":"Return","src":"2267:126:28"}]},"documentation":{"id":5424,"nodeType":"StructuredDocumentation","src":"1686:480:28","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":5449,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:28","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5426,"mutability":"mutable","name":"message","nameLocation":"2216:7:28","nodeType":"VariableDeclaration","scope":5449,"src":"2203:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5425,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:28"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5449,"src":"2248:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:28"},"scope":5494,"src":"2171:229:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5468,"nodeType":"Block","src":"2854:80:28","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":5463,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"2910:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5464,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"2921:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5460,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5459,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5458,"id":5467,"nodeType":"Return","src":"2864:63:28"}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"2406:332:28","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":5469,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:28","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"validator","nameLocation":"2792:9:28","nodeType":"VariableDeclaration","scope":5469,"src":"2784:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5451,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"data","nameLocation":"2816:4:28","nodeType":"VariableDeclaration","scope":5469,"src":"2803:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5453,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:28"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5469,"src":"2845:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:28"},"scope":5494,"src":"2743:191:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5480,"nodeType":"Block","src":"3216:216:28","statements":[{"AST":{"nativeSrc":"3251:175:28","nodeType":"YulBlock","src":"3251:175:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:28","nodeType":"YulLiteral","src":"3272:4:28","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:28","nodeType":"YulLiteral","src":"3278:10:28","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:28","nodeType":"YulIdentifier","src":"3265:6:28"},"nativeSrc":"3265:24:28","nodeType":"YulFunctionCall","src":"3265:24:28"},"nativeSrc":"3265:24:28","nodeType":"YulExpressionStatement","src":"3265:24:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:28","nodeType":"YulLiteral","src":"3309:4:28","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:28","nodeType":"YulLiteral","src":"3319:2:28","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:28","nodeType":"YulIdentifier","src":"3323:9:28"}],"functionName":{"name":"shl","nativeSrc":"3315:3:28","nodeType":"YulIdentifier","src":"3315:3:28"},"nativeSrc":"3315:18:28","nodeType":"YulFunctionCall","src":"3315:18:28"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:28","nodeType":"YulIdentifier","src":"3302:6:28"},"nativeSrc":"3302:32:28","nodeType":"YulFunctionCall","src":"3302:32:28"},"nativeSrc":"3302:32:28","nodeType":"YulExpressionStatement","src":"3302:32:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:28","nodeType":"YulLiteral","src":"3354:4:28","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:28","nodeType":"YulIdentifier","src":"3360:11:28"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:28","nodeType":"YulIdentifier","src":"3347:6:28"},"nativeSrc":"3347:25:28","nodeType":"YulFunctionCall","src":"3347:25:28"},"nativeSrc":"3347:25:28","nodeType":"YulExpressionStatement","src":"3347:25:28"},{"nativeSrc":"3385:31:28","nodeType":"YulAssignment","src":"3385:31:28","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:28","nodeType":"YulLiteral","src":"3405:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:28","nodeType":"YulLiteral","src":"3411:4:28","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:28","nodeType":"YulIdentifier","src":"3395:9:28"},"nativeSrc":"3395:21:28","nodeType":"YulFunctionCall","src":"3395:21:28"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:28","nodeType":"YulIdentifier","src":"3385:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5477,"isOffset":false,"isSlot":false,"src":"3385:6:28","valueSize":1},{"declaration":5474,"isOffset":false,"isSlot":false,"src":"3360:11:28","valueSize":1},{"declaration":5472,"isOffset":false,"isSlot":false,"src":"3323:9:28","valueSize":1}],"flags":["memory-safe"],"id":5479,"nodeType":"InlineAssembly","src":"3226:200:28"}]},"documentation":{"id":5470,"nodeType":"StructuredDocumentation","src":"2940:129:28","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":5481,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:28","nodeType":"FunctionDefinition","parameters":{"id":5475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"validator","nameLocation":"3132:9:28","nodeType":"VariableDeclaration","scope":5481,"src":"3124:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5471,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5474,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:28","nodeType":"VariableDeclaration","scope":5481,"src":"3151:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:28"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"digest","nameLocation":"3208:6:28","nodeType":"VariableDeclaration","scope":5481,"src":"3200:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:28"},"scope":5494,"src":"3074:358:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5492,"nodeType":"Block","src":"3983:265:28","statements":[{"AST":{"nativeSrc":"4018:224:28","nodeType":"YulBlock","src":"4018:224:28","statements":[{"nativeSrc":"4032:22:28","nodeType":"YulVariableDeclaration","src":"4032:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:28","nodeType":"YulLiteral","src":"4049:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:28","nodeType":"YulIdentifier","src":"4043:5:28"},"nativeSrc":"4043:11:28","nodeType":"YulFunctionCall","src":"4043:11:28"},"variables":[{"name":"ptr","nativeSrc":"4036:3:28","nodeType":"YulTypedName","src":"4036:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:28","nodeType":"YulIdentifier","src":"4074:3:28"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:28","nodeType":"YulLiteral","src":"4079:10:28","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:28","nodeType":"YulIdentifier","src":"4067:6:28"},"nativeSrc":"4067:23:28","nodeType":"YulFunctionCall","src":"4067:23:28"},"nativeSrc":"4067:23:28","nodeType":"YulExpressionStatement","src":"4067:23:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:28","nodeType":"YulIdentifier","src":"4114:3:28"},{"kind":"number","nativeSrc":"4119:4:28","nodeType":"YulLiteral","src":"4119:4:28","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:28","nodeType":"YulIdentifier","src":"4110:3:28"},"nativeSrc":"4110:14:28","nodeType":"YulFunctionCall","src":"4110:14:28"},{"name":"domainSeparator","nativeSrc":"4126:15:28","nodeType":"YulIdentifier","src":"4126:15:28"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:28","nodeType":"YulIdentifier","src":"4103:6:28"},"nativeSrc":"4103:39:28","nodeType":"YulFunctionCall","src":"4103:39:28"},"nativeSrc":"4103:39:28","nodeType":"YulExpressionStatement","src":"4103:39:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:28","nodeType":"YulIdentifier","src":"4166:3:28"},{"kind":"number","nativeSrc":"4171:4:28","nodeType":"YulLiteral","src":"4171:4:28","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:28","nodeType":"YulIdentifier","src":"4162:3:28"},"nativeSrc":"4162:14:28","nodeType":"YulFunctionCall","src":"4162:14:28"},{"name":"structHash","nativeSrc":"4178:10:28","nodeType":"YulIdentifier","src":"4178:10:28"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:28","nodeType":"YulIdentifier","src":"4155:6:28"},"nativeSrc":"4155:34:28","nodeType":"YulFunctionCall","src":"4155:34:28"},"nativeSrc":"4155:34:28","nodeType":"YulExpressionStatement","src":"4155:34:28"},{"nativeSrc":"4202:30:28","nodeType":"YulAssignment","src":"4202:30:28","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:28","nodeType":"YulIdentifier","src":"4222:3:28"},{"kind":"number","nativeSrc":"4227:4:28","nodeType":"YulLiteral","src":"4227:4:28","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:28","nodeType":"YulIdentifier","src":"4212:9:28"},"nativeSrc":"4212:20:28","nodeType":"YulFunctionCall","src":"4212:20:28"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:28","nodeType":"YulIdentifier","src":"4202:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5489,"isOffset":false,"isSlot":false,"src":"4202:6:28","valueSize":1},{"declaration":5484,"isOffset":false,"isSlot":false,"src":"4126:15:28","valueSize":1},{"declaration":5486,"isOffset":false,"isSlot":false,"src":"4178:10:28","valueSize":1}],"flags":["memory-safe"],"id":5491,"nodeType":"InlineAssembly","src":"3993:249:28"}]},"documentation":{"id":5482,"nodeType":"StructuredDocumentation","src":"3438:431:28","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":5493,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:28","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:28","nodeType":"VariableDeclaration","scope":5493,"src":"3899:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5486,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:28","nodeType":"VariableDeclaration","scope":5493,"src":"3924:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:28"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"digest","nameLocation":"3975:6:28","nodeType":"VariableDeclaration","scope":5493,"src":"3967:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:28"},"scope":5494,"src":"3874:374:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5495,"src":"521:3729:28","usedErrors":[],"usedEvents":[]}],"src":"123:4128:28"},"id":28},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5506]},"id":5507,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5496,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:29"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"142:280:29","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5506,"linearizedBaseContracts":[5506],"name":"IERC165","nameLocation":"433:7:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5498,"nodeType":"StructuredDocumentation","src":"447:340:29","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5505,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:29","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:29","nodeType":"VariableDeclaration","scope":5505,"src":"819:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5499,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:29"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5505,"src":"862:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5502,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:29"},"scope":5506,"src":"792:76:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5507,"src":"423:447:29","usedErrors":[],"usedEvents":[]}],"src":"115:756:29"},"id":29},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7127],"Panic":[3534],"SafeCast":[8892]},"id":7128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5508,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7128,"sourceUnit":3535,"src":"129:35:30","symbolAliases":[{"foreign":{"id":5509,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"137:5:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7128,"sourceUnit":8893,"src":"165:40:30","symbolAliases":[{"foreign":{"id":5511,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"173:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5513,"nodeType":"StructuredDocumentation","src":"207:73:30","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7127,"linearizedBaseContracts":[7127],"name":"Math","nameLocation":"289:4:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5518,"members":[{"id":5514,"name":"Floor","nameLocation":"324:5:30","nodeType":"EnumValue","src":"324:5:30"},{"id":5515,"name":"Ceil","nameLocation":"367:4:30","nodeType":"EnumValue","src":"367:4:30"},{"id":5516,"name":"Trunc","nameLocation":"409:5:30","nodeType":"EnumValue","src":"409:5:30"},{"id":5517,"name":"Expand","nameLocation":"439:6:30","nodeType":"EnumValue","src":"439:6:30"}],"name":"Rounding","nameLocation":"305:8:30","nodeType":"EnumDefinition","src":"300:169:30"},{"body":{"id":5531,"nodeType":"Block","src":"731:112:30","statements":[{"AST":{"nativeSrc":"766:71:30","nodeType":"YulBlock","src":"766:71:30","statements":[{"nativeSrc":"780:16:30","nodeType":"YulAssignment","src":"780:16:30","value":{"arguments":[{"name":"a","nativeSrc":"791:1:30","nodeType":"YulIdentifier","src":"791:1:30"},{"name":"b","nativeSrc":"794:1:30","nodeType":"YulIdentifier","src":"794:1:30"}],"functionName":{"name":"add","nativeSrc":"787:3:30","nodeType":"YulIdentifier","src":"787:3:30"},"nativeSrc":"787:9:30","nodeType":"YulFunctionCall","src":"787:9:30"},"variableNames":[{"name":"low","nativeSrc":"780:3:30","nodeType":"YulIdentifier","src":"780:3:30"}]},{"nativeSrc":"809:18:30","nodeType":"YulAssignment","src":"809:18:30","value":{"arguments":[{"name":"low","nativeSrc":"820:3:30","nodeType":"YulIdentifier","src":"820:3:30"},{"name":"a","nativeSrc":"825:1:30","nodeType":"YulIdentifier","src":"825:1:30"}],"functionName":{"name":"lt","nativeSrc":"817:2:30","nodeType":"YulIdentifier","src":"817:2:30"},"nativeSrc":"817:10:30","nodeType":"YulFunctionCall","src":"817:10:30"},"variableNames":[{"name":"high","nativeSrc":"809:4:30","nodeType":"YulIdentifier","src":"809:4:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5521,"isOffset":false,"isSlot":false,"src":"791:1:30","valueSize":1},{"declaration":5521,"isOffset":false,"isSlot":false,"src":"825:1:30","valueSize":1},{"declaration":5523,"isOffset":false,"isSlot":false,"src":"794:1:30","valueSize":1},{"declaration":5526,"isOffset":false,"isSlot":false,"src":"809:4:30","valueSize":1},{"declaration":5528,"isOffset":false,"isSlot":false,"src":"780:3:30","valueSize":1},{"declaration":5528,"isOffset":false,"isSlot":false,"src":"820:3:30","valueSize":1}],"flags":["memory-safe"],"id":5530,"nodeType":"InlineAssembly","src":"741:96:30"}]},"documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"475:163:30","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5532,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:30","nodeType":"FunctionDefinition","parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"a","nameLocation":"667:1:30","nodeType":"VariableDeclaration","scope":5532,"src":"659:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5523,"mutability":"mutable","name":"b","nameLocation":"678:1:30","nodeType":"VariableDeclaration","scope":5532,"src":"670:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:30"},"returnParameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"high","nameLocation":"712:4:30","nodeType":"VariableDeclaration","scope":5532,"src":"704:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5525,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5528,"mutability":"mutable","name":"low","nameLocation":"726:3:30","nodeType":"VariableDeclaration","scope":5532,"src":"718:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:30"},"scope":7127,"src":"643:200:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5545,"nodeType":"Block","src":"1115:462:30","statements":[{"AST":{"nativeSrc":"1437:134:30","nodeType":"YulBlock","src":"1437:134:30","statements":[{"nativeSrc":"1451:30:30","nodeType":"YulVariableDeclaration","src":"1451:30:30","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:30","nodeType":"YulIdentifier","src":"1468:1:30"},{"name":"b","nativeSrc":"1471:1:30","nodeType":"YulIdentifier","src":"1471:1:30"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:30","nodeType":"YulLiteral","src":"1478:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:30","nodeType":"YulIdentifier","src":"1474:3:30"},"nativeSrc":"1474:6:30","nodeType":"YulFunctionCall","src":"1474:6:30"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:30","nodeType":"YulIdentifier","src":"1461:6:30"},"nativeSrc":"1461:20:30","nodeType":"YulFunctionCall","src":"1461:20:30"},"variables":[{"name":"mm","nativeSrc":"1455:2:30","nodeType":"YulTypedName","src":"1455:2:30","type":""}]},{"nativeSrc":"1494:16:30","nodeType":"YulAssignment","src":"1494:16:30","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:30","nodeType":"YulIdentifier","src":"1505:1:30"},{"name":"b","nativeSrc":"1508:1:30","nodeType":"YulIdentifier","src":"1508:1:30"}],"functionName":{"name":"mul","nativeSrc":"1501:3:30","nodeType":"YulIdentifier","src":"1501:3:30"},"nativeSrc":"1501:9:30","nodeType":"YulFunctionCall","src":"1501:9:30"},"variableNames":[{"name":"low","nativeSrc":"1494:3:30","nodeType":"YulIdentifier","src":"1494:3:30"}]},{"nativeSrc":"1523:38:30","nodeType":"YulAssignment","src":"1523:38:30","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:30","nodeType":"YulIdentifier","src":"1539:2:30"},{"name":"low","nativeSrc":"1543:3:30","nodeType":"YulIdentifier","src":"1543:3:30"}],"functionName":{"name":"sub","nativeSrc":"1535:3:30","nodeType":"YulIdentifier","src":"1535:3:30"},"nativeSrc":"1535:12:30","nodeType":"YulFunctionCall","src":"1535:12:30"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:30","nodeType":"YulIdentifier","src":"1552:2:30"},{"name":"low","nativeSrc":"1556:3:30","nodeType":"YulIdentifier","src":"1556:3:30"}],"functionName":{"name":"lt","nativeSrc":"1549:2:30","nodeType":"YulIdentifier","src":"1549:2:30"},"nativeSrc":"1549:11:30","nodeType":"YulFunctionCall","src":"1549:11:30"}],"functionName":{"name":"sub","nativeSrc":"1531:3:30","nodeType":"YulIdentifier","src":"1531:3:30"},"nativeSrc":"1531:30:30","nodeType":"YulFunctionCall","src":"1531:30:30"},"variableNames":[{"name":"high","nativeSrc":"1523:4:30","nodeType":"YulIdentifier","src":"1523:4:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5535,"isOffset":false,"isSlot":false,"src":"1468:1:30","valueSize":1},{"declaration":5535,"isOffset":false,"isSlot":false,"src":"1505:1:30","valueSize":1},{"declaration":5537,"isOffset":false,"isSlot":false,"src":"1471:1:30","valueSize":1},{"declaration":5537,"isOffset":false,"isSlot":false,"src":"1508:1:30","valueSize":1},{"declaration":5540,"isOffset":false,"isSlot":false,"src":"1523:4:30","valueSize":1},{"declaration":5542,"isOffset":false,"isSlot":false,"src":"1494:3:30","valueSize":1},{"declaration":5542,"isOffset":false,"isSlot":false,"src":"1543:3:30","valueSize":1},{"declaration":5542,"isOffset":false,"isSlot":false,"src":"1556:3:30","valueSize":1}],"flags":["memory-safe"],"id":5544,"nodeType":"InlineAssembly","src":"1412:159:30"}]},"documentation":{"id":5533,"nodeType":"StructuredDocumentation","src":"849:173:30","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5546,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:30","nodeType":"FunctionDefinition","parameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"a","nameLocation":"1051:1:30","nodeType":"VariableDeclaration","scope":5546,"src":"1043:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5537,"mutability":"mutable","name":"b","nameLocation":"1062:1:30","nodeType":"VariableDeclaration","scope":5546,"src":"1054:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:30"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"high","nameLocation":"1096:4:30","nodeType":"VariableDeclaration","scope":5546,"src":"1088:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5542,"mutability":"mutable","name":"low","nameLocation":"1110:3:30","nodeType":"VariableDeclaration","scope":5546,"src":"1102:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:30"},"scope":7127,"src":"1027:550:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5580,"nodeType":"Block","src":"1784:149:30","statements":[{"id":5579,"nodeType":"UncheckedBlock","src":"1794:133:30","statements":[{"assignments":[5559],"declarations":[{"constant":false,"id":5559,"mutability":"mutable","name":"c","nameLocation":"1826:1:30","nodeType":"VariableDeclaration","scope":5579,"src":"1818:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5563,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"1830:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"1834:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:30"},{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5564,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"1849:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5565,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"1859:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"1864:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5569,"nodeType":"ExpressionStatement","src":"1849:16:30"},{"expression":{"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"1879:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"1888:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5574,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"1908:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5572,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"1892:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"1892:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5578,"nodeType":"ExpressionStatement","src":"1879:37:30"}]}]},"documentation":{"id":5547,"nodeType":"StructuredDocumentation","src":"1583:105:30","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5581,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:30","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"a","nameLocation":"1717:1:30","nodeType":"VariableDeclaration","scope":5581,"src":"1709:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"b","nameLocation":"1728:1:30","nodeType":"VariableDeclaration","scope":5581,"src":"1720:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:30"},"returnParameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"success","nameLocation":"1759:7:30","nodeType":"VariableDeclaration","scope":5581,"src":"1754:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5553,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5556,"mutability":"mutable","name":"result","nameLocation":"1776:6:30","nodeType":"VariableDeclaration","scope":5581,"src":"1768:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:30"},"scope":7127,"src":"1693:240:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5615,"nodeType":"Block","src":"2143:149:30","statements":[{"id":5614,"nodeType":"UncheckedBlock","src":"2153:133:30","statements":[{"assignments":[5594],"declarations":[{"constant":false,"id":5594,"mutability":"mutable","name":"c","nameLocation":"2185:1:30","nodeType":"VariableDeclaration","scope":5614,"src":"2177:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5598,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"2189:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"2193:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:30"},{"expression":{"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5599,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"2208:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5600,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"2218:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"2223:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5604,"nodeType":"ExpressionStatement","src":"2208:16:30"},{"expression":{"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"2238:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"2247:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5609,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"2267:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5607,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"2251:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"2251:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5613,"nodeType":"ExpressionStatement","src":"2238:37:30"}]}]},"documentation":{"id":5582,"nodeType":"StructuredDocumentation","src":"1939:108:30","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5616,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:30","nodeType":"FunctionDefinition","parameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"a","nameLocation":"2076:1:30","nodeType":"VariableDeclaration","scope":5616,"src":"2068:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5586,"mutability":"mutable","name":"b","nameLocation":"2087:1:30","nodeType":"VariableDeclaration","scope":5616,"src":"2079:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:30"},"returnParameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"success","nameLocation":"2118:7:30","nodeType":"VariableDeclaration","scope":5616,"src":"2113:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5588,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5591,"mutability":"mutable","name":"result","nameLocation":"2135:6:30","nodeType":"VariableDeclaration","scope":5616,"src":"2127:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:30"},"scope":7127,"src":"2052:240:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5645,"nodeType":"Block","src":"2505:391:30","statements":[{"id":5644,"nodeType":"UncheckedBlock","src":"2515:375:30","statements":[{"assignments":[5629],"declarations":[{"constant":false,"id":5629,"mutability":"mutable","name":"c","nameLocation":"2547:1:30","nodeType":"VariableDeclaration","scope":5644,"src":"2539:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5633,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"2551:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"2555:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:30"},{"AST":{"nativeSrc":"2595:188:30","nodeType":"YulBlock","src":"2595:188:30","statements":[{"nativeSrc":"2727:42:30","nodeType":"YulAssignment","src":"2727:42:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:30","nodeType":"YulIdentifier","src":"2748:1:30"},{"name":"a","nativeSrc":"2751:1:30","nodeType":"YulIdentifier","src":"2751:1:30"}],"functionName":{"name":"div","nativeSrc":"2744:3:30","nodeType":"YulIdentifier","src":"2744:3:30"},"nativeSrc":"2744:9:30","nodeType":"YulFunctionCall","src":"2744:9:30"},{"name":"b","nativeSrc":"2755:1:30","nodeType":"YulIdentifier","src":"2755:1:30"}],"functionName":{"name":"eq","nativeSrc":"2741:2:30","nodeType":"YulIdentifier","src":"2741:2:30"},"nativeSrc":"2741:16:30","nodeType":"YulFunctionCall","src":"2741:16:30"},{"arguments":[{"name":"a","nativeSrc":"2766:1:30","nodeType":"YulIdentifier","src":"2766:1:30"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:30","nodeType":"YulIdentifier","src":"2759:6:30"},"nativeSrc":"2759:9:30","nodeType":"YulFunctionCall","src":"2759:9:30"}],"functionName":{"name":"or","nativeSrc":"2738:2:30","nodeType":"YulIdentifier","src":"2738:2:30"},"nativeSrc":"2738:31:30","nodeType":"YulFunctionCall","src":"2738:31:30"},"variableNames":[{"name":"success","nativeSrc":"2727:7:30","nodeType":"YulIdentifier","src":"2727:7:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5619,"isOffset":false,"isSlot":false,"src":"2751:1:30","valueSize":1},{"declaration":5619,"isOffset":false,"isSlot":false,"src":"2766:1:30","valueSize":1},{"declaration":5621,"isOffset":false,"isSlot":false,"src":"2755:1:30","valueSize":1},{"declaration":5629,"isOffset":false,"isSlot":false,"src":"2748:1:30","valueSize":1},{"declaration":5624,"isOffset":false,"isSlot":false,"src":"2727:7:30","valueSize":1}],"flags":["memory-safe"],"id":5634,"nodeType":"InlineAssembly","src":"2570:213:30"},{"expression":{"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"2842:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"2851:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5639,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"2871:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5637,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"2855:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"2855:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5643,"nodeType":"ExpressionStatement","src":"2842:37:30"}]}]},"documentation":{"id":5617,"nodeType":"StructuredDocumentation","src":"2298:111:30","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5646,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:30","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"a","nameLocation":"2438:1:30","nodeType":"VariableDeclaration","scope":5646,"src":"2430:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5621,"mutability":"mutable","name":"b","nameLocation":"2449:1:30","nodeType":"VariableDeclaration","scope":5646,"src":"2441:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:30"},"returnParameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"success","nameLocation":"2480:7:30","nodeType":"VariableDeclaration","scope":5646,"src":"2475:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5623,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5626,"mutability":"mutable","name":"result","nameLocation":"2497:6:30","nodeType":"VariableDeclaration","scope":5646,"src":"2489:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:30"},"scope":7127,"src":"2414:482:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"3111:231:30","statements":[{"id":5665,"nodeType":"UncheckedBlock","src":"3121:215:30","statements":[{"expression":{"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5658,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"3145:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"3155:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5663,"nodeType":"ExpressionStatement","src":"3145:15:30"},{"AST":{"nativeSrc":"3199:127:30","nodeType":"YulBlock","src":"3199:127:30","statements":[{"nativeSrc":"3293:19:30","nodeType":"YulAssignment","src":"3293:19:30","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:30","nodeType":"YulIdentifier","src":"3307:1:30"},{"name":"b","nativeSrc":"3310:1:30","nodeType":"YulIdentifier","src":"3310:1:30"}],"functionName":{"name":"div","nativeSrc":"3303:3:30","nodeType":"YulIdentifier","src":"3303:3:30"},"nativeSrc":"3303:9:30","nodeType":"YulFunctionCall","src":"3303:9:30"},"variableNames":[{"name":"result","nativeSrc":"3293:6:30","nodeType":"YulIdentifier","src":"3293:6:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5649,"isOffset":false,"isSlot":false,"src":"3307:1:30","valueSize":1},{"declaration":5651,"isOffset":false,"isSlot":false,"src":"3310:1:30","valueSize":1},{"declaration":5656,"isOffset":false,"isSlot":false,"src":"3293:6:30","valueSize":1}],"flags":["memory-safe"],"id":5664,"nodeType":"InlineAssembly","src":"3174:152:30"}]}]},"documentation":{"id":5647,"nodeType":"StructuredDocumentation","src":"2902:113:30","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:30","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"a","nameLocation":"3044:1:30","nodeType":"VariableDeclaration","scope":5667,"src":"3036:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5648,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5651,"mutability":"mutable","name":"b","nameLocation":"3055:1:30","nodeType":"VariableDeclaration","scope":5667,"src":"3047:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:30"},"returnParameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"success","nameLocation":"3086:7:30","nodeType":"VariableDeclaration","scope":5667,"src":"3081:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5653,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5656,"mutability":"mutable","name":"result","nameLocation":"3103:6:30","nodeType":"VariableDeclaration","scope":5667,"src":"3095:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:30"},"scope":7127,"src":"3020:322:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5687,"nodeType":"Block","src":"3567:231:30","statements":[{"id":5686,"nodeType":"UncheckedBlock","src":"3577:215:30","statements":[{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5679,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"3601:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"3611:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5684,"nodeType":"ExpressionStatement","src":"3601:15:30"},{"AST":{"nativeSrc":"3655:127:30","nodeType":"YulBlock","src":"3655:127:30","statements":[{"nativeSrc":"3749:19:30","nodeType":"YulAssignment","src":"3749:19:30","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:30","nodeType":"YulIdentifier","src":"3763:1:30"},{"name":"b","nativeSrc":"3766:1:30","nodeType":"YulIdentifier","src":"3766:1:30"}],"functionName":{"name":"mod","nativeSrc":"3759:3:30","nodeType":"YulIdentifier","src":"3759:3:30"},"nativeSrc":"3759:9:30","nodeType":"YulFunctionCall","src":"3759:9:30"},"variableNames":[{"name":"result","nativeSrc":"3749:6:30","nodeType":"YulIdentifier","src":"3749:6:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5670,"isOffset":false,"isSlot":false,"src":"3763:1:30","valueSize":1},{"declaration":5672,"isOffset":false,"isSlot":false,"src":"3766:1:30","valueSize":1},{"declaration":5677,"isOffset":false,"isSlot":false,"src":"3749:6:30","valueSize":1}],"flags":["memory-safe"],"id":5685,"nodeType":"InlineAssembly","src":"3630:152:30"}]}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"3348:123:30","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5688,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:30","nodeType":"FunctionDefinition","parameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"a","nameLocation":"3500:1:30","nodeType":"VariableDeclaration","scope":5688,"src":"3492:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5672,"mutability":"mutable","name":"b","nameLocation":"3511:1:30","nodeType":"VariableDeclaration","scope":5688,"src":"3503:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:30"},"returnParameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"mutability":"mutable","name":"success","nameLocation":"3542:7:30","nodeType":"VariableDeclaration","scope":5688,"src":"3537:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5674,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5677,"mutability":"mutable","name":"result","nameLocation":"3559:6:30","nodeType":"VariableDeclaration","scope":5688,"src":"3551:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:30"},"scope":7127,"src":"3476:322:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5717,"nodeType":"Block","src":"3989:122:30","statements":[{"assignments":[5699,5701],"declarations":[{"constant":false,"id":5699,"mutability":"mutable","name":"success","nameLocation":"4005:7:30","nodeType":"VariableDeclaration","scope":5717,"src":"4000:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5698,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5701,"mutability":"mutable","name":"result","nameLocation":"4022:6:30","nodeType":"VariableDeclaration","scope":5717,"src":"4014:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5706,"initialValue":{"arguments":[{"id":5703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"4039:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"4042:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5702,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"4032:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:30"},{"expression":{"arguments":[{"id":5708,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"4069:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"4078:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:30","memberName":"max","nodeType":"MemberAccess","src":"4086:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5707,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"4061:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5697,"id":5716,"nodeType":"Return","src":"4054:50:30"}]},"documentation":{"id":5689,"nodeType":"StructuredDocumentation","src":"3804:103:30","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5718,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:30","nodeType":"FunctionDefinition","parameters":{"id":5694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"a","nameLocation":"3943:1:30","nodeType":"VariableDeclaration","scope":5718,"src":"3935:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5693,"mutability":"mutable","name":"b","nameLocation":"3954:1:30","nodeType":"VariableDeclaration","scope":5718,"src":"3946:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:30"},"returnParameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5718,"src":"3980:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:30"},"scope":7127,"src":"3912:199:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5737,"nodeType":"Block","src":"4294:73:30","statements":[{"assignments":[null,5729],"declarations":[null,{"constant":false,"id":5729,"mutability":"mutable","name":"result","nameLocation":"4315:6:30","nodeType":"VariableDeclaration","scope":5737,"src":"4307:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5734,"initialValue":{"arguments":[{"id":5731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"4332:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"4335:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"4325:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:30"},{"expression":{"id":5735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"4354:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5727,"id":5736,"nodeType":"Return","src":"4347:13:30"}]},"documentation":{"id":5719,"nodeType":"StructuredDocumentation","src":"4117:95:30","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5738,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:30","nodeType":"FunctionDefinition","parameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"a","nameLocation":"4248:1:30","nodeType":"VariableDeclaration","scope":5738,"src":"4240:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5723,"mutability":"mutable","name":"b","nameLocation":"4259:1:30","nodeType":"VariableDeclaration","scope":5738,"src":"4251:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5722,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:30"},"returnParameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5738,"src":"4285:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:30"},"scope":7127,"src":"4217:150:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5767,"nodeType":"Block","src":"4564:122:30","statements":[{"assignments":[5749,5751],"declarations":[{"constant":false,"id":5749,"mutability":"mutable","name":"success","nameLocation":"4580:7:30","nodeType":"VariableDeclaration","scope":5767,"src":"4575:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5748,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"result","nameLocation":"4597:6:30","nodeType":"VariableDeclaration","scope":5767,"src":"4589:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5756,"initialValue":{"arguments":[{"id":5753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"4614:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"4617:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5752,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"4607:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:30"},{"expression":{"arguments":[{"id":5758,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"4644:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"4653:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:30","memberName":"max","nodeType":"MemberAccess","src":"4661:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"4636:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5747,"id":5766,"nodeType":"Return","src":"4629:50:30"}]},"documentation":{"id":5739,"nodeType":"StructuredDocumentation","src":"4373:109:30","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5768,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:30","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"a","nameLocation":"4518:1:30","nodeType":"VariableDeclaration","scope":5768,"src":"4510:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5743,"mutability":"mutable","name":"b","nameLocation":"4529:1:30","nodeType":"VariableDeclaration","scope":5768,"src":"4521:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:30"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5768,"src":"4555:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:30"},"scope":7127,"src":"4487:199:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5794,"nodeType":"Block","src":"5158:207:30","statements":[{"id":5793,"nodeType":"UncheckedBlock","src":"5168:191:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5780,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"5306:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"5312:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5782,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"5316:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5787,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"5337:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"5321:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"5321:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5779,"id":5792,"nodeType":"Return","src":"5299:49:30"}]}]},"documentation":{"id":5769,"nodeType":"StructuredDocumentation","src":"4692:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5795,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:30","nodeType":"FunctionDefinition","parameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"condition","nameLocation":"5093:9:30","nodeType":"VariableDeclaration","scope":5795,"src":"5088:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5770,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5773,"mutability":"mutable","name":"a","nameLocation":"5112:1:30","nodeType":"VariableDeclaration","scope":5795,"src":"5104:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5775,"mutability":"mutable","name":"b","nameLocation":"5123:1:30","nodeType":"VariableDeclaration","scope":5795,"src":"5115:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5774,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:30"},"returnParameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5795,"src":"5149:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:30"},"scope":7127,"src":"5071:294:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5813,"nodeType":"Block","src":"5502:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"5527:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"5531:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"5534:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"5537:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5805,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"5519:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5804,"id":5812,"nodeType":"Return","src":"5512:27:30"}]},"documentation":{"id":5796,"nodeType":"StructuredDocumentation","src":"5371:59:30","text":" @dev Returns the largest of two numbers."},"id":5814,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:30","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"a","nameLocation":"5456:1:30","nodeType":"VariableDeclaration","scope":5814,"src":"5448:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5797,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5800,"mutability":"mutable","name":"b","nameLocation":"5467:1:30","nodeType":"VariableDeclaration","scope":5814,"src":"5459:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:30"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5814,"src":"5493:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:30"},"scope":7127,"src":"5435:111:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5832,"nodeType":"Block","src":"5684:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"5709:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"5713:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"5716:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"5719:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5824,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"5701:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5823,"id":5831,"nodeType":"Return","src":"5694:27:30"}]},"documentation":{"id":5815,"nodeType":"StructuredDocumentation","src":"5552:60:30","text":" @dev Returns the smallest of two numbers."},"id":5833,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:30","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5817,"mutability":"mutable","name":"a","nameLocation":"5638:1:30","nodeType":"VariableDeclaration","scope":5833,"src":"5630:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5816,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5819,"mutability":"mutable","name":"b","nameLocation":"5649:1:30","nodeType":"VariableDeclaration","scope":5833,"src":"5641:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5818,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:30"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5833,"src":"5675:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:30"},"scope":7127,"src":"5617:111:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5855,"nodeType":"Block","src":"5912:82:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"5967:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"5971:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"5977:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"5981:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5842,"id":5854,"nodeType":"Return","src":"5959:28:30"}]},"documentation":{"id":5834,"nodeType":"StructuredDocumentation","src":"5734:102:30","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5856,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:30","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"a","nameLocation":"5866:1:30","nodeType":"VariableDeclaration","scope":5856,"src":"5858:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5838,"mutability":"mutable","name":"b","nameLocation":"5877:1:30","nodeType":"VariableDeclaration","scope":5856,"src":"5869:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:30"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5856,"src":"5903:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:30"},"scope":7127,"src":"5841:153:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5896,"nodeType":"Block","src":"6286:633:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"6300:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5877,"nodeType":"IfStatement","src":"6296:150:30","trueBody":{"id":5876,"nodeType":"Block","src":"6308:138:30","statements":[{"expression":{"arguments":[{"expression":{"id":5872,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"6412:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3501,"src":"6412:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5869,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"6400:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"6400:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5875,"nodeType":"ExpressionStatement","src":"6400:35:30"}]}},{"id":5895,"nodeType":"UncheckedBlock","src":"6829:84:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"6876:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5878,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"6860:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"6860:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"6887:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"6896:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5865,"id":5894,"nodeType":"Return","src":"6853:49:30"}]}]},"documentation":{"id":5857,"nodeType":"StructuredDocumentation","src":"6000:210:30","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:30","nodeType":"FunctionDefinition","parameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"a","nameLocation":"6240:1:30","nodeType":"VariableDeclaration","scope":5897,"src":"6232:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5861,"mutability":"mutable","name":"b","nameLocation":"6251:1:30","nodeType":"VariableDeclaration","scope":5897,"src":"6243:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:30"},"returnParameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5897,"src":"6277:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:30"},"scope":7127,"src":"6215:704:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6032,"nodeType":"Block","src":"7340:3585:30","statements":[{"id":6031,"nodeType":"UncheckedBlock","src":"7350:3569:30","statements":[{"assignments":[5910,5912],"declarations":[{"constant":false,"id":5910,"mutability":"mutable","name":"high","nameLocation":"7383:4:30","nodeType":"VariableDeclaration","scope":6031,"src":"7375:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5909,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5912,"mutability":"mutable","name":"low","nameLocation":"7397:3:30","nodeType":"VariableDeclaration","scope":6031,"src":"7389:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5917,"initialValue":{"arguments":[{"id":5914,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"7411:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5915,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"7414:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5913,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"7404:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"7498:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5926,"nodeType":"IfStatement","src":"7494:365:30","trueBody":{"id":5925,"nodeType":"Block","src":"7509:350:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"7827:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"7833:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5908,"id":5924,"nodeType":"Return","src":"7820:24:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"7969:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5928,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"7984:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5945,"nodeType":"IfStatement","src":"7965:142:30","trueBody":{"id":5944,"nodeType":"Block","src":"7990:117:30","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5934,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"8028:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5937,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8046:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3501,"src":"8046:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5939,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8070:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:30","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3497,"src":"8070:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5933,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"8020:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5930,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8008:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"8008:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5943,"nodeType":"ExpressionStatement","src":"8008:84:30"}]}},{"assignments":[5947],"declarations":[{"constant":false,"id":5947,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:30","nodeType":"VariableDeclaration","scope":6031,"src":"8359:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5948,"nodeType":"VariableDeclarationStatement","src":"8359:17:30"},{"AST":{"nativeSrc":"8415:283:30","nodeType":"YulBlock","src":"8415:283:30","statements":[{"nativeSrc":"8484:38:30","nodeType":"YulAssignment","src":"8484:38:30","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:30","nodeType":"YulIdentifier","src":"8504:1:30"},{"name":"y","nativeSrc":"8507:1:30","nodeType":"YulIdentifier","src":"8507:1:30"},{"name":"denominator","nativeSrc":"8510:11:30","nodeType":"YulIdentifier","src":"8510:11:30"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:30","nodeType":"YulIdentifier","src":"8497:6:30"},"nativeSrc":"8497:25:30","nodeType":"YulFunctionCall","src":"8497:25:30"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:30","nodeType":"YulIdentifier","src":"8484:9:30"}]},{"nativeSrc":"8604:37:30","nodeType":"YulAssignment","src":"8604:37:30","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:30","nodeType":"YulIdentifier","src":"8616:4:30"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:30","nodeType":"YulIdentifier","src":"8625:9:30"},{"name":"low","nativeSrc":"8636:3:30","nodeType":"YulIdentifier","src":"8636:3:30"}],"functionName":{"name":"gt","nativeSrc":"8622:2:30","nodeType":"YulIdentifier","src":"8622:2:30"},"nativeSrc":"8622:18:30","nodeType":"YulFunctionCall","src":"8622:18:30"}],"functionName":{"name":"sub","nativeSrc":"8612:3:30","nodeType":"YulIdentifier","src":"8612:3:30"},"nativeSrc":"8612:29:30","nodeType":"YulFunctionCall","src":"8612:29:30"},"variableNames":[{"name":"high","nativeSrc":"8604:4:30","nodeType":"YulIdentifier","src":"8604:4:30"}]},{"nativeSrc":"8658:26:30","nodeType":"YulAssignment","src":"8658:26:30","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:30","nodeType":"YulIdentifier","src":"8669:3:30"},{"name":"remainder","nativeSrc":"8674:9:30","nodeType":"YulIdentifier","src":"8674:9:30"}],"functionName":{"name":"sub","nativeSrc":"8665:3:30","nodeType":"YulIdentifier","src":"8665:3:30"},"nativeSrc":"8665:19:30","nodeType":"YulFunctionCall","src":"8665:19:30"},"variableNames":[{"name":"low","nativeSrc":"8658:3:30","nodeType":"YulIdentifier","src":"8658:3:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5904,"isOffset":false,"isSlot":false,"src":"8510:11:30","valueSize":1},{"declaration":5910,"isOffset":false,"isSlot":false,"src":"8604:4:30","valueSize":1},{"declaration":5910,"isOffset":false,"isSlot":false,"src":"8616:4:30","valueSize":1},{"declaration":5912,"isOffset":false,"isSlot":false,"src":"8636:3:30","valueSize":1},{"declaration":5912,"isOffset":false,"isSlot":false,"src":"8658:3:30","valueSize":1},{"declaration":5912,"isOffset":false,"isSlot":false,"src":"8669:3:30","valueSize":1},{"declaration":5947,"isOffset":false,"isSlot":false,"src":"8484:9:30","valueSize":1},{"declaration":5947,"isOffset":false,"isSlot":false,"src":"8625:9:30","valueSize":1},{"declaration":5947,"isOffset":false,"isSlot":false,"src":"8674:9:30","valueSize":1},{"declaration":5900,"isOffset":false,"isSlot":false,"src":"8504:1:30","valueSize":1},{"declaration":5902,"isOffset":false,"isSlot":false,"src":"8507:1:30","valueSize":1}],"flags":["memory-safe"],"id":5949,"nodeType":"InlineAssembly","src":"8390:308:30"},{"assignments":[5951],"declarations":[{"constant":false,"id":5951,"mutability":"mutable","name":"twos","nameLocation":"8910:4:30","nodeType":"VariableDeclaration","scope":6031,"src":"8902:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5958,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5952,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"8917:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5954,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"8936:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:30"},{"AST":{"nativeSrc":"8987:359:30","nodeType":"YulBlock","src":"8987:359:30","statements":[{"nativeSrc":"9052:37:30","nodeType":"YulAssignment","src":"9052:37:30","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:30","nodeType":"YulIdentifier","src":"9071:11:30"},{"name":"twos","nativeSrc":"9084:4:30","nodeType":"YulIdentifier","src":"9084:4:30"}],"functionName":{"name":"div","nativeSrc":"9067:3:30","nodeType":"YulIdentifier","src":"9067:3:30"},"nativeSrc":"9067:22:30","nodeType":"YulFunctionCall","src":"9067:22:30"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:30","nodeType":"YulIdentifier","src":"9052:11:30"}]},{"nativeSrc":"9153:21:30","nodeType":"YulAssignment","src":"9153:21:30","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:30","nodeType":"YulIdentifier","src":"9164:3:30"},{"name":"twos","nativeSrc":"9169:4:30","nodeType":"YulIdentifier","src":"9169:4:30"}],"functionName":{"name":"div","nativeSrc":"9160:3:30","nodeType":"YulIdentifier","src":"9160:3:30"},"nativeSrc":"9160:14:30","nodeType":"YulFunctionCall","src":"9160:14:30"},"variableNames":[{"name":"low","nativeSrc":"9153:3:30","nodeType":"YulIdentifier","src":"9153:3:30"}]},{"nativeSrc":"9293:39:30","nodeType":"YulAssignment","src":"9293:39:30","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:30","nodeType":"YulLiteral","src":"9313:1:30","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:30","nodeType":"YulIdentifier","src":"9316:4:30"}],"functionName":{"name":"sub","nativeSrc":"9309:3:30","nodeType":"YulIdentifier","src":"9309:3:30"},"nativeSrc":"9309:12:30","nodeType":"YulFunctionCall","src":"9309:12:30"},{"name":"twos","nativeSrc":"9323:4:30","nodeType":"YulIdentifier","src":"9323:4:30"}],"functionName":{"name":"div","nativeSrc":"9305:3:30","nodeType":"YulIdentifier","src":"9305:3:30"},"nativeSrc":"9305:23:30","nodeType":"YulFunctionCall","src":"9305:23:30"},{"kind":"number","nativeSrc":"9330:1:30","nodeType":"YulLiteral","src":"9330:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:30","nodeType":"YulIdentifier","src":"9301:3:30"},"nativeSrc":"9301:31:30","nodeType":"YulFunctionCall","src":"9301:31:30"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:30","nodeType":"YulIdentifier","src":"9293:4:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5904,"isOffset":false,"isSlot":false,"src":"9052:11:30","valueSize":1},{"declaration":5904,"isOffset":false,"isSlot":false,"src":"9071:11:30","valueSize":1},{"declaration":5912,"isOffset":false,"isSlot":false,"src":"9153:3:30","valueSize":1},{"declaration":5912,"isOffset":false,"isSlot":false,"src":"9164:3:30","valueSize":1},{"declaration":5951,"isOffset":false,"isSlot":false,"src":"9084:4:30","valueSize":1},{"declaration":5951,"isOffset":false,"isSlot":false,"src":"9169:4:30","valueSize":1},{"declaration":5951,"isOffset":false,"isSlot":false,"src":"9293:4:30","valueSize":1},{"declaration":5951,"isOffset":false,"isSlot":false,"src":"9316:4:30","valueSize":1},{"declaration":5951,"isOffset":false,"isSlot":false,"src":"9323:4:30","valueSize":1}],"flags":["memory-safe"],"id":5959,"nodeType":"InlineAssembly","src":"8962:384:30"},{"expression":{"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5960,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"9409:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"9416:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5962,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"9423:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5965,"nodeType":"ExpressionStatement","src":"9409:18:30"},{"assignments":[5967],"declarations":[{"constant":false,"id":5967,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:30","nodeType":"VariableDeclaration","scope":6031,"src":"9762:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5966,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5974,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5969,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"9785:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:30"},{"expression":{"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5975,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10018:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5977,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"10033:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5978,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10047:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5982,"nodeType":"ExpressionStatement","src":"10018:36:30"},{"expression":{"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5983,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10088:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5985,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"10103:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5986,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10117:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5990,"nodeType":"ExpressionStatement","src":"10088:36:30"},{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5991,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10160:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5993,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"10175:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5994,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10189:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5998,"nodeType":"ExpressionStatement","src":"10160:36:30"},{"expression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10231:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6001,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"10246:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6002,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10260:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6006,"nodeType":"ExpressionStatement","src":"10231:36:30"},{"expression":{"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6007,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10304:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6009,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"10319:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6010,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10333:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6014,"nodeType":"ExpressionStatement","src":"10304:36:30"},{"expression":{"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10378:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"10393:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6018,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10407:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6022,"nodeType":"ExpressionStatement","src":"10378:36:30"},{"expression":{"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"10859:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"10868:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6025,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"10874:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6028,"nodeType":"ExpressionStatement","src":"10859:22:30"},{"expression":{"id":6029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"10902:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5908,"id":6030,"nodeType":"Return","src":"10895:13:30"}]}]},"documentation":{"id":5898,"nodeType":"StructuredDocumentation","src":"6925:312:30","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6033,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:30","nodeType":"FunctionDefinition","parameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"x","nameLocation":"7266:1:30","nodeType":"VariableDeclaration","scope":6033,"src":"7258:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5902,"mutability":"mutable","name":"y","nameLocation":"7277:1:30","nodeType":"VariableDeclaration","scope":6033,"src":"7269:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5904,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:30","nodeType":"VariableDeclaration","scope":6033,"src":"7280:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:30"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"result","nameLocation":"7332:6:30","nodeType":"VariableDeclaration","scope":6033,"src":"7324:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:30"},"scope":7127,"src":"7242:3683:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6069,"nodeType":"Block","src":"11164:128:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6049,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"11188:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6050,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"11191:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6051,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"11194:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6048,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6033,6070],"referencedDeclaration":6033,"src":"11181:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6056,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"11242:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}],"id":6055,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"11225:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5518_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6059,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"11262:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6060,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"11265:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6061,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"11268:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6058,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:30","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6053,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"11209:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"11209:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6047,"id":6068,"nodeType":"Return","src":"11174:111:30"}]},"documentation":{"id":6034,"nodeType":"StructuredDocumentation","src":"10931:118:30","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6070,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:30","nodeType":"FunctionDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"x","nameLocation":"11078:1:30","nodeType":"VariableDeclaration","scope":6070,"src":"11070:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6038,"mutability":"mutable","name":"y","nameLocation":"11089:1:30","nodeType":"VariableDeclaration","scope":6070,"src":"11081:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6037,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6040,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:30","nodeType":"VariableDeclaration","scope":6070,"src":"11092:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6039,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6043,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:30","nodeType":"VariableDeclaration","scope":6070,"src":"11113:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"},"typeName":{"id":6042,"nodeType":"UserDefinedTypeName","pathNode":{"id":6041,"name":"Rounding","nameLocations":["11113:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"11113:8:30"},"referencedDeclaration":5518,"src":"11113:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:30"},"returnParameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6070,"src":"11155:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:30"},"scope":7127,"src":"11054:238:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6119,"nodeType":"Block","src":"11500:245:30","statements":[{"id":6118,"nodeType":"UncheckedBlock","src":"11510:229:30","statements":[{"assignments":[6083,6085],"declarations":[{"constant":false,"id":6083,"mutability":"mutable","name":"high","nameLocation":"11543:4:30","nodeType":"VariableDeclaration","scope":6118,"src":"11535:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6085,"mutability":"mutable","name":"low","nameLocation":"11557:3:30","nodeType":"VariableDeclaration","scope":6118,"src":"11549:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6090,"initialValue":{"arguments":[{"id":6087,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"11571:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6088,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"11574:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6086,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"11564:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6091,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"11594:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6093,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"11607:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6104,"nodeType":"IfStatement","src":"11590:86:30","trueBody":{"id":6103,"nodeType":"Block","src":"11610:66:30","statements":[{"expression":{"arguments":[{"expression":{"id":6099,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"11640:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:30","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3497,"src":"11640:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6096,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"11628:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"11628:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6102,"nodeType":"ExpressionStatement","src":"11628:33:30"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6105,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"11697:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6107,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"11712:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6112,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"11719:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6113,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"11726:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6081,"id":6117,"nodeType":"Return","src":"11689:39:30"}]}]},"documentation":{"id":6071,"nodeType":"StructuredDocumentation","src":"11298:111:30","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6120,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:30","nodeType":"FunctionDefinition","parameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"x","nameLocation":"11438:1:30","nodeType":"VariableDeclaration","scope":6120,"src":"11430:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6075,"mutability":"mutable","name":"y","nameLocation":"11449:1:30","nodeType":"VariableDeclaration","scope":6120,"src":"11441:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6077,"mutability":"mutable","name":"n","nameLocation":"11458:1:30","nodeType":"VariableDeclaration","scope":6120,"src":"11452:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6076,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:30"},"returnParameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"result","nameLocation":"11492:6:30","nodeType":"VariableDeclaration","scope":6120,"src":"11484:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:30"},"scope":7127,"src":"11414:331:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"11963:113:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6136,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"11987:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6137,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"11990:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6138,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"11993:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6135,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6120,6159],"referencedDeclaration":6120,"src":"11980:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6143,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"12031:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}],"id":6142,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"12014:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5518_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6146,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"12051:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6147,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"12054:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6149,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"12062:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6145,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:30","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6140,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"11998:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"11998:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6134,"id":6157,"nodeType":"Return","src":"11973:96:30"}]},"documentation":{"id":6121,"nodeType":"StructuredDocumentation","src":"11751:109:30","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:30","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"x","nameLocation":"11889:1:30","nodeType":"VariableDeclaration","scope":6159,"src":"11881:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6122,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6125,"mutability":"mutable","name":"y","nameLocation":"11900:1:30","nodeType":"VariableDeclaration","scope":6159,"src":"11892:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6124,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6127,"mutability":"mutable","name":"n","nameLocation":"11909:1:30","nodeType":"VariableDeclaration","scope":6159,"src":"11903:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6126,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6130,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:30","nodeType":"VariableDeclaration","scope":6159,"src":"11912:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"},"typeName":{"id":6129,"nodeType":"UserDefinedTypeName","pathNode":{"id":6128,"name":"Rounding","nameLocations":["11912:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"11912:8:30"},"referencedDeclaration":5518,"src":"11912:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:30"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6159,"src":"11954:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:30"},"scope":7127,"src":"11865:211:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6255,"nodeType":"Block","src":"12710:1849:30","statements":[{"id":6254,"nodeType":"UncheckedBlock","src":"12720:1833:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6169,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"12748:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6174,"nodeType":"IfStatement","src":"12744:20:30","trueBody":{"expression":{"hexValue":"30","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6168,"id":6173,"nodeType":"Return","src":"12756:8:30"}},{"assignments":[6176],"declarations":[{"constant":false,"id":6176,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:30","nodeType":"VariableDeclaration","scope":6254,"src":"13235:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6175,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6180,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"13255:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6178,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"13259:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:30"},{"assignments":[6182],"declarations":[{"constant":false,"id":6182,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:30","nodeType":"VariableDeclaration","scope":6254,"src":"13274:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6184,"initialValue":{"id":6183,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"13288:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:30"},{"assignments":[6186],"declarations":[{"constant":false,"id":6186,"mutability":"mutable","name":"x","nameLocation":"13432:1:30","nodeType":"VariableDeclaration","scope":6254,"src":"13425:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6185,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6188,"initialValue":{"hexValue":"30","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:30"},{"assignments":[6190],"declarations":[{"constant":false,"id":6190,"mutability":"mutable","name":"y","nameLocation":"13458:1:30","nodeType":"VariableDeclaration","scope":6254,"src":"13451:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6189,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6192,"initialValue":{"hexValue":"31","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:30"},{"body":{"id":6229,"nodeType":"Block","src":"13501:882:30","statements":[{"assignments":[6197],"declarations":[{"constant":false,"id":6197,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:30","nodeType":"VariableDeclaration","scope":6229,"src":"13519:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6201,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"13538:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6199,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"13544:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:30"},{"expression":{"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6202,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"13573:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6203,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"13578:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6204,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6205,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"13678:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"13923:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"13929:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6208,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"13941:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:30","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6213,"nodeType":"ExpressionStatement","src":"13572:395:30"},{"expression":{"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6214,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"13987:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6215,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"13990:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6216,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6217,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"14072:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6218,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"14326:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"14330:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6222,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"14341:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6220,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:30","typeDescriptions":{}}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:30","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6228,"nodeType":"ExpressionStatement","src":"13986:382:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6193,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"13485:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6230,"nodeType":"WhileStatement","src":"13478:905:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"14401:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6236,"nodeType":"IfStatement","src":"14397:22:30","trueBody":{"expression":{"hexValue":"30","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6168,"id":6235,"nodeType":"Return","src":"14411:8:30"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6238,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"14470:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"14477:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:30","subExpression":{"id":6244,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"14490:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6242,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:30","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6250,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"14502:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:30","typeDescriptions":{}}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6237,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"14462:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6168,"id":6253,"nodeType":"Return","src":"14455:50:30"}]}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"12082:553:30","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6256,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:30","nodeType":"FunctionDefinition","parameters":{"id":6165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"a","nameLocation":"12664:1:30","nodeType":"VariableDeclaration","scope":6256,"src":"12656:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6164,"mutability":"mutable","name":"n","nameLocation":"12675:1:30","nodeType":"VariableDeclaration","scope":6256,"src":"12667:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6163,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:30"},"returnParameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6256,"src":"12701:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6166,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:30"},"scope":7127,"src":"12640:1919:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"15159:82:30","statements":[{"id":6275,"nodeType":"UncheckedBlock","src":"15169:66:30","statements":[{"expression":{"arguments":[{"id":6268,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"15212:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6269,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"15215:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6272,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"15222:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6266,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"15200:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7127_$","typeString":"type(library Math)"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:30","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6313,"src":"15200:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6265,"id":6274,"nodeType":"Return","src":"15193:31:30"}]}]},"documentation":{"id":6257,"nodeType":"StructuredDocumentation","src":"14565:514:30","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:30","nodeType":"FunctionDefinition","parameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"a","nameLocation":"15113:1:30","nodeType":"VariableDeclaration","scope":6277,"src":"15105:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6261,"mutability":"mutable","name":"p","nameLocation":"15124:1:30","nodeType":"VariableDeclaration","scope":6277,"src":"15116:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6260,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:30"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6277,"src":"15150:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6263,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:30"},"scope":7127,"src":"15084:157:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6312,"nodeType":"Block","src":"16011:174:30","statements":[{"assignments":[6290,6292],"declarations":[{"constant":false,"id":6290,"mutability":"mutable","name":"success","nameLocation":"16027:7:30","nodeType":"VariableDeclaration","scope":6312,"src":"16022:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6289,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6292,"mutability":"mutable","name":"result","nameLocation":"16044:6:30","nodeType":"VariableDeclaration","scope":6312,"src":"16036:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6291,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6298,"initialValue":{"arguments":[{"id":6294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"16064:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6295,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"16067:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6296,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"16070:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6293,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6337,6419],"referencedDeclaration":6337,"src":"16054:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:30"},{"condition":{"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:30","subExpression":{"id":6299,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"16087:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6309,"nodeType":"IfStatement","src":"16082:74:30","trueBody":{"id":6308,"nodeType":"Block","src":"16096:60:30","statements":[{"expression":{"arguments":[{"expression":{"id":6304,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"16122:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3501,"src":"16122:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6301,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"16110:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"16110:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6307,"nodeType":"ExpressionStatement","src":"16110:35:30"}]}},{"expression":{"id":6310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"16172:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6288,"id":6311,"nodeType":"Return","src":"16165:13:30"}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"15247:678:30","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6313,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:30","nodeType":"FunctionDefinition","parameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"b","nameLocation":"15954:1:30","nodeType":"VariableDeclaration","scope":6313,"src":"15946:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6282,"mutability":"mutable","name":"e","nameLocation":"15965:1:30","nodeType":"VariableDeclaration","scope":6313,"src":"15957:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6281,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6284,"mutability":"mutable","name":"m","nameLocation":"15976:1:30","nodeType":"VariableDeclaration","scope":6313,"src":"15968:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6283,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:30"},"returnParameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6313,"src":"16002:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:30"},"scope":7127,"src":"15930:255:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6336,"nodeType":"Block","src":"17039:1493:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"17053:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6334,"nodeType":"IfStatement","src":"17049:29:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6326,"id":6333,"nodeType":"Return","src":"17061:17:30"}},{"AST":{"nativeSrc":"17113:1413:30","nodeType":"YulBlock","src":"17113:1413:30","statements":[{"nativeSrc":"17127:22:30","nodeType":"YulVariableDeclaration","src":"17127:22:30","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:30","nodeType":"YulLiteral","src":"17144:4:30","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:30","nodeType":"YulIdentifier","src":"17138:5:30"},"nativeSrc":"17138:11:30","nodeType":"YulFunctionCall","src":"17138:11:30"},"variables":[{"name":"ptr","nativeSrc":"17131:3:30","nodeType":"YulTypedName","src":"17131:3:30","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:30","nodeType":"YulIdentifier","src":"18057:3:30"},{"kind":"number","nativeSrc":"18062:4:30","nodeType":"YulLiteral","src":"18062:4:30","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:30","nodeType":"YulIdentifier","src":"18050:6:30"},"nativeSrc":"18050:17:30","nodeType":"YulFunctionCall","src":"18050:17:30"},"nativeSrc":"18050:17:30","nodeType":"YulExpressionStatement","src":"18050:17:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:30","nodeType":"YulIdentifier","src":"18091:3:30"},{"kind":"number","nativeSrc":"18096:4:30","nodeType":"YulLiteral","src":"18096:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:30","nodeType":"YulIdentifier","src":"18087:3:30"},"nativeSrc":"18087:14:30","nodeType":"YulFunctionCall","src":"18087:14:30"},{"kind":"number","nativeSrc":"18103:4:30","nodeType":"YulLiteral","src":"18103:4:30","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:30","nodeType":"YulIdentifier","src":"18080:6:30"},"nativeSrc":"18080:28:30","nodeType":"YulFunctionCall","src":"18080:28:30"},"nativeSrc":"18080:28:30","nodeType":"YulExpressionStatement","src":"18080:28:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:30","nodeType":"YulIdentifier","src":"18132:3:30"},{"kind":"number","nativeSrc":"18137:4:30","nodeType":"YulLiteral","src":"18137:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:30","nodeType":"YulIdentifier","src":"18128:3:30"},"nativeSrc":"18128:14:30","nodeType":"YulFunctionCall","src":"18128:14:30"},{"kind":"number","nativeSrc":"18144:4:30","nodeType":"YulLiteral","src":"18144:4:30","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:30","nodeType":"YulIdentifier","src":"18121:6:30"},"nativeSrc":"18121:28:30","nodeType":"YulFunctionCall","src":"18121:28:30"},"nativeSrc":"18121:28:30","nodeType":"YulExpressionStatement","src":"18121:28:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:30","nodeType":"YulIdentifier","src":"18173:3:30"},{"kind":"number","nativeSrc":"18178:4:30","nodeType":"YulLiteral","src":"18178:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:30","nodeType":"YulIdentifier","src":"18169:3:30"},"nativeSrc":"18169:14:30","nodeType":"YulFunctionCall","src":"18169:14:30"},{"name":"b","nativeSrc":"18185:1:30","nodeType":"YulIdentifier","src":"18185:1:30"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:30","nodeType":"YulIdentifier","src":"18162:6:30"},"nativeSrc":"18162:25:30","nodeType":"YulFunctionCall","src":"18162:25:30"},"nativeSrc":"18162:25:30","nodeType":"YulExpressionStatement","src":"18162:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:30","nodeType":"YulIdentifier","src":"18211:3:30"},{"kind":"number","nativeSrc":"18216:4:30","nodeType":"YulLiteral","src":"18216:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:30","nodeType":"YulIdentifier","src":"18207:3:30"},"nativeSrc":"18207:14:30","nodeType":"YulFunctionCall","src":"18207:14:30"},{"name":"e","nativeSrc":"18223:1:30","nodeType":"YulIdentifier","src":"18223:1:30"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:30","nodeType":"YulIdentifier","src":"18200:6:30"},"nativeSrc":"18200:25:30","nodeType":"YulFunctionCall","src":"18200:25:30"},"nativeSrc":"18200:25:30","nodeType":"YulExpressionStatement","src":"18200:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:30","nodeType":"YulIdentifier","src":"18249:3:30"},{"kind":"number","nativeSrc":"18254:4:30","nodeType":"YulLiteral","src":"18254:4:30","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:30","nodeType":"YulIdentifier","src":"18245:3:30"},"nativeSrc":"18245:14:30","nodeType":"YulFunctionCall","src":"18245:14:30"},{"name":"m","nativeSrc":"18261:1:30","nodeType":"YulIdentifier","src":"18261:1:30"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:30","nodeType":"YulIdentifier","src":"18238:6:30"},"nativeSrc":"18238:25:30","nodeType":"YulFunctionCall","src":"18238:25:30"},"nativeSrc":"18238:25:30","nodeType":"YulExpressionStatement","src":"18238:25:30"},{"nativeSrc":"18425:57:30","nodeType":"YulAssignment","src":"18425:57:30","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:30","nodeType":"YulIdentifier","src":"18447:3:30"},"nativeSrc":"18447:5:30","nodeType":"YulFunctionCall","src":"18447:5:30"},{"kind":"number","nativeSrc":"18454:4:30","nodeType":"YulLiteral","src":"18454:4:30","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:30","nodeType":"YulIdentifier","src":"18460:3:30"},{"kind":"number","nativeSrc":"18465:4:30","nodeType":"YulLiteral","src":"18465:4:30","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:30","nodeType":"YulLiteral","src":"18471:4:30","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:30","nodeType":"YulLiteral","src":"18477:4:30","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:30","nodeType":"YulIdentifier","src":"18436:10:30"},"nativeSrc":"18436:46:30","nodeType":"YulFunctionCall","src":"18436:46:30"},"variableNames":[{"name":"success","nativeSrc":"18425:7:30","nodeType":"YulIdentifier","src":"18425:7:30"}]},{"nativeSrc":"18495:21:30","nodeType":"YulAssignment","src":"18495:21:30","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:30","nodeType":"YulLiteral","src":"18511:4:30","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:30","nodeType":"YulIdentifier","src":"18505:5:30"},"nativeSrc":"18505:11:30","nodeType":"YulFunctionCall","src":"18505:11:30"},"variableNames":[{"name":"result","nativeSrc":"18495:6:30","nodeType":"YulIdentifier","src":"18495:6:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6316,"isOffset":false,"isSlot":false,"src":"18185:1:30","valueSize":1},{"declaration":6318,"isOffset":false,"isSlot":false,"src":"18223:1:30","valueSize":1},{"declaration":6320,"isOffset":false,"isSlot":false,"src":"18261:1:30","valueSize":1},{"declaration":6325,"isOffset":false,"isSlot":false,"src":"18495:6:30","valueSize":1},{"declaration":6323,"isOffset":false,"isSlot":false,"src":"18425:7:30","valueSize":1}],"flags":["memory-safe"],"id":6335,"nodeType":"InlineAssembly","src":"17088:1438:30"}]},"documentation":{"id":6314,"nodeType":"StructuredDocumentation","src":"16191:738:30","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6337,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:30","nodeType":"FunctionDefinition","parameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"b","nameLocation":"16961:1:30","nodeType":"VariableDeclaration","scope":6337,"src":"16953:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6315,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6318,"mutability":"mutable","name":"e","nameLocation":"16972:1:30","nodeType":"VariableDeclaration","scope":6337,"src":"16964:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6317,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6320,"mutability":"mutable","name":"m","nameLocation":"16983:1:30","nodeType":"VariableDeclaration","scope":6337,"src":"16975:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6319,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:30"},"returnParameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"success","nameLocation":"17014:7:30","nodeType":"VariableDeclaration","scope":6337,"src":"17009:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6322,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6325,"mutability":"mutable","name":"result","nameLocation":"17031:6:30","nodeType":"VariableDeclaration","scope":6337,"src":"17023:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6324,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:30"},"scope":7127,"src":"16934:1598:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6372,"nodeType":"Block","src":"18729:179:30","statements":[{"assignments":[6350,6352],"declarations":[{"constant":false,"id":6350,"mutability":"mutable","name":"success","nameLocation":"18745:7:30","nodeType":"VariableDeclaration","scope":6372,"src":"18740:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6349,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6352,"mutability":"mutable","name":"result","nameLocation":"18767:6:30","nodeType":"VariableDeclaration","scope":6372,"src":"18754:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6351,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6358,"initialValue":{"arguments":[{"id":6354,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"18787:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6355,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"18790:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6356,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"18793:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6353,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6337,6419],"referencedDeclaration":6419,"src":"18777:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:30"},{"condition":{"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:30","subExpression":{"id":6359,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"18810:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6369,"nodeType":"IfStatement","src":"18805:74:30","trueBody":{"id":6368,"nodeType":"Block","src":"18819:60:30","statements":[{"expression":{"arguments":[{"expression":{"id":6364,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18845:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3501,"src":"18845:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6361,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18833:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3534_$","typeString":"type(library Panic)"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"18833:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"ExpressionStatement","src":"18833:35:30"}]}},{"expression":{"id":6370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"18895:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6348,"id":6371,"nodeType":"Return","src":"18888:13:30"}]},"documentation":{"id":6338,"nodeType":"StructuredDocumentation","src":"18538:85:30","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6373,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:30","nodeType":"FunctionDefinition","parameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"b","nameLocation":"18657:1:30","nodeType":"VariableDeclaration","scope":6373,"src":"18644:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6339,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6342,"mutability":"mutable","name":"e","nameLocation":"18673:1:30","nodeType":"VariableDeclaration","scope":6373,"src":"18660:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6341,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6344,"mutability":"mutable","name":"m","nameLocation":"18689:1:30","nodeType":"VariableDeclaration","scope":6373,"src":"18676:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6343,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:30"},"returnParameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6373,"src":"18715:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6346,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:30"},"scope":7127,"src":"18628:280:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6418,"nodeType":"Block","src":"19162:771:30","statements":[{"condition":{"arguments":[{"id":6388,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"19187:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6387,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"19176:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6397,"nodeType":"IfStatement","src":"19172:47:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6391,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6386,"id":6396,"nodeType":"Return","src":"19191:28:30"}},{"assignments":[6399],"declarations":[{"constant":false,"id":6399,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:30","nodeType":"VariableDeclaration","scope":6418,"src":"19230:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6398,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6402,"initialValue":{"expression":{"id":6400,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"19245:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:30","memberName":"length","nodeType":"MemberAccess","src":"19245:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:30"},{"expression":{"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"19335:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"19361:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:30","memberName":"length","nodeType":"MemberAccess","src":"19361:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6408,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"19371:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:30","memberName":"length","nodeType":"MemberAccess","src":"19371:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6410,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"19381:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6411,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"19387:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6412,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"19390:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6413,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"19393:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6404,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6416,"nodeType":"ExpressionStatement","src":"19335:60:30"},{"AST":{"nativeSrc":"19431:496:30","nodeType":"YulBlock","src":"19431:496:30","statements":[{"nativeSrc":"19445:32:30","nodeType":"YulVariableDeclaration","src":"19445:32:30","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:30","nodeType":"YulIdentifier","src":"19464:6:30"},{"kind":"number","nativeSrc":"19472:4:30","nodeType":"YulLiteral","src":"19472:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:30","nodeType":"YulIdentifier","src":"19460:3:30"},"nativeSrc":"19460:17:30","nodeType":"YulFunctionCall","src":"19460:17:30"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:30","nodeType":"YulTypedName","src":"19449:7:30","type":""}]},{"nativeSrc":"19567:73:30","nodeType":"YulAssignment","src":"19567:73:30","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:30","nodeType":"YulIdentifier","src":"19589:3:30"},"nativeSrc":"19589:5:30","nodeType":"YulFunctionCall","src":"19589:5:30"},{"kind":"number","nativeSrc":"19596:4:30","nodeType":"YulLiteral","src":"19596:4:30","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:30","nodeType":"YulIdentifier","src":"19602:7:30"},{"arguments":[{"name":"result","nativeSrc":"19617:6:30","nodeType":"YulIdentifier","src":"19617:6:30"}],"functionName":{"name":"mload","nativeSrc":"19611:5:30","nodeType":"YulIdentifier","src":"19611:5:30"},"nativeSrc":"19611:13:30","nodeType":"YulFunctionCall","src":"19611:13:30"},{"name":"dataPtr","nativeSrc":"19626:7:30","nodeType":"YulIdentifier","src":"19626:7:30"},{"name":"mLen","nativeSrc":"19635:4:30","nodeType":"YulIdentifier","src":"19635:4:30"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:30","nodeType":"YulIdentifier","src":"19578:10:30"},"nativeSrc":"19578:62:30","nodeType":"YulFunctionCall","src":"19578:62:30"},"variableNames":[{"name":"success","nativeSrc":"19567:7:30","nodeType":"YulIdentifier","src":"19567:7:30"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:30","nodeType":"YulIdentifier","src":"19796:6:30"},{"name":"mLen","nativeSrc":"19804:4:30","nodeType":"YulIdentifier","src":"19804:4:30"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:30","nodeType":"YulIdentifier","src":"19789:6:30"},"nativeSrc":"19789:20:30","nodeType":"YulFunctionCall","src":"19789:20:30"},"nativeSrc":"19789:20:30","nodeType":"YulExpressionStatement","src":"19789:20:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:30","nodeType":"YulLiteral","src":"19892:4:30","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:30","nodeType":"YulIdentifier","src":"19902:7:30"},{"name":"mLen","nativeSrc":"19911:4:30","nodeType":"YulIdentifier","src":"19911:4:30"}],"functionName":{"name":"add","nativeSrc":"19898:3:30","nodeType":"YulIdentifier","src":"19898:3:30"},"nativeSrc":"19898:18:30","nodeType":"YulFunctionCall","src":"19898:18:30"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:30","nodeType":"YulIdentifier","src":"19885:6:30"},"nativeSrc":"19885:32:30","nodeType":"YulFunctionCall","src":"19885:32:30"},"nativeSrc":"19885:32:30","nodeType":"YulExpressionStatement","src":"19885:32:30"}]},"evmVersion":"paris","externalReferences":[{"declaration":6399,"isOffset":false,"isSlot":false,"src":"19635:4:30","valueSize":1},{"declaration":6399,"isOffset":false,"isSlot":false,"src":"19804:4:30","valueSize":1},{"declaration":6399,"isOffset":false,"isSlot":false,"src":"19911:4:30","valueSize":1},{"declaration":6385,"isOffset":false,"isSlot":false,"src":"19464:6:30","valueSize":1},{"declaration":6385,"isOffset":false,"isSlot":false,"src":"19617:6:30","valueSize":1},{"declaration":6385,"isOffset":false,"isSlot":false,"src":"19796:6:30","valueSize":1},{"declaration":6383,"isOffset":false,"isSlot":false,"src":"19567:7:30","valueSize":1}],"flags":["memory-safe"],"id":6417,"nodeType":"InlineAssembly","src":"19406:521:30"}]},"documentation":{"id":6374,"nodeType":"StructuredDocumentation","src":"18914:88:30","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6419,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:30","nodeType":"FunctionDefinition","parameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6376,"mutability":"mutable","name":"b","nameLocation":"19048:1:30","nodeType":"VariableDeclaration","scope":6419,"src":"19035:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6375,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6378,"mutability":"mutable","name":"e","nameLocation":"19072:1:30","nodeType":"VariableDeclaration","scope":6419,"src":"19059:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6377,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6380,"mutability":"mutable","name":"m","nameLocation":"19096:1:30","nodeType":"VariableDeclaration","scope":6419,"src":"19083:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6379,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:30"},"returnParameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"success","nameLocation":"19132:7:30","nodeType":"VariableDeclaration","scope":6419,"src":"19127:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6382,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6385,"mutability":"mutable","name":"result","nameLocation":"19154:6:30","nodeType":"VariableDeclaration","scope":6419,"src":"19141:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6384,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:30"},"scope":7127,"src":"19007:926:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6451,"nodeType":"Block","src":"20088:176:30","statements":[{"body":{"id":6447,"nodeType":"Block","src":"20145:92:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6438,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"20163:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6440,"indexExpression":{"id":6439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"20173:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6446,"nodeType":"IfStatement","src":"20159:68:30","trueBody":{"id":6445,"nodeType":"Block","src":"20182:45:30","statements":[{"expression":{"hexValue":"66616c7365","id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6426,"id":6444,"nodeType":"Return","src":"20200:12:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"20118:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6432,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"20122:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:30","memberName":"length","nodeType":"MemberAccess","src":"20122:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6448,"initializationExpression":{"assignments":[6428],"declarations":[{"constant":false,"id":6428,"mutability":"mutable","name":"i","nameLocation":"20111:1:30","nodeType":"VariableDeclaration","scope":6448,"src":"20103:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6427,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6430,"initialValue":{"hexValue":"30","id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:30"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:30","subExpression":{"id":6435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"20142:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6437,"nodeType":"ExpressionStatement","src":"20140:3:30"},"nodeType":"ForStatement","src":"20098:139:30"},{"expression":{"hexValue":"74727565","id":6449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6426,"id":6450,"nodeType":"Return","src":"20246:11:30"}]},"documentation":{"id":6420,"nodeType":"StructuredDocumentation","src":"19939:72:30","text":" @dev Returns whether the provided byte array is zero."},"id":6452,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:30","nodeType":"FunctionDefinition","parameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:30","nodeType":"VariableDeclaration","scope":6452,"src":"20036:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6421,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:30"},"returnParameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6452,"src":"20082:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6424,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:30"},"scope":7127,"src":"20016:248:30","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6670,"nodeType":"Block","src":"20624:5124:30","statements":[{"id":6669,"nodeType":"UncheckedBlock","src":"20634:5108:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"20728:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"20724:53:30","trueBody":{"id":6465,"nodeType":"Block","src":"20736:41:30","statements":[{"expression":{"id":6463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"20761:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6459,"id":6464,"nodeType":"Return","src":"20754:8:30"}]}},{"assignments":[6468],"declarations":[{"constant":false,"id":6468,"mutability":"mutable","name":"aa","nameLocation":"21712:2:30","nodeType":"VariableDeclaration","scope":6669,"src":"21704:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6470,"initialValue":{"id":6469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"21717:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:30"},{"assignments":[6472],"declarations":[{"constant":false,"id":6472,"mutability":"mutable","name":"xn","nameLocation":"21740:2:30","nodeType":"VariableDeclaration","scope":6669,"src":"21732:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6471,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6474,"initialValue":{"hexValue":"31","id":6473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"21765:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6490,"nodeType":"IfStatement","src":"21761:92:30","trueBody":{"id":6489,"nodeType":"Block","src":"21783:70:30","statements":[{"expression":{"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6481,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"21801:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6484,"nodeType":"ExpressionStatement","src":"21801:10:30"},{"expression":{"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6485,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"21829:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6488,"nodeType":"ExpressionStatement","src":"21829:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"21870:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6506,"nodeType":"IfStatement","src":"21866:90:30","trueBody":{"id":6505,"nodeType":"Block","src":"21887:69:30","statements":[{"expression":{"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6497,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"21905:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6500,"nodeType":"ExpressionStatement","src":"21905:9:30"},{"expression":{"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6501,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"21932:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6504,"nodeType":"ExpressionStatement","src":"21932:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6507,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"21973:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6522,"nodeType":"IfStatement","src":"21969:90:30","trueBody":{"id":6521,"nodeType":"Block","src":"21990:69:30","statements":[{"expression":{"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6513,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22008:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6516,"nodeType":"ExpressionStatement","src":"22008:9:30"},{"expression":{"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6517,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"22035:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6520,"nodeType":"ExpressionStatement","src":"22035:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6523,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22076:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6538,"nodeType":"IfStatement","src":"22072:89:30","trueBody":{"id":6537,"nodeType":"Block","src":"22093:68:30","statements":[{"expression":{"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6529,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22111:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6532,"nodeType":"ExpressionStatement","src":"22111:9:30"},{"expression":{"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6533,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"22138:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6536,"nodeType":"ExpressionStatement","src":"22138:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6539,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22178:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"nodeType":"IfStatement","src":"22174:87:30","trueBody":{"id":6553,"nodeType":"Block","src":"22194:67:30","statements":[{"expression":{"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6545,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22212:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6548,"nodeType":"ExpressionStatement","src":"22212:8:30"},{"expression":{"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6549,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"22238:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6552,"nodeType":"ExpressionStatement","src":"22238:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6555,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22278:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6570,"nodeType":"IfStatement","src":"22274:87:30","trueBody":{"id":6569,"nodeType":"Block","src":"22294:67:30","statements":[{"expression":{"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6561,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22312:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6564,"nodeType":"ExpressionStatement","src":"22312:8:30"},{"expression":{"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6565,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"22338:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6568,"nodeType":"ExpressionStatement","src":"22338:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22378:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6582,"nodeType":"IfStatement","src":"22374:61:30","trueBody":{"id":6581,"nodeType":"Block","src":"22394:41:30","statements":[{"expression":{"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6577,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"22412:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6580,"nodeType":"ExpressionStatement","src":"22412:8:30"}]}},{"expression":{"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6583,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"22855:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6585,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"22865:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6591,"nodeType":"ExpressionStatement","src":"22855:18:30"},{"expression":{"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6592,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24760:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6593,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24766:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"24771:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6595,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24775:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6602,"nodeType":"ExpressionStatement","src":"24760:23:30"},{"expression":{"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6603,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24869:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6604,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24875:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"24880:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6606,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24884:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6613,"nodeType":"ExpressionStatement","src":"24869:23:30"},{"expression":{"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24980:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6615,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24986:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"24991:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6617,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"24995:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6624,"nodeType":"ExpressionStatement","src":"24980:23:30"},{"expression":{"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6625,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25089:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6626,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25095:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"25100:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6628,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25104:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6635,"nodeType":"ExpressionStatement","src":"25089:23:30"},{"expression":{"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6636,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25199:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25205:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"25210:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6639,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25214:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6646,"nodeType":"ExpressionStatement","src":"25199:23:30"},{"expression":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6647,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25309:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6648,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25315:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"25320:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6650,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25324:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6657,"nodeType":"ExpressionStatement","src":"25309:23:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6658,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25698:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6661,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25719:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"25724:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6663,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"25728:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6659,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"25703:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"25703:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6459,"id":6668,"nodeType":"Return","src":"25691:40:30"}]}]},"documentation":{"id":6453,"nodeType":"StructuredDocumentation","src":"20270:292:30","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6671,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:30","nodeType":"FunctionDefinition","parameters":{"id":6456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6455,"mutability":"mutable","name":"a","nameLocation":"20589:1:30","nodeType":"VariableDeclaration","scope":6671,"src":"20581:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6454,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:30"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6671,"src":"20615:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6457,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:30"},"scope":7127,"src":"20567:5181:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6704,"nodeType":"Block","src":"25921:171:30","statements":[{"id":6703,"nodeType":"UncheckedBlock","src":"25931:155:30","statements":[{"assignments":[6683],"declarations":[{"constant":false,"id":6683,"mutability":"mutable","name":"result","nameLocation":"25963:6:30","nodeType":"VariableDeclaration","scope":6703,"src":"25955:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6682,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6687,"initialValue":{"arguments":[{"id":6685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"25977:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6684,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6671,6705],"referencedDeclaration":6671,"src":"25972:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"26000:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6692,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"26042:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}],"id":6691,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"26025:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5518_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"26055:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"26064:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"26073:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6689,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"26009:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"26009:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6681,"id":6702,"nodeType":"Return","src":"25993:82:30"}]}]},"documentation":{"id":6672,"nodeType":"StructuredDocumentation","src":"25754:86:30","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6705,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:30","nodeType":"FunctionDefinition","parameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"a","nameLocation":"25867:1:30","nodeType":"VariableDeclaration","scope":6705,"src":"25859:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6673,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6677,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:30","nodeType":"VariableDeclaration","scope":6705,"src":"25870:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"},"typeName":{"id":6676,"nodeType":"UserDefinedTypeName","pathNode":{"id":6675,"name":"Rounding","nameLocations":["25870:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"25870:8:30"},"referencedDeclaration":5518,"src":"25870:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:30"},"returnParameters":{"id":6681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6705,"src":"25912:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6679,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:30"},"scope":7127,"src":"25845:247:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6795,"nodeType":"Block","src":"26281:2334:30","statements":[{"expression":{"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6713,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26363:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6716,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"26383:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6714,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"26367:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"26367:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:30","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6723,"nodeType":"ExpressionStatement","src":"26363:64:30"},{"expression":{"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6724,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26503:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"26525:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6728,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26530:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6725,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"26508:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"26508:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:30","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6737,"nodeType":"ExpressionStatement","src":"26503:56:30"},{"expression":{"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6738,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26634:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6741,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"26656:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6742,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26661:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"26639:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"26639:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6751,"nodeType":"ExpressionStatement","src":"26634:48:30"},{"expression":{"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6752,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26757:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6755,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"26779:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6756,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26784:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:30","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6753,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"26762:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"26762:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6765,"nodeType":"ExpressionStatement","src":"26757:44:30"},{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6766,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26874:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6769,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"26896:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6770,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26901:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6767,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"26879:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"26879:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6779,"nodeType":"ExpressionStatement","src":"26874:42:30"},{"expression":{"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6780,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"26988:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6783,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"27010:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6784,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"27015:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6781,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"26993:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"26993:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6793,"nodeType":"ExpressionStatement","src":"26988:41:30"},{"AST":{"nativeSrc":"28490:119:30","nodeType":"YulBlock","src":"28490:119:30","statements":[{"nativeSrc":"28504:95:30","nodeType":"YulAssignment","src":"28504:95:30","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:30","nodeType":"YulIdentifier","src":"28512:1:30"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:30","nodeType":"YulIdentifier","src":"28524:1:30"},{"name":"x","nativeSrc":"28527:1:30","nodeType":"YulIdentifier","src":"28527:1:30"}],"functionName":{"name":"shr","nativeSrc":"28520:3:30","nodeType":"YulIdentifier","src":"28520:3:30"},"nativeSrc":"28520:9:30","nodeType":"YulFunctionCall","src":"28520:9:30"},{"kind":"number","nativeSrc":"28531:66:30","nodeType":"YulLiteral","src":"28531:66:30","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:30","nodeType":"YulIdentifier","src":"28515:4:30"},"nativeSrc":"28515:83:30","nodeType":"YulFunctionCall","src":"28515:83:30"}],"functionName":{"name":"or","nativeSrc":"28509:2:30","nodeType":"YulIdentifier","src":"28509:2:30"},"nativeSrc":"28509:90:30","nodeType":"YulFunctionCall","src":"28509:90:30"},"variableNames":[{"name":"r","nativeSrc":"28504:1:30","nodeType":"YulIdentifier","src":"28504:1:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6711,"isOffset":false,"isSlot":false,"src":"28504:1:30","valueSize":1},{"declaration":6711,"isOffset":false,"isSlot":false,"src":"28512:1:30","valueSize":1},{"declaration":6711,"isOffset":false,"isSlot":false,"src":"28524:1:30","valueSize":1},{"declaration":6708,"isOffset":false,"isSlot":false,"src":"28527:1:30","valueSize":1}],"flags":["memory-safe"],"id":6794,"nodeType":"InlineAssembly","src":"28465:144:30"}]},"documentation":{"id":6706,"nodeType":"StructuredDocumentation","src":"26098:119:30","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6796,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:30","nodeType":"FunctionDefinition","parameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"x","nameLocation":"26244:1:30","nodeType":"VariableDeclaration","scope":6796,"src":"26236:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:30"},"returnParameters":{"id":6712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"mutability":"mutable","name":"r","nameLocation":"26278:1:30","nodeType":"VariableDeclaration","scope":6796,"src":"26270:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6710,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:30"},"scope":7127,"src":"26222:2393:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6829,"nodeType":"Block","src":"28848:175:30","statements":[{"id":6828,"nodeType":"UncheckedBlock","src":"28858:159:30","statements":[{"assignments":[6808],"declarations":[{"constant":false,"id":6808,"mutability":"mutable","name":"result","nameLocation":"28890:6:30","nodeType":"VariableDeclaration","scope":6828,"src":"28882:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6812,"initialValue":{"arguments":[{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"28904:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6809,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6796,6830],"referencedDeclaration":6796,"src":"28899:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"28931:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6817,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"28973:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}],"id":6816,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"28956:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5518_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"28991:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"29000:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6814,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"28940:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"28940:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6806,"id":6827,"nodeType":"Return","src":"28924:82:30"}]}]},"documentation":{"id":6797,"nodeType":"StructuredDocumentation","src":"28621:142:30","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6830,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:30","nodeType":"FunctionDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6799,"mutability":"mutable","name":"value","nameLocation":"28790:5:30","nodeType":"VariableDeclaration","scope":6830,"src":"28782:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6798,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6802,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:30","nodeType":"VariableDeclaration","scope":6830,"src":"28797:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"},"typeName":{"id":6801,"nodeType":"UserDefinedTypeName","pathNode":{"id":6800,"name":"Rounding","nameLocations":["28797:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"28797:8:30"},"referencedDeclaration":5518,"src":"28797:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:30"},"returnParameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6830,"src":"28839:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6804,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:30"},"scope":7127,"src":"28768:255:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6958,"nodeType":"Block","src":"29216:854:30","statements":[{"assignments":[6839],"declarations":[{"constant":false,"id":6839,"mutability":"mutable","name":"result","nameLocation":"29234:6:30","nodeType":"VariableDeclaration","scope":6958,"src":"29226:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6838,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6841,"initialValue":{"hexValue":"30","id":6840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:30"},{"id":6955,"nodeType":"UncheckedBlock","src":"29254:787:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29282:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6858,"nodeType":"IfStatement","src":"29278:103:30","trueBody":{"id":6857,"nodeType":"Block","src":"29301:80:30","statements":[{"expression":{"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29319:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6852,"nodeType":"ExpressionStatement","src":"29319:17:30"},{"expression":{"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29354:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6856,"nodeType":"ExpressionStatement","src":"29354:12:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29398:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6875,"nodeType":"IfStatement","src":"29394:103:30","trueBody":{"id":6874,"nodeType":"Block","src":"29417:80:30","statements":[{"expression":{"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29435:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6869,"nodeType":"ExpressionStatement","src":"29435:17:30"},{"expression":{"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29470:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6873,"nodeType":"ExpressionStatement","src":"29470:12:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29514:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6892,"nodeType":"IfStatement","src":"29510:103:30","trueBody":{"id":6891,"nodeType":"Block","src":"29533:80:30","statements":[{"expression":{"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29551:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6886,"nodeType":"ExpressionStatement","src":"29551:17:30"},{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29586:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6890,"nodeType":"ExpressionStatement","src":"29586:12:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29630:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6909,"nodeType":"IfStatement","src":"29626:100:30","trueBody":{"id":6908,"nodeType":"Block","src":"29648:78:30","statements":[{"expression":{"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29666:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6903,"nodeType":"ExpressionStatement","src":"29666:16:30"},{"expression":{"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29700:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6907,"nodeType":"ExpressionStatement","src":"29700:11:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29743:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:30","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6926,"nodeType":"IfStatement","src":"29739:100:30","trueBody":{"id":6925,"nodeType":"Block","src":"29761:78:30","statements":[{"expression":{"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29779:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:30","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6920,"nodeType":"ExpressionStatement","src":"29779:16:30"},{"expression":{"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29813:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6924,"nodeType":"ExpressionStatement","src":"29813:11:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29856:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6943,"nodeType":"IfStatement","src":"29852:100:30","trueBody":{"id":6942,"nodeType":"Block","src":"29874:78:30","statements":[{"expression":{"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29892:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6937,"nodeType":"ExpressionStatement","src":"29892:16:30"},{"expression":{"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29926:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6941,"nodeType":"ExpressionStatement","src":"29926:11:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"29969:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6954,"nodeType":"IfStatement","src":"29965:66:30","trueBody":{"id":6953,"nodeType":"Block","src":"29987:44:30","statements":[{"expression":{"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"30005:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6952,"nodeType":"ExpressionStatement","src":"30005:11:30"}]}}]},{"expression":{"id":6956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"30057:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6837,"id":6957,"nodeType":"Return","src":"30050:13:30"}]},"documentation":{"id":6831,"nodeType":"StructuredDocumentation","src":"29029:120:30","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6959,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:30","nodeType":"FunctionDefinition","parameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6833,"mutability":"mutable","name":"value","nameLocation":"29177:5:30","nodeType":"VariableDeclaration","scope":6959,"src":"29169:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:30"},"returnParameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6959,"src":"29207:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6835,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:30"},"scope":7127,"src":"29154:916:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6992,"nodeType":"Block","src":"30305:177:30","statements":[{"id":6991,"nodeType":"UncheckedBlock","src":"30315:161:30","statements":[{"assignments":[6971],"declarations":[{"constant":false,"id":6971,"mutability":"mutable","name":"result","nameLocation":"30347:6:30","nodeType":"VariableDeclaration","scope":6991,"src":"30339:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6970,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6975,"initialValue":{"arguments":[{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"30362:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6972,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6959,6993],"referencedDeclaration":6959,"src":"30356:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"30389:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6980,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"30431:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}],"id":6979,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"30414:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5518_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"30450:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"30459:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6977,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"30398:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"30398:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6969,"id":6990,"nodeType":"Return","src":"30382:83:30"}]}]},"documentation":{"id":6960,"nodeType":"StructuredDocumentation","src":"30076:143:30","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6993,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:30","nodeType":"FunctionDefinition","parameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"value","nameLocation":"30247:5:30","nodeType":"VariableDeclaration","scope":6993,"src":"30239:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6961,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6965,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:30","nodeType":"VariableDeclaration","scope":6993,"src":"30254:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"},"typeName":{"id":6964,"nodeType":"UserDefinedTypeName","pathNode":{"id":6963,"name":"Rounding","nameLocations":["30254:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"30254:8:30"},"referencedDeclaration":5518,"src":"30254:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:30"},"returnParameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6993,"src":"30296:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6967,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:30"},"scope":7127,"src":"30224:258:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7069,"nodeType":"Block","src":"30800:675:30","statements":[{"expression":{"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"30882:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7004,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"30902:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7002,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"30886:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"30886:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:30","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7011,"nodeType":"ExpressionStatement","src":"30882:64:30"},{"expression":{"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7012,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31022:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7015,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31044:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7016,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31049:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"31027:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"31027:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:30","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7025,"nodeType":"ExpressionStatement","src":"31022:56:30"},{"expression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7026,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31153:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7029,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31175:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7030,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31180:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7027,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"31158:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"31158:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7039,"nodeType":"ExpressionStatement","src":"31153:48:30"},{"expression":{"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7040,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31276:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31298:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7044,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31303:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:30","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7041,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"31281:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"31281:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7053,"nodeType":"ExpressionStatement","src":"31276:44:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7054,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31426:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7060,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31453:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7061,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"31458:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7058,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"31436:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"31436:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7000,"id":7068,"nodeType":"Return","src":"31418:50:30"}]},"documentation":{"id":6994,"nodeType":"StructuredDocumentation","src":"30488:246:30","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7070,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:30","nodeType":"FunctionDefinition","parameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"x","nameLocation":"30763:1:30","nodeType":"VariableDeclaration","scope":7070,"src":"30755:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:30"},"returnParameters":{"id":7000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6999,"mutability":"mutable","name":"r","nameLocation":"30797:1:30","nodeType":"VariableDeclaration","scope":7070,"src":"30789:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6998,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:30"},"scope":7127,"src":"30739:736:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7106,"nodeType":"Block","src":"31712:184:30","statements":[{"id":7105,"nodeType":"UncheckedBlock","src":"31722:168:30","statements":[{"assignments":[7082],"declarations":[{"constant":false,"id":7082,"mutability":"mutable","name":"result","nameLocation":"31754:6:30","nodeType":"VariableDeclaration","scope":7105,"src":"31746:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7086,"initialValue":{"arguments":[{"id":7084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"31770:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7083,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7070,7107],"referencedDeclaration":7070,"src":"31763:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"31797:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7091,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"31839:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}],"id":7090,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"31822:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5518_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"31858:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"31873:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7088,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"31806:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"31806:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7080,"id":7104,"nodeType":"Return","src":"31790:89:30"}]}]},"documentation":{"id":7071,"nodeType":"StructuredDocumentation","src":"31481:144:30","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7107,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:30","nodeType":"FunctionDefinition","parameters":{"id":7077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7073,"mutability":"mutable","name":"value","nameLocation":"31654:5:30","nodeType":"VariableDeclaration","scope":7107,"src":"31646:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7072,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:30","nodeType":"VariableDeclaration","scope":7107,"src":"31661:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"},"typeName":{"id":7075,"nodeType":"UserDefinedTypeName","pathNode":{"id":7074,"name":"Rounding","nameLocations":["31661:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"31661:8:30"},"referencedDeclaration":5518,"src":"31661:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:30"},"returnParameters":{"id":7080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7107,"src":"31703:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7078,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:30"},"scope":7127,"src":"31630:266:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7125,"nodeType":"Block","src":"32094:48:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7118,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"32117:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}],"id":7117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7116,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:30","typeDescriptions":{}}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7115,"id":7124,"nodeType":"Return","src":"32104:31:30"}]},"documentation":{"id":7108,"nodeType":"StructuredDocumentation","src":"31902:113:30","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7126,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:30","nodeType":"FunctionDefinition","parameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:30","nodeType":"VariableDeclaration","scope":7126,"src":"32046:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"},"typeName":{"id":7110,"nodeType":"UserDefinedTypeName","pathNode":{"id":7109,"name":"Rounding","nameLocations":["32046:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"32046:8:30"},"referencedDeclaration":5518,"src":"32046:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5518","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:30"},"returnParameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7126,"src":"32088:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7113,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:30"},"scope":7127,"src":"32020:122:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7128,"src":"281:31863:30","usedErrors":[],"usedEvents":[]}],"src":"103:32042:30"},"id":30},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8892]},"id":8893,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7129,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:31"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7130,"nodeType":"StructuredDocumentation","src":"218:550:31","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8892,"linearizedBaseContracts":[8892],"name":"SafeCast","nameLocation":"777:8:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7131,"nodeType":"StructuredDocumentation","src":"792:68:31","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7137,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:31","nodeType":"ErrorDefinition","parameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"mutability":"mutable","name":"bits","nameLocation":"908:4:31","nodeType":"VariableDeclaration","scope":7137,"src":"902:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7132,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7135,"mutability":"mutable","name":"value","nameLocation":"922:5:31","nodeType":"VariableDeclaration","scope":7137,"src":"914:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7134,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:31"},"src":"865:64:31"},{"documentation":{"id":7138,"nodeType":"StructuredDocumentation","src":"935:75:31","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7142,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:31","nodeType":"ErrorDefinition","parameters":{"id":7141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"value","nameLocation":"1056:5:31","nodeType":"VariableDeclaration","scope":7142,"src":"1049:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7139,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:31"},"src":"1015:48:31"},{"documentation":{"id":7143,"nodeType":"StructuredDocumentation","src":"1069:67:31","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7149,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:31","nodeType":"ErrorDefinition","parameters":{"id":7148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7145,"mutability":"mutable","name":"bits","nameLocation":"1183:4:31","nodeType":"VariableDeclaration","scope":7149,"src":"1177:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7144,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7147,"mutability":"mutable","name":"value","nameLocation":"1196:5:31","nodeType":"VariableDeclaration","scope":7149,"src":"1189:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7146,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:31"},"src":"1141:62:31"},{"documentation":{"id":7150,"nodeType":"StructuredDocumentation","src":"1209:75:31","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7154,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:31","nodeType":"ErrorDefinition","parameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"value","nameLocation":"1331:5:31","nodeType":"VariableDeclaration","scope":7154,"src":"1323:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:31"},"src":"1289:49:31"},{"body":{"id":7181,"nodeType":"Block","src":"1695:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"1709:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7164,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7163,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:31","memberName":"max","nodeType":"MemberAccess","src":"1717:17:31","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7175,"nodeType":"IfStatement","src":"1705:105:31","trueBody":{"id":7174,"nodeType":"Block","src":"1736:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:31","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"1793:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7169,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1757:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7173,"nodeType":"RevertStatement","src":"1750:49:31"}]}},{"expression":{"arguments":[{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"1834:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7176,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:31","typeDescriptions":{}}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7161,"id":7180,"nodeType":"Return","src":"1819:21:31"}]},"documentation":{"id":7155,"nodeType":"StructuredDocumentation","src":"1344:280:31","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7182,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:31","nodeType":"FunctionDefinition","parameters":{"id":7158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7157,"mutability":"mutable","name":"value","nameLocation":"1656:5:31","nodeType":"VariableDeclaration","scope":7182,"src":"1648:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:31"},"returnParameters":{"id":7161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7182,"src":"1686:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7159,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:31","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:31"},"scope":8892,"src":"1629:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7209,"nodeType":"Block","src":"2204:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"2218:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7192,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7191,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:31","memberName":"max","nodeType":"MemberAccess","src":"2226:17:31","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7203,"nodeType":"IfStatement","src":"2214:105:31","trueBody":{"id":7202,"nodeType":"Block","src":"2245:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:31","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"2302:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7197,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"2266:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7201,"nodeType":"RevertStatement","src":"2259:49:31"}]}},{"expression":{"arguments":[{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"2343:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7204,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:31","typeDescriptions":{}}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7189,"id":7208,"nodeType":"Return","src":"2328:21:31"}]},"documentation":{"id":7183,"nodeType":"StructuredDocumentation","src":"1853:280:31","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7210,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:31","nodeType":"FunctionDefinition","parameters":{"id":7186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7185,"mutability":"mutable","name":"value","nameLocation":"2165:5:31","nodeType":"VariableDeclaration","scope":7210,"src":"2157:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:31"},"returnParameters":{"id":7189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7210,"src":"2195:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7187,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:31","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:31"},"scope":8892,"src":"2138:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7237,"nodeType":"Block","src":"2713:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"2727:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7220,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7219,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:31","memberName":"max","nodeType":"MemberAccess","src":"2735:17:31","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7231,"nodeType":"IfStatement","src":"2723:105:31","trueBody":{"id":7230,"nodeType":"Block","src":"2754:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:31","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"2811:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7225,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"2775:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7229,"nodeType":"RevertStatement","src":"2768:49:31"}]}},{"expression":{"arguments":[{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"2852:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7232,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:31","typeDescriptions":{}}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7217,"id":7236,"nodeType":"Return","src":"2837:21:31"}]},"documentation":{"id":7211,"nodeType":"StructuredDocumentation","src":"2362:280:31","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7238,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:31","nodeType":"FunctionDefinition","parameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"value","nameLocation":"2674:5:31","nodeType":"VariableDeclaration","scope":7238,"src":"2666:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:31"},"returnParameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7238,"src":"2704:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7215,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:31","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:31"},"scope":8892,"src":"2647:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7265,"nodeType":"Block","src":"3222:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3236:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7248,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7247,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:31","memberName":"max","nodeType":"MemberAccess","src":"3244:17:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7259,"nodeType":"IfStatement","src":"3232:105:31","trueBody":{"id":7258,"nodeType":"Block","src":"3263:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:31","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3320:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7253,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"3284:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7257,"nodeType":"RevertStatement","src":"3277:49:31"}]}},{"expression":{"arguments":[{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3361:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7260,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:31","typeDescriptions":{}}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7245,"id":7264,"nodeType":"Return","src":"3346:21:31"}]},"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"2871:280:31","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7266,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:31","nodeType":"FunctionDefinition","parameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"value","nameLocation":"3183:5:31","nodeType":"VariableDeclaration","scope":7266,"src":"3175:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:31"},"returnParameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7266,"src":"3213:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7243,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:31"},"scope":8892,"src":"3156:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7293,"nodeType":"Block","src":"3731:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"3745:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7276,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7275,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:31","memberName":"max","nodeType":"MemberAccess","src":"3753:17:31","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7287,"nodeType":"IfStatement","src":"3741:105:31","trueBody":{"id":7286,"nodeType":"Block","src":"3772:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:31","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"3829:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7281,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"3793:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7285,"nodeType":"RevertStatement","src":"3786:49:31"}]}},{"expression":{"arguments":[{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"3870:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7288,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:31","typeDescriptions":{}}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7273,"id":7292,"nodeType":"Return","src":"3855:21:31"}]},"documentation":{"id":7267,"nodeType":"StructuredDocumentation","src":"3380:280:31","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7294,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:31","nodeType":"FunctionDefinition","parameters":{"id":7270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7269,"mutability":"mutable","name":"value","nameLocation":"3692:5:31","nodeType":"VariableDeclaration","scope":7294,"src":"3684:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:31"},"returnParameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7294,"src":"3722:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7271,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:31","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:31"},"scope":8892,"src":"3665:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7321,"nodeType":"Block","src":"4240:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"4254:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7304,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7303,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:31","memberName":"max","nodeType":"MemberAccess","src":"4262:17:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7315,"nodeType":"IfStatement","src":"4250:105:31","trueBody":{"id":7314,"nodeType":"Block","src":"4281:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:31","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"4338:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7309,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"4302:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7313,"nodeType":"RevertStatement","src":"4295:49:31"}]}},{"expression":{"arguments":[{"id":7318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"4379:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7316,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:31","typeDescriptions":{}}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7301,"id":7320,"nodeType":"Return","src":"4364:21:31"}]},"documentation":{"id":7295,"nodeType":"StructuredDocumentation","src":"3889:280:31","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7322,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:31","nodeType":"FunctionDefinition","parameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"value","nameLocation":"4201:5:31","nodeType":"VariableDeclaration","scope":7322,"src":"4193:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:31"},"returnParameters":{"id":7301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7322,"src":"4231:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7299,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:31"},"scope":8892,"src":"4174:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7349,"nodeType":"Block","src":"4749:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"4763:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7332,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7331,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:31","memberName":"max","nodeType":"MemberAccess","src":"4771:17:31","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7343,"nodeType":"IfStatement","src":"4759:105:31","trueBody":{"id":7342,"nodeType":"Block","src":"4790:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:31","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"4847:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7337,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"4811:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7341,"nodeType":"RevertStatement","src":"4804:49:31"}]}},{"expression":{"arguments":[{"id":7346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"4888:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7344,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:31","typeDescriptions":{}}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7329,"id":7348,"nodeType":"Return","src":"4873:21:31"}]},"documentation":{"id":7323,"nodeType":"StructuredDocumentation","src":"4398:280:31","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7350,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:31","nodeType":"FunctionDefinition","parameters":{"id":7326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7325,"mutability":"mutable","name":"value","nameLocation":"4710:5:31","nodeType":"VariableDeclaration","scope":7350,"src":"4702:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7324,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:31"},"returnParameters":{"id":7329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7350,"src":"4740:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7327,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:31","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:31"},"scope":8892,"src":"4683:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7377,"nodeType":"Block","src":"5258:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"5272:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7360,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:31","memberName":"max","nodeType":"MemberAccess","src":"5280:17:31","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7371,"nodeType":"IfStatement","src":"5268:105:31","trueBody":{"id":7370,"nodeType":"Block","src":"5299:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:31","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"5356:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7365,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"5320:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7369,"nodeType":"RevertStatement","src":"5313:49:31"}]}},{"expression":{"arguments":[{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"5397:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7372,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:31","typeDescriptions":{}}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7357,"id":7376,"nodeType":"Return","src":"5382:21:31"}]},"documentation":{"id":7351,"nodeType":"StructuredDocumentation","src":"4907:280:31","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7378,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:31","nodeType":"FunctionDefinition","parameters":{"id":7354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7353,"mutability":"mutable","name":"value","nameLocation":"5219:5:31","nodeType":"VariableDeclaration","scope":7378,"src":"5211:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7352,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:31"},"returnParameters":{"id":7357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7378,"src":"5249:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7355,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:31","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:31"},"scope":8892,"src":"5192:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7405,"nodeType":"Block","src":"5767:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"5781:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7388,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7387,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:31","memberName":"max","nodeType":"MemberAccess","src":"5789:17:31","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7399,"nodeType":"IfStatement","src":"5777:105:31","trueBody":{"id":7398,"nodeType":"Block","src":"5808:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:31","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"5865:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7393,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"5829:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7397,"nodeType":"RevertStatement","src":"5822:49:31"}]}},{"expression":{"arguments":[{"id":7402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"5906:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7400,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:31","typeDescriptions":{}}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7385,"id":7404,"nodeType":"Return","src":"5891:21:31"}]},"documentation":{"id":7379,"nodeType":"StructuredDocumentation","src":"5416:280:31","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7406,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:31","nodeType":"FunctionDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"value","nameLocation":"5728:5:31","nodeType":"VariableDeclaration","scope":7406,"src":"5720:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:31"},"returnParameters":{"id":7385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7406,"src":"5758:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7383,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:31","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:31"},"scope":8892,"src":"5701:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7433,"nodeType":"Block","src":"6276:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"6290:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7416,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7415,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:31","memberName":"max","nodeType":"MemberAccess","src":"6298:17:31","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7427,"nodeType":"IfStatement","src":"6286:105:31","trueBody":{"id":7426,"nodeType":"Block","src":"6317:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:31","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"6374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7421,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"6338:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7425,"nodeType":"RevertStatement","src":"6331:49:31"}]}},{"expression":{"arguments":[{"id":7430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"6415:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7428,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:31","typeDescriptions":{}}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7413,"id":7432,"nodeType":"Return","src":"6400:21:31"}]},"documentation":{"id":7407,"nodeType":"StructuredDocumentation","src":"5925:280:31","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7434,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:31","nodeType":"FunctionDefinition","parameters":{"id":7410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7409,"mutability":"mutable","name":"value","nameLocation":"6237:5:31","nodeType":"VariableDeclaration","scope":7434,"src":"6229:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7408,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:31"},"returnParameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7434,"src":"6267:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7411,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:31","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:31"},"scope":8892,"src":"6210:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7461,"nodeType":"Block","src":"6785:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"6799:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7444,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:31","memberName":"max","nodeType":"MemberAccess","src":"6807:17:31","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7455,"nodeType":"IfStatement","src":"6795:105:31","trueBody":{"id":7454,"nodeType":"Block","src":"6826:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:31","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"6883:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7449,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"6847:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7453,"nodeType":"RevertStatement","src":"6840:49:31"}]}},{"expression":{"arguments":[{"id":7458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"6924:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7456,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:31","typeDescriptions":{}}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7441,"id":7460,"nodeType":"Return","src":"6909:21:31"}]},"documentation":{"id":7435,"nodeType":"StructuredDocumentation","src":"6434:280:31","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7462,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:31","nodeType":"FunctionDefinition","parameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"value","nameLocation":"6746:5:31","nodeType":"VariableDeclaration","scope":7462,"src":"6738:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:31"},"returnParameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7462,"src":"6776:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7439,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:31","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:31"},"scope":8892,"src":"6719:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7489,"nodeType":"Block","src":"7294:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"7308:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7472,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7471,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:31","memberName":"max","nodeType":"MemberAccess","src":"7316:17:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7483,"nodeType":"IfStatement","src":"7304:105:31","trueBody":{"id":7482,"nodeType":"Block","src":"7335:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:31","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"7392:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7477,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"7356:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7481,"nodeType":"RevertStatement","src":"7349:49:31"}]}},{"expression":{"arguments":[{"id":7486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"7433:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7484,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:31","typeDescriptions":{}}},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7469,"id":7488,"nodeType":"Return","src":"7418:21:31"}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"6943:280:31","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7490,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:31","nodeType":"FunctionDefinition","parameters":{"id":7466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7465,"mutability":"mutable","name":"value","nameLocation":"7255:5:31","nodeType":"VariableDeclaration","scope":7490,"src":"7247:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7464,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:31"},"returnParameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7490,"src":"7285:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7467,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:31"},"scope":8892,"src":"7228:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7517,"nodeType":"Block","src":"7803:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"7817:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7500,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7499,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:31","memberName":"max","nodeType":"MemberAccess","src":"7825:17:31","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7511,"nodeType":"IfStatement","src":"7813:105:31","trueBody":{"id":7510,"nodeType":"Block","src":"7844:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:31","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"7901:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7505,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"7865:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7509,"nodeType":"RevertStatement","src":"7858:49:31"}]}},{"expression":{"arguments":[{"id":7514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"7942:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7512,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:31","typeDescriptions":{}}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7497,"id":7516,"nodeType":"Return","src":"7927:21:31"}]},"documentation":{"id":7491,"nodeType":"StructuredDocumentation","src":"7452:280:31","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7518,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:31","nodeType":"FunctionDefinition","parameters":{"id":7494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7493,"mutability":"mutable","name":"value","nameLocation":"7764:5:31","nodeType":"VariableDeclaration","scope":7518,"src":"7756:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7492,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:31"},"returnParameters":{"id":7497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7518,"src":"7794:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7495,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:31","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:31"},"scope":8892,"src":"7737:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7545,"nodeType":"Block","src":"8312:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"8326:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7528,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:31","memberName":"max","nodeType":"MemberAccess","src":"8334:17:31","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7539,"nodeType":"IfStatement","src":"8322:105:31","trueBody":{"id":7538,"nodeType":"Block","src":"8353:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:31","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"8410:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7533,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"8374:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7537,"nodeType":"RevertStatement","src":"8367:49:31"}]}},{"expression":{"arguments":[{"id":7542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"8451:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7540,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:31","typeDescriptions":{}}},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7525,"id":7544,"nodeType":"Return","src":"8436:21:31"}]},"documentation":{"id":7519,"nodeType":"StructuredDocumentation","src":"7961:280:31","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7546,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:31","nodeType":"FunctionDefinition","parameters":{"id":7522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7521,"mutability":"mutable","name":"value","nameLocation":"8273:5:31","nodeType":"VariableDeclaration","scope":7546,"src":"8265:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7520,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:31"},"returnParameters":{"id":7525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7546,"src":"8303:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7523,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:31","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:31"},"scope":8892,"src":"8246:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7573,"nodeType":"Block","src":"8821:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"8835:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7556,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7555,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:31","memberName":"max","nodeType":"MemberAccess","src":"8843:17:31","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7567,"nodeType":"IfStatement","src":"8831:105:31","trueBody":{"id":7566,"nodeType":"Block","src":"8862:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:31","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"8919:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7561,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"8883:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7565,"nodeType":"RevertStatement","src":"8876:49:31"}]}},{"expression":{"arguments":[{"id":7570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"8960:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7568,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:31","typeDescriptions":{}}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7553,"id":7572,"nodeType":"Return","src":"8945:21:31"}]},"documentation":{"id":7547,"nodeType":"StructuredDocumentation","src":"8470:280:31","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7574,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:31","nodeType":"FunctionDefinition","parameters":{"id":7550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7549,"mutability":"mutable","name":"value","nameLocation":"8782:5:31","nodeType":"VariableDeclaration","scope":7574,"src":"8774:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7548,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:31"},"returnParameters":{"id":7553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7574,"src":"8812:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7551,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:31","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:31"},"scope":8892,"src":"8755:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7601,"nodeType":"Block","src":"9330:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"9344:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7584,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:31","memberName":"max","nodeType":"MemberAccess","src":"9352:17:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7595,"nodeType":"IfStatement","src":"9340:105:31","trueBody":{"id":7594,"nodeType":"Block","src":"9371:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"9428:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7589,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"9392:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7593,"nodeType":"RevertStatement","src":"9385:49:31"}]}},{"expression":{"arguments":[{"id":7598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"9469:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7596,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:31","typeDescriptions":{}}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7581,"id":7600,"nodeType":"Return","src":"9454:21:31"}]},"documentation":{"id":7575,"nodeType":"StructuredDocumentation","src":"8979:280:31","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7602,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:31","nodeType":"FunctionDefinition","parameters":{"id":7578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"mutability":"mutable","name":"value","nameLocation":"9291:5:31","nodeType":"VariableDeclaration","scope":7602,"src":"9283:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7576,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:31"},"returnParameters":{"id":7581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7602,"src":"9321:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7579,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:31"},"scope":8892,"src":"9264:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7629,"nodeType":"Block","src":"9839:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"9853:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7612,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7611,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:31","memberName":"max","nodeType":"MemberAccess","src":"9861:17:31","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7623,"nodeType":"IfStatement","src":"9849:105:31","trueBody":{"id":7622,"nodeType":"Block","src":"9880:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:31","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"9937:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7617,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"9901:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7621,"nodeType":"RevertStatement","src":"9894:49:31"}]}},{"expression":{"arguments":[{"id":7626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"9978:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7624,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:31","typeDescriptions":{}}},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7609,"id":7628,"nodeType":"Return","src":"9963:21:31"}]},"documentation":{"id":7603,"nodeType":"StructuredDocumentation","src":"9488:280:31","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7630,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:31","nodeType":"FunctionDefinition","parameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"value","nameLocation":"9800:5:31","nodeType":"VariableDeclaration","scope":7630,"src":"9792:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7604,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:31"},"returnParameters":{"id":7609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7630,"src":"9830:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7607,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:31","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:31"},"scope":8892,"src":"9773:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7657,"nodeType":"Block","src":"10348:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"10362:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7640,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:31","memberName":"max","nodeType":"MemberAccess","src":"10370:17:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7651,"nodeType":"IfStatement","src":"10358:105:31","trueBody":{"id":7650,"nodeType":"Block","src":"10389:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:31","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"10446:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7645,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"10410:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7649,"nodeType":"RevertStatement","src":"10403:49:31"}]}},{"expression":{"arguments":[{"id":7654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"10487:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7652,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:31","typeDescriptions":{}}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7637,"id":7656,"nodeType":"Return","src":"10472:21:31"}]},"documentation":{"id":7631,"nodeType":"StructuredDocumentation","src":"9997:280:31","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7658,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:31","nodeType":"FunctionDefinition","parameters":{"id":7634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7633,"mutability":"mutable","name":"value","nameLocation":"10309:5:31","nodeType":"VariableDeclaration","scope":7658,"src":"10301:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7632,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:31"},"returnParameters":{"id":7637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7658,"src":"10339:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7635,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:31"},"scope":8892,"src":"10282:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7685,"nodeType":"Block","src":"10857:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"10871:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7668,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7667,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:31","memberName":"max","nodeType":"MemberAccess","src":"10879:17:31","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7679,"nodeType":"IfStatement","src":"10867:105:31","trueBody":{"id":7678,"nodeType":"Block","src":"10898:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:31","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"10955:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7673,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"10919:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7677,"nodeType":"RevertStatement","src":"10912:49:31"}]}},{"expression":{"arguments":[{"id":7682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"10996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7680,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:31","typeDescriptions":{}}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7665,"id":7684,"nodeType":"Return","src":"10981:21:31"}]},"documentation":{"id":7659,"nodeType":"StructuredDocumentation","src":"10506:280:31","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7686,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:31","nodeType":"FunctionDefinition","parameters":{"id":7662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7661,"mutability":"mutable","name":"value","nameLocation":"10818:5:31","nodeType":"VariableDeclaration","scope":7686,"src":"10810:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7660,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:31"},"returnParameters":{"id":7665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7686,"src":"10848:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7663,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:31","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:31"},"scope":8892,"src":"10791:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7713,"nodeType":"Block","src":"11360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"11374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7696,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7695,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:31","memberName":"max","nodeType":"MemberAccess","src":"11382:16:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7707,"nodeType":"IfStatement","src":"11370:103:31","trueBody":{"id":7706,"nodeType":"Block","src":"11400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"11456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7701,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"11421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7705,"nodeType":"RevertStatement","src":"11414:48:31"}]}},{"expression":{"arguments":[{"id":7710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"11496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7708,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:31","typeDescriptions":{}}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7693,"id":7712,"nodeType":"Return","src":"11482:20:31"}]},"documentation":{"id":7687,"nodeType":"StructuredDocumentation","src":"11015:276:31","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7714,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7689,"mutability":"mutable","name":"value","nameLocation":"11322:5:31","nodeType":"VariableDeclaration","scope":7714,"src":"11314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7688,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:31"},"returnParameters":{"id":7693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7714,"src":"11352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7691,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:31"},"scope":8892,"src":"11296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7741,"nodeType":"Block","src":"11860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"11874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7724,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:31","memberName":"max","nodeType":"MemberAccess","src":"11882:16:31","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7735,"nodeType":"IfStatement","src":"11870:103:31","trueBody":{"id":7734,"nodeType":"Block","src":"11900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"11956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7729,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"11921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7733,"nodeType":"RevertStatement","src":"11914:48:31"}]}},{"expression":{"arguments":[{"id":7738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"11996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7736,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:31","typeDescriptions":{}}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7721,"id":7740,"nodeType":"Return","src":"11982:20:31"}]},"documentation":{"id":7715,"nodeType":"StructuredDocumentation","src":"11515:276:31","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7717,"mutability":"mutable","name":"value","nameLocation":"11822:5:31","nodeType":"VariableDeclaration","scope":7742,"src":"11814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7716,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:31"},"returnParameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7742,"src":"11852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7719,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:31","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:31"},"scope":8892,"src":"11796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7769,"nodeType":"Block","src":"12360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"12374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7752,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:31","memberName":"max","nodeType":"MemberAccess","src":"12382:16:31","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7763,"nodeType":"IfStatement","src":"12370:103:31","trueBody":{"id":7762,"nodeType":"Block","src":"12400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"12456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7757,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"12421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7761,"nodeType":"RevertStatement","src":"12414:48:31"}]}},{"expression":{"arguments":[{"id":7766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"12496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7764,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:31","typeDescriptions":{}}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7749,"id":7768,"nodeType":"Return","src":"12482:20:31"}]},"documentation":{"id":7743,"nodeType":"StructuredDocumentation","src":"12015:276:31","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7770,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7745,"mutability":"mutable","name":"value","nameLocation":"12322:5:31","nodeType":"VariableDeclaration","scope":7770,"src":"12314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7744,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:31"},"returnParameters":{"id":7749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7770,"src":"12352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7747,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:31","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:31"},"scope":8892,"src":"12296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7797,"nodeType":"Block","src":"12860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"12874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7780,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:31","memberName":"max","nodeType":"MemberAccess","src":"12882:16:31","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7791,"nodeType":"IfStatement","src":"12870:103:31","trueBody":{"id":7790,"nodeType":"Block","src":"12900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"12956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7785,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"12921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7789,"nodeType":"RevertStatement","src":"12914:48:31"}]}},{"expression":{"arguments":[{"id":7794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"12996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7792,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:31","typeDescriptions":{}}},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7777,"id":7796,"nodeType":"Return","src":"12982:20:31"}]},"documentation":{"id":7771,"nodeType":"StructuredDocumentation","src":"12515:276:31","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7798,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7773,"mutability":"mutable","name":"value","nameLocation":"12822:5:31","nodeType":"VariableDeclaration","scope":7798,"src":"12814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7772,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:31"},"returnParameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7798,"src":"12852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7775,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:31","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:31"},"scope":8892,"src":"12796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7825,"nodeType":"Block","src":"13360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"13374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7808,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:31","memberName":"max","nodeType":"MemberAccess","src":"13382:16:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7819,"nodeType":"IfStatement","src":"13370:103:31","trueBody":{"id":7818,"nodeType":"Block","src":"13400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"13456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7813,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7817,"nodeType":"RevertStatement","src":"13414:48:31"}]}},{"expression":{"arguments":[{"id":7822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"13496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7820,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:31","typeDescriptions":{}}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7805,"id":7824,"nodeType":"Return","src":"13482:20:31"}]},"documentation":{"id":7799,"nodeType":"StructuredDocumentation","src":"13015:276:31","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7826,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7801,"mutability":"mutable","name":"value","nameLocation":"13322:5:31","nodeType":"VariableDeclaration","scope":7826,"src":"13314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7800,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:31"},"returnParameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7826,"src":"13352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7803,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:31"},"scope":8892,"src":"13296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7853,"nodeType":"Block","src":"13860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"13874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7836,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:31","memberName":"max","nodeType":"MemberAccess","src":"13882:16:31","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7847,"nodeType":"IfStatement","src":"13870:103:31","trueBody":{"id":7846,"nodeType":"Block","src":"13900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"13956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7841,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7845,"nodeType":"RevertStatement","src":"13914:48:31"}]}},{"expression":{"arguments":[{"id":7850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"13996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7848,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:31","typeDescriptions":{}}},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7833,"id":7852,"nodeType":"Return","src":"13982:20:31"}]},"documentation":{"id":7827,"nodeType":"StructuredDocumentation","src":"13515:276:31","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7854,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7829,"mutability":"mutable","name":"value","nameLocation":"13822:5:31","nodeType":"VariableDeclaration","scope":7854,"src":"13814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7828,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:31"},"returnParameters":{"id":7833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7854,"src":"13852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7831,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:31","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:31"},"scope":8892,"src":"13796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7881,"nodeType":"Block","src":"14360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"14374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7864,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7863,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:31","memberName":"max","nodeType":"MemberAccess","src":"14382:16:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7875,"nodeType":"IfStatement","src":"14370:103:31","trueBody":{"id":7874,"nodeType":"Block","src":"14400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"14456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7869,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"14421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7873,"nodeType":"RevertStatement","src":"14414:48:31"}]}},{"expression":{"arguments":[{"id":7878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"14496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7876,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:31","typeDescriptions":{}}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7861,"id":7880,"nodeType":"Return","src":"14482:20:31"}]},"documentation":{"id":7855,"nodeType":"StructuredDocumentation","src":"14015:276:31","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7882,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"value","nameLocation":"14322:5:31","nodeType":"VariableDeclaration","scope":7882,"src":"14314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7856,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:31"},"returnParameters":{"id":7861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7882,"src":"14352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7859,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:31"},"scope":8892,"src":"14296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7909,"nodeType":"Block","src":"14860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"14874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7892,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:31","memberName":"max","nodeType":"MemberAccess","src":"14882:16:31","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7903,"nodeType":"IfStatement","src":"14870:103:31","trueBody":{"id":7902,"nodeType":"Block","src":"14900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"14956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7897,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"14921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7901,"nodeType":"RevertStatement","src":"14914:48:31"}]}},{"expression":{"arguments":[{"id":7906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"14996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7904,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:31","typeDescriptions":{}}},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7889,"id":7908,"nodeType":"Return","src":"14982:20:31"}]},"documentation":{"id":7883,"nodeType":"StructuredDocumentation","src":"14515:276:31","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7885,"mutability":"mutable","name":"value","nameLocation":"14822:5:31","nodeType":"VariableDeclaration","scope":7910,"src":"14814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7884,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:31"},"returnParameters":{"id":7889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7910,"src":"14852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7887,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:31","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:31"},"scope":8892,"src":"14796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7937,"nodeType":"Block","src":"15360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"15374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7920,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:31","memberName":"max","nodeType":"MemberAccess","src":"15382:16:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7931,"nodeType":"IfStatement","src":"15370:103:31","trueBody":{"id":7930,"nodeType":"Block","src":"15400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"15456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7925,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"15421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7929,"nodeType":"RevertStatement","src":"15414:48:31"}]}},{"expression":{"arguments":[{"id":7934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"15496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7932,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:31","typeDescriptions":{}}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7917,"id":7936,"nodeType":"Return","src":"15482:20:31"}]},"documentation":{"id":7911,"nodeType":"StructuredDocumentation","src":"15015:276:31","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"value","nameLocation":"15322:5:31","nodeType":"VariableDeclaration","scope":7938,"src":"15314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7912,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:31"},"returnParameters":{"id":7917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7938,"src":"15352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7915,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:31"},"scope":8892,"src":"15296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7965,"nodeType":"Block","src":"15860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"15874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7948,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7947,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:31","memberName":"max","nodeType":"MemberAccess","src":"15882:16:31","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7959,"nodeType":"IfStatement","src":"15870:103:31","trueBody":{"id":7958,"nodeType":"Block","src":"15900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"15956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7953,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"15921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7957,"nodeType":"RevertStatement","src":"15914:48:31"}]}},{"expression":{"arguments":[{"id":7962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"15996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7960,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:31","typeDescriptions":{}}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7945,"id":7964,"nodeType":"Return","src":"15982:20:31"}]},"documentation":{"id":7939,"nodeType":"StructuredDocumentation","src":"15515:276:31","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7941,"mutability":"mutable","name":"value","nameLocation":"15822:5:31","nodeType":"VariableDeclaration","scope":7966,"src":"15814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7940,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:31"},"returnParameters":{"id":7945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7966,"src":"15852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7943,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:31","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:31"},"scope":8892,"src":"15796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7993,"nodeType":"Block","src":"16360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"16374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7976,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7975,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:31","memberName":"max","nodeType":"MemberAccess","src":"16382:16:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7987,"nodeType":"IfStatement","src":"16370:103:31","trueBody":{"id":7986,"nodeType":"Block","src":"16400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"16456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7981,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"16421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7985,"nodeType":"RevertStatement","src":"16414:48:31"}]}},{"expression":{"arguments":[{"id":7990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"16496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7988,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:31","typeDescriptions":{}}},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7973,"id":7992,"nodeType":"Return","src":"16482:20:31"}]},"documentation":{"id":7967,"nodeType":"StructuredDocumentation","src":"16015:276:31","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7994,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7969,"mutability":"mutable","name":"value","nameLocation":"16322:5:31","nodeType":"VariableDeclaration","scope":7994,"src":"16314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7968,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:31"},"returnParameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7994,"src":"16352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7971,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:31"},"scope":8892,"src":"16296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8021,"nodeType":"Block","src":"16854:146:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"16868:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8004,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8003,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:31","memberName":"max","nodeType":"MemberAccess","src":"16876:15:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8015,"nodeType":"IfStatement","src":"16864:101:31","trueBody":{"id":8014,"nodeType":"Block","src":"16893:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"16948:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8009,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"16914:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8013,"nodeType":"RevertStatement","src":"16907:47:31"}]}},{"expression":{"arguments":[{"id":8018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"16987:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8016,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:31","typeDescriptions":{}}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8001,"id":8020,"nodeType":"Return","src":"16974:19:31"}]},"documentation":{"id":7995,"nodeType":"StructuredDocumentation","src":"16515:272:31","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8022,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:31","nodeType":"FunctionDefinition","parameters":{"id":7998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7997,"mutability":"mutable","name":"value","nameLocation":"16817:5:31","nodeType":"VariableDeclaration","scope":8022,"src":"16809:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7996,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:31"},"returnParameters":{"id":8001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8022,"src":"16847:5:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7999,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:31"},"scope":8892,"src":"16792:208:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8044,"nodeType":"Block","src":"17236:128:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"17250:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8038,"nodeType":"IfStatement","src":"17246:81:31","trueBody":{"id":8037,"nodeType":"Block","src":"17261:66:31","statements":[{"errorCall":{"arguments":[{"id":8034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"17310:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8033,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"17282:27:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8036,"nodeType":"RevertStatement","src":"17275:41:31"}]}},{"expression":{"arguments":[{"id":8041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"17351:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8039,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:31","typeDescriptions":{}}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8029,"id":8043,"nodeType":"Return","src":"17336:21:31"}]},"documentation":{"id":8023,"nodeType":"StructuredDocumentation","src":"17006:160:31","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8045,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:31","nodeType":"FunctionDefinition","parameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8025,"mutability":"mutable","name":"value","nameLocation":"17197:5:31","nodeType":"VariableDeclaration","scope":8045,"src":"17190:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8024,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:31"},"returnParameters":{"id":8029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8045,"src":"17227:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8027,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:31"},"scope":8892,"src":"17171:193:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8070,"nodeType":"Block","src":"17761:150:31","statements":[{"expression":{"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"17771:10:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"17791:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8054,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:31","typeDescriptions":{}}},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8059,"nodeType":"ExpressionStatement","src":"17771:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"17811:10:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"17825:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8069,"nodeType":"IfStatement","src":"17807:98:31","trueBody":{"id":8068,"nodeType":"Block","src":"17832:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:31","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"17888:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8063,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"17853:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8067,"nodeType":"RevertStatement","src":"17846:48:31"}]}}]},"documentation":{"id":8046,"nodeType":"StructuredDocumentation","src":"17370:312:31","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:31","nodeType":"FunctionDefinition","parameters":{"id":8049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8048,"mutability":"mutable","name":"value","nameLocation":"17712:5:31","nodeType":"VariableDeclaration","scope":8071,"src":"17705:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8047,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:31"},"returnParameters":{"id":8052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8051,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:31","nodeType":"VariableDeclaration","scope":8071,"src":"17742:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8050,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:31"},"scope":8892,"src":"17687:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8096,"nodeType":"Block","src":"18308:150:31","statements":[{"expression":{"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"18318:10:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8074,"src":"18338:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8080,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:31","typeDescriptions":{}}},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8085,"nodeType":"ExpressionStatement","src":"18318:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"18358:10:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8074,"src":"18372:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8095,"nodeType":"IfStatement","src":"18354:98:31","trueBody":{"id":8094,"nodeType":"Block","src":"18379:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:31","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8074,"src":"18435:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8089,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"18400:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8093,"nodeType":"RevertStatement","src":"18393:48:31"}]}}]},"documentation":{"id":8072,"nodeType":"StructuredDocumentation","src":"17917:312:31","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:31","nodeType":"FunctionDefinition","parameters":{"id":8075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8074,"mutability":"mutable","name":"value","nameLocation":"18259:5:31","nodeType":"VariableDeclaration","scope":8097,"src":"18252:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8073,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:31"},"returnParameters":{"id":8078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8077,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:31","nodeType":"VariableDeclaration","scope":8097,"src":"18289:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8076,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:31"},"scope":8892,"src":"18234:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8122,"nodeType":"Block","src":"18855:150:31","statements":[{"expression":{"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"18865:10:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"18885:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8106,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:31","typeDescriptions":{}}},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8111,"nodeType":"ExpressionStatement","src":"18865:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"18905:10:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"18919:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8121,"nodeType":"IfStatement","src":"18901:98:31","trueBody":{"id":8120,"nodeType":"Block","src":"18926:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:31","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"18982:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8115,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"18947:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8119,"nodeType":"RevertStatement","src":"18940:48:31"}]}}]},"documentation":{"id":8098,"nodeType":"StructuredDocumentation","src":"18464:312:31","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8123,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:31","nodeType":"FunctionDefinition","parameters":{"id":8101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8100,"mutability":"mutable","name":"value","nameLocation":"18806:5:31","nodeType":"VariableDeclaration","scope":8123,"src":"18799:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8099,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:31"},"returnParameters":{"id":8104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8103,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:31","nodeType":"VariableDeclaration","scope":8123,"src":"18836:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8102,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:31"},"scope":8892,"src":"18781:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8148,"nodeType":"Block","src":"19402:150:31","statements":[{"expression":{"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"19412:10:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"19432:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8132,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:31","typeDescriptions":{}}},"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8137,"nodeType":"ExpressionStatement","src":"19412:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"19452:10:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"19466:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8147,"nodeType":"IfStatement","src":"19448:98:31","trueBody":{"id":8146,"nodeType":"Block","src":"19473:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:31","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"19529:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8141,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"19494:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8145,"nodeType":"RevertStatement","src":"19487:48:31"}]}}]},"documentation":{"id":8124,"nodeType":"StructuredDocumentation","src":"19011:312:31","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8149,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:31","nodeType":"FunctionDefinition","parameters":{"id":8127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8126,"mutability":"mutable","name":"value","nameLocation":"19353:5:31","nodeType":"VariableDeclaration","scope":8149,"src":"19346:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8125,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:31"},"returnParameters":{"id":8130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8129,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:31","nodeType":"VariableDeclaration","scope":8149,"src":"19383:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8128,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:31"},"scope":8892,"src":"19328:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8174,"nodeType":"Block","src":"19949:150:31","statements":[{"expression":{"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"19959:10:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8152,"src":"19979:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8158,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:31","typeDescriptions":{}}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8163,"nodeType":"ExpressionStatement","src":"19959:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"19999:10:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8152,"src":"20013:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8173,"nodeType":"IfStatement","src":"19995:98:31","trueBody":{"id":8172,"nodeType":"Block","src":"20020:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:31","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8152,"src":"20076:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"20041:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8171,"nodeType":"RevertStatement","src":"20034:48:31"}]}}]},"documentation":{"id":8150,"nodeType":"StructuredDocumentation","src":"19558:312:31","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:31","nodeType":"FunctionDefinition","parameters":{"id":8153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8152,"mutability":"mutable","name":"value","nameLocation":"19900:5:31","nodeType":"VariableDeclaration","scope":8175,"src":"19893:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8151,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:31"},"returnParameters":{"id":8156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8155,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:31","nodeType":"VariableDeclaration","scope":8175,"src":"19930:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8154,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:31"},"scope":8892,"src":"19875:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8200,"nodeType":"Block","src":"20496:150:31","statements":[{"expression":{"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"20506:10:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"20526:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8184,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:31","typeDescriptions":{}}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8189,"nodeType":"ExpressionStatement","src":"20506:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"20546:10:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"20560:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8199,"nodeType":"IfStatement","src":"20542:98:31","trueBody":{"id":8198,"nodeType":"Block","src":"20567:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:31","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"20623:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"20588:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8197,"nodeType":"RevertStatement","src":"20581:48:31"}]}}]},"documentation":{"id":8176,"nodeType":"StructuredDocumentation","src":"20105:312:31","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:31","nodeType":"FunctionDefinition","parameters":{"id":8179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8178,"mutability":"mutable","name":"value","nameLocation":"20447:5:31","nodeType":"VariableDeclaration","scope":8201,"src":"20440:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8177,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:31"},"returnParameters":{"id":8182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8181,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:31","nodeType":"VariableDeclaration","scope":8201,"src":"20477:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8180,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:31"},"scope":8892,"src":"20422:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8226,"nodeType":"Block","src":"21043:150:31","statements":[{"expression":{"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"21053:10:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"21073:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8210,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:31","typeDescriptions":{}}},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8215,"nodeType":"ExpressionStatement","src":"21053:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"21093:10:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"21107:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8225,"nodeType":"IfStatement","src":"21089:98:31","trueBody":{"id":8224,"nodeType":"Block","src":"21114:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:31","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"21170:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"21135:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8223,"nodeType":"RevertStatement","src":"21128:48:31"}]}}]},"documentation":{"id":8202,"nodeType":"StructuredDocumentation","src":"20652:312:31","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:31","nodeType":"FunctionDefinition","parameters":{"id":8205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8204,"mutability":"mutable","name":"value","nameLocation":"20994:5:31","nodeType":"VariableDeclaration","scope":8227,"src":"20987:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8203,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:31"},"returnParameters":{"id":8208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8207,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:31","nodeType":"VariableDeclaration","scope":8227,"src":"21024:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8206,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:31"},"scope":8892,"src":"20969:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8252,"nodeType":"Block","src":"21590:150:31","statements":[{"expression":{"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"21600:10:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"21620:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8236,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:31","typeDescriptions":{}}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8241,"nodeType":"ExpressionStatement","src":"21600:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"21640:10:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"21654:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8251,"nodeType":"IfStatement","src":"21636:98:31","trueBody":{"id":8250,"nodeType":"Block","src":"21661:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:31","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"21717:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"21682:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8249,"nodeType":"RevertStatement","src":"21675:48:31"}]}}]},"documentation":{"id":8228,"nodeType":"StructuredDocumentation","src":"21199:312:31","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:31","nodeType":"FunctionDefinition","parameters":{"id":8231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8230,"mutability":"mutable","name":"value","nameLocation":"21541:5:31","nodeType":"VariableDeclaration","scope":8253,"src":"21534:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8229,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:31"},"returnParameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8233,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:31","nodeType":"VariableDeclaration","scope":8253,"src":"21571:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8232,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:31"},"scope":8892,"src":"21516:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8278,"nodeType":"Block","src":"22137:150:31","statements":[{"expression":{"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"22147:10:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"22167:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8262,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:31","typeDescriptions":{}}},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8267,"nodeType":"ExpressionStatement","src":"22147:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"22187:10:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"22201:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8277,"nodeType":"IfStatement","src":"22183:98:31","trueBody":{"id":8276,"nodeType":"Block","src":"22208:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:31","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"22264:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"22229:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8275,"nodeType":"RevertStatement","src":"22222:48:31"}]}}]},"documentation":{"id":8254,"nodeType":"StructuredDocumentation","src":"21746:312:31","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:31","nodeType":"FunctionDefinition","parameters":{"id":8257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8256,"mutability":"mutable","name":"value","nameLocation":"22088:5:31","nodeType":"VariableDeclaration","scope":8279,"src":"22081:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8255,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:31"},"returnParameters":{"id":8260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8259,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:31","nodeType":"VariableDeclaration","scope":8279,"src":"22118:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8258,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:31"},"scope":8892,"src":"22063:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8304,"nodeType":"Block","src":"22684:150:31","statements":[{"expression":{"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"22694:10:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"22714:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8288,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:31","typeDescriptions":{}}},"id":8291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8293,"nodeType":"ExpressionStatement","src":"22694:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"22734:10:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"22748:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8303,"nodeType":"IfStatement","src":"22730:98:31","trueBody":{"id":8302,"nodeType":"Block","src":"22755:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:31","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"22811:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"22776:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8301,"nodeType":"RevertStatement","src":"22769:48:31"}]}}]},"documentation":{"id":8280,"nodeType":"StructuredDocumentation","src":"22293:312:31","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:31","nodeType":"FunctionDefinition","parameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8282,"mutability":"mutable","name":"value","nameLocation":"22635:5:31","nodeType":"VariableDeclaration","scope":8305,"src":"22628:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8281,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:31"},"returnParameters":{"id":8286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:31","nodeType":"VariableDeclaration","scope":8305,"src":"22665:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8284,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:31"},"scope":8892,"src":"22610:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8330,"nodeType":"Block","src":"23231:150:31","statements":[{"expression":{"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"23241:10:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"23261:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8314,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:31","typeDescriptions":{}}},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8319,"nodeType":"ExpressionStatement","src":"23241:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"23281:10:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"23295:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8329,"nodeType":"IfStatement","src":"23277:98:31","trueBody":{"id":8328,"nodeType":"Block","src":"23302:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:31","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"23358:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"23323:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8327,"nodeType":"RevertStatement","src":"23316:48:31"}]}}]},"documentation":{"id":8306,"nodeType":"StructuredDocumentation","src":"22840:312:31","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:31","nodeType":"FunctionDefinition","parameters":{"id":8309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8308,"mutability":"mutable","name":"value","nameLocation":"23182:5:31","nodeType":"VariableDeclaration","scope":8331,"src":"23175:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8307,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:31"},"returnParameters":{"id":8312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8311,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:31","nodeType":"VariableDeclaration","scope":8331,"src":"23212:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8310,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:31"},"scope":8892,"src":"23157:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8356,"nodeType":"Block","src":"23778:150:31","statements":[{"expression":{"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"23788:10:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"23808:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8340,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:31","typeDescriptions":{}}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8345,"nodeType":"ExpressionStatement","src":"23788:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"23828:10:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"23842:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8355,"nodeType":"IfStatement","src":"23824:98:31","trueBody":{"id":8354,"nodeType":"Block","src":"23849:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:31","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"23905:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"23870:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8353,"nodeType":"RevertStatement","src":"23863:48:31"}]}}]},"documentation":{"id":8332,"nodeType":"StructuredDocumentation","src":"23387:312:31","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:31","nodeType":"FunctionDefinition","parameters":{"id":8335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8334,"mutability":"mutable","name":"value","nameLocation":"23729:5:31","nodeType":"VariableDeclaration","scope":8357,"src":"23722:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8333,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:31"},"returnParameters":{"id":8338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8337,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:31","nodeType":"VariableDeclaration","scope":8357,"src":"23759:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8336,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:31"},"scope":8892,"src":"23704:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8382,"nodeType":"Block","src":"24325:150:31","statements":[{"expression":{"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"24335:10:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8360,"src":"24355:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8366,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:31","typeDescriptions":{}}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8371,"nodeType":"ExpressionStatement","src":"24335:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"24375:10:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8360,"src":"24389:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8381,"nodeType":"IfStatement","src":"24371:98:31","trueBody":{"id":8380,"nodeType":"Block","src":"24396:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:31","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8360,"src":"24452:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"24417:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8379,"nodeType":"RevertStatement","src":"24410:48:31"}]}}]},"documentation":{"id":8358,"nodeType":"StructuredDocumentation","src":"23934:312:31","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:31","nodeType":"FunctionDefinition","parameters":{"id":8361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8360,"mutability":"mutable","name":"value","nameLocation":"24276:5:31","nodeType":"VariableDeclaration","scope":8383,"src":"24269:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8359,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:31"},"returnParameters":{"id":8364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8363,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:31","nodeType":"VariableDeclaration","scope":8383,"src":"24306:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8362,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:31"},"scope":8892,"src":"24251:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8408,"nodeType":"Block","src":"24872:150:31","statements":[{"expression":{"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"24882:10:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"24902:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8392,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:31","typeDescriptions":{}}},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8397,"nodeType":"ExpressionStatement","src":"24882:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"24922:10:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"24936:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8407,"nodeType":"IfStatement","src":"24918:98:31","trueBody":{"id":8406,"nodeType":"Block","src":"24943:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:31","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"24999:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"24964:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8405,"nodeType":"RevertStatement","src":"24957:48:31"}]}}]},"documentation":{"id":8384,"nodeType":"StructuredDocumentation","src":"24481:312:31","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:31","nodeType":"FunctionDefinition","parameters":{"id":8387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8386,"mutability":"mutable","name":"value","nameLocation":"24823:5:31","nodeType":"VariableDeclaration","scope":8409,"src":"24816:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8385,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:31"},"returnParameters":{"id":8390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8389,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:31","nodeType":"VariableDeclaration","scope":8409,"src":"24853:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8388,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:31"},"scope":8892,"src":"24798:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8434,"nodeType":"Block","src":"25419:150:31","statements":[{"expression":{"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"25429:10:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"25449:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8418,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:31","typeDescriptions":{}}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8423,"nodeType":"ExpressionStatement","src":"25429:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"25469:10:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"25483:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8433,"nodeType":"IfStatement","src":"25465:98:31","trueBody":{"id":8432,"nodeType":"Block","src":"25490:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:31","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"25546:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"25511:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8431,"nodeType":"RevertStatement","src":"25504:48:31"}]}}]},"documentation":{"id":8410,"nodeType":"StructuredDocumentation","src":"25028:312:31","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:31","nodeType":"FunctionDefinition","parameters":{"id":8413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8412,"mutability":"mutable","name":"value","nameLocation":"25370:5:31","nodeType":"VariableDeclaration","scope":8435,"src":"25363:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8411,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:31"},"returnParameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:31","nodeType":"VariableDeclaration","scope":8435,"src":"25400:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8414,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:31"},"scope":8892,"src":"25345:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8460,"nodeType":"Block","src":"25966:150:31","statements":[{"expression":{"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"25976:10:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"25996:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8444,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:31","typeDescriptions":{}}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8449,"nodeType":"ExpressionStatement","src":"25976:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"26016:10:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"26030:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8459,"nodeType":"IfStatement","src":"26012:98:31","trueBody":{"id":8458,"nodeType":"Block","src":"26037:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"26093:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"26058:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8457,"nodeType":"RevertStatement","src":"26051:48:31"}]}}]},"documentation":{"id":8436,"nodeType":"StructuredDocumentation","src":"25575:312:31","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:31","nodeType":"FunctionDefinition","parameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8438,"mutability":"mutable","name":"value","nameLocation":"25917:5:31","nodeType":"VariableDeclaration","scope":8461,"src":"25910:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8437,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:31"},"returnParameters":{"id":8442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8441,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:31","nodeType":"VariableDeclaration","scope":8461,"src":"25947:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8440,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:31"},"scope":8892,"src":"25892:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8486,"nodeType":"Block","src":"26513:150:31","statements":[{"expression":{"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"26523:10:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"26543:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8470,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:31","typeDescriptions":{}}},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8475,"nodeType":"ExpressionStatement","src":"26523:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"26563:10:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"26577:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8485,"nodeType":"IfStatement","src":"26559:98:31","trueBody":{"id":8484,"nodeType":"Block","src":"26584:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:31","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"26640:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"26605:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8483,"nodeType":"RevertStatement","src":"26598:48:31"}]}}]},"documentation":{"id":8462,"nodeType":"StructuredDocumentation","src":"26122:312:31","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:31","nodeType":"FunctionDefinition","parameters":{"id":8465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8464,"mutability":"mutable","name":"value","nameLocation":"26464:5:31","nodeType":"VariableDeclaration","scope":8487,"src":"26457:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8463,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:31"},"returnParameters":{"id":8468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8467,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:31","nodeType":"VariableDeclaration","scope":8487,"src":"26494:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8466,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:31"},"scope":8892,"src":"26439:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8512,"nodeType":"Block","src":"27060:150:31","statements":[{"expression":{"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"27070:10:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"27090:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8496,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:31","typeDescriptions":{}}},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8501,"nodeType":"ExpressionStatement","src":"27070:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"27110:10:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"27124:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8511,"nodeType":"IfStatement","src":"27106:98:31","trueBody":{"id":8510,"nodeType":"Block","src":"27131:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:31","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"27187:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"27152:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8509,"nodeType":"RevertStatement","src":"27145:48:31"}]}}]},"documentation":{"id":8488,"nodeType":"StructuredDocumentation","src":"26669:312:31","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:31","nodeType":"FunctionDefinition","parameters":{"id":8491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"value","nameLocation":"27011:5:31","nodeType":"VariableDeclaration","scope":8513,"src":"27004:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8489,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:31"},"returnParameters":{"id":8494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8493,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:31","nodeType":"VariableDeclaration","scope":8513,"src":"27041:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8492,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:31"},"scope":8892,"src":"26986:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8538,"nodeType":"Block","src":"27607:150:31","statements":[{"expression":{"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"27617:10:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8516,"src":"27637:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8522,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:31","typeDescriptions":{}}},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8527,"nodeType":"ExpressionStatement","src":"27617:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"27657:10:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8516,"src":"27671:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8537,"nodeType":"IfStatement","src":"27653:98:31","trueBody":{"id":8536,"nodeType":"Block","src":"27678:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:31","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8516,"src":"27734:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"27699:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8535,"nodeType":"RevertStatement","src":"27692:48:31"}]}}]},"documentation":{"id":8514,"nodeType":"StructuredDocumentation","src":"27216:312:31","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:31","nodeType":"FunctionDefinition","parameters":{"id":8517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8516,"mutability":"mutable","name":"value","nameLocation":"27558:5:31","nodeType":"VariableDeclaration","scope":8539,"src":"27551:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8515,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:31"},"returnParameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8519,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:31","nodeType":"VariableDeclaration","scope":8539,"src":"27588:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8518,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:31"},"scope":8892,"src":"27533:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8564,"nodeType":"Block","src":"28147:148:31","statements":[{"expression":{"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"28157:10:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"28176:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8548,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:31","typeDescriptions":{}}},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8553,"nodeType":"ExpressionStatement","src":"28157:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"28196:10:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"28210:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8563,"nodeType":"IfStatement","src":"28192:97:31","trueBody":{"id":8562,"nodeType":"Block","src":"28217:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:31","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"28272:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"28238:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8561,"nodeType":"RevertStatement","src":"28231:47:31"}]}}]},"documentation":{"id":8540,"nodeType":"StructuredDocumentation","src":"27763:307:31","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:31","nodeType":"FunctionDefinition","parameters":{"id":8543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8542,"mutability":"mutable","name":"value","nameLocation":"28099:5:31","nodeType":"VariableDeclaration","scope":8565,"src":"28092:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8541,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:31"},"returnParameters":{"id":8546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8545,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:31","nodeType":"VariableDeclaration","scope":8565,"src":"28129:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8544,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:31"},"scope":8892,"src":"28075:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8590,"nodeType":"Block","src":"28685:148:31","statements":[{"expression":{"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"28695:10:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8568,"src":"28714:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8574,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:31","typeDescriptions":{}}},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8579,"nodeType":"ExpressionStatement","src":"28695:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"28734:10:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8568,"src":"28748:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8589,"nodeType":"IfStatement","src":"28730:97:31","trueBody":{"id":8588,"nodeType":"Block","src":"28755:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:31","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8568,"src":"28810:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"28776:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8587,"nodeType":"RevertStatement","src":"28769:47:31"}]}}]},"documentation":{"id":8566,"nodeType":"StructuredDocumentation","src":"28301:307:31","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:31","nodeType":"FunctionDefinition","parameters":{"id":8569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8568,"mutability":"mutable","name":"value","nameLocation":"28637:5:31","nodeType":"VariableDeclaration","scope":8591,"src":"28630:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8567,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:31"},"returnParameters":{"id":8572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8571,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:31","nodeType":"VariableDeclaration","scope":8591,"src":"28667:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8570,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:31"},"scope":8892,"src":"28613:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8616,"nodeType":"Block","src":"29223:148:31","statements":[{"expression":{"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"29233:10:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"29252:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8600,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:31","typeDescriptions":{}}},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8605,"nodeType":"ExpressionStatement","src":"29233:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"29272:10:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"29286:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8615,"nodeType":"IfStatement","src":"29268:97:31","trueBody":{"id":8614,"nodeType":"Block","src":"29293:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:31","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"29348:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"29314:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8613,"nodeType":"RevertStatement","src":"29307:47:31"}]}}]},"documentation":{"id":8592,"nodeType":"StructuredDocumentation","src":"28839:307:31","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:31","nodeType":"FunctionDefinition","parameters":{"id":8595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8594,"mutability":"mutable","name":"value","nameLocation":"29175:5:31","nodeType":"VariableDeclaration","scope":8617,"src":"29168:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8593,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:31"},"returnParameters":{"id":8598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8597,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:31","nodeType":"VariableDeclaration","scope":8617,"src":"29205:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8596,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:31"},"scope":8892,"src":"29151:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8642,"nodeType":"Block","src":"29761:148:31","statements":[{"expression":{"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"29771:10:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8620,"src":"29790:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8626,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:31","typeDescriptions":{}}},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8631,"nodeType":"ExpressionStatement","src":"29771:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"29810:10:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8620,"src":"29824:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8641,"nodeType":"IfStatement","src":"29806:97:31","trueBody":{"id":8640,"nodeType":"Block","src":"29831:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:31","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8620,"src":"29886:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"29852:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8639,"nodeType":"RevertStatement","src":"29845:47:31"}]}}]},"documentation":{"id":8618,"nodeType":"StructuredDocumentation","src":"29377:307:31","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:31","nodeType":"FunctionDefinition","parameters":{"id":8621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8620,"mutability":"mutable","name":"value","nameLocation":"29713:5:31","nodeType":"VariableDeclaration","scope":8643,"src":"29706:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8619,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:31"},"returnParameters":{"id":8624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8623,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:31","nodeType":"VariableDeclaration","scope":8643,"src":"29743:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8622,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:31"},"scope":8892,"src":"29689:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8668,"nodeType":"Block","src":"30299:148:31","statements":[{"expression":{"id":8656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"30309:10:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"30328:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8652,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:31","typeDescriptions":{}}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8657,"nodeType":"ExpressionStatement","src":"30309:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"30348:10:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"30362:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8667,"nodeType":"IfStatement","src":"30344:97:31","trueBody":{"id":8666,"nodeType":"Block","src":"30369:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"30424:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"30390:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8665,"nodeType":"RevertStatement","src":"30383:47:31"}]}}]},"documentation":{"id":8644,"nodeType":"StructuredDocumentation","src":"29915:307:31","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:31","nodeType":"FunctionDefinition","parameters":{"id":8647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8646,"mutability":"mutable","name":"value","nameLocation":"30251:5:31","nodeType":"VariableDeclaration","scope":8669,"src":"30244:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8645,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:31"},"returnParameters":{"id":8650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8649,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:31","nodeType":"VariableDeclaration","scope":8669,"src":"30281:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8648,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:31"},"scope":8892,"src":"30227:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8694,"nodeType":"Block","src":"30837:148:31","statements":[{"expression":{"id":8682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"30847:10:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"30866:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8678,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:31","typeDescriptions":{}}},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8683,"nodeType":"ExpressionStatement","src":"30847:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"30886:10:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"30900:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8693,"nodeType":"IfStatement","src":"30882:97:31","trueBody":{"id":8692,"nodeType":"Block","src":"30907:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:31","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"30962:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"30928:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8691,"nodeType":"RevertStatement","src":"30921:47:31"}]}}]},"documentation":{"id":8670,"nodeType":"StructuredDocumentation","src":"30453:307:31","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:31","nodeType":"FunctionDefinition","parameters":{"id":8673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8672,"mutability":"mutable","name":"value","nameLocation":"30789:5:31","nodeType":"VariableDeclaration","scope":8695,"src":"30782:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8671,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:31"},"returnParameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8675,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:31","nodeType":"VariableDeclaration","scope":8695,"src":"30819:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8674,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:31"},"scope":8892,"src":"30765:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8720,"nodeType":"Block","src":"31375:148:31","statements":[{"expression":{"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8701,"src":"31385:10:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"31404:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8704,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:31","typeDescriptions":{}}},"id":8707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8709,"nodeType":"ExpressionStatement","src":"31385:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8701,"src":"31424:10:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"31438:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8719,"nodeType":"IfStatement","src":"31420:97:31","trueBody":{"id":8718,"nodeType":"Block","src":"31445:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:31","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"31500:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"31466:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8717,"nodeType":"RevertStatement","src":"31459:47:31"}]}}]},"documentation":{"id":8696,"nodeType":"StructuredDocumentation","src":"30991:307:31","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:31","nodeType":"FunctionDefinition","parameters":{"id":8699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8698,"mutability":"mutable","name":"value","nameLocation":"31327:5:31","nodeType":"VariableDeclaration","scope":8721,"src":"31320:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8697,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:31"},"returnParameters":{"id":8702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8701,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:31","nodeType":"VariableDeclaration","scope":8721,"src":"31357:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8700,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:31"},"scope":8892,"src":"31303:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8746,"nodeType":"Block","src":"31913:148:31","statements":[{"expression":{"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"31923:10:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"31942:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8730,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:31","typeDescriptions":{}}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8735,"nodeType":"ExpressionStatement","src":"31923:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"31962:10:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"31976:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8745,"nodeType":"IfStatement","src":"31958:97:31","trueBody":{"id":8744,"nodeType":"Block","src":"31983:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:31","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"32038:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"32004:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8743,"nodeType":"RevertStatement","src":"31997:47:31"}]}}]},"documentation":{"id":8722,"nodeType":"StructuredDocumentation","src":"31529:307:31","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:31","nodeType":"FunctionDefinition","parameters":{"id":8725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8724,"mutability":"mutable","name":"value","nameLocation":"31865:5:31","nodeType":"VariableDeclaration","scope":8747,"src":"31858:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8723,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:31"},"returnParameters":{"id":8728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8727,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:31","nodeType":"VariableDeclaration","scope":8747,"src":"31895:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8726,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:31"},"scope":8892,"src":"31841:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8772,"nodeType":"Block","src":"32451:148:31","statements":[{"expression":{"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"32461:10:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"32480:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8756,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:31","typeDescriptions":{}}},"id":8759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8761,"nodeType":"ExpressionStatement","src":"32461:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"32500:10:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"32514:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8771,"nodeType":"IfStatement","src":"32496:97:31","trueBody":{"id":8770,"nodeType":"Block","src":"32521:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"32576:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"32542:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8769,"nodeType":"RevertStatement","src":"32535:47:31"}]}}]},"documentation":{"id":8748,"nodeType":"StructuredDocumentation","src":"32067:307:31","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:31","nodeType":"FunctionDefinition","parameters":{"id":8751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8750,"mutability":"mutable","name":"value","nameLocation":"32403:5:31","nodeType":"VariableDeclaration","scope":8773,"src":"32396:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8749,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:31"},"returnParameters":{"id":8754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8753,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:31","nodeType":"VariableDeclaration","scope":8773,"src":"32433:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8752,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:31"},"scope":8892,"src":"32379:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8798,"nodeType":"Block","src":"32989:148:31","statements":[{"expression":{"id":8786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"32999:10:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"33018:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8782,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:31","typeDescriptions":{}}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8787,"nodeType":"ExpressionStatement","src":"32999:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"33038:10:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"33052:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8797,"nodeType":"IfStatement","src":"33034:97:31","trueBody":{"id":8796,"nodeType":"Block","src":"33059:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:31","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"33114:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"33080:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8795,"nodeType":"RevertStatement","src":"33073:47:31"}]}}]},"documentation":{"id":8774,"nodeType":"StructuredDocumentation","src":"32605:307:31","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:31","nodeType":"FunctionDefinition","parameters":{"id":8777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8776,"mutability":"mutable","name":"value","nameLocation":"32941:5:31","nodeType":"VariableDeclaration","scope":8799,"src":"32934:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8775,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:31"},"returnParameters":{"id":8780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8779,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:31","nodeType":"VariableDeclaration","scope":8799,"src":"32971:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8778,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:31"},"scope":8892,"src":"32917:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8824,"nodeType":"Block","src":"33527:148:31","statements":[{"expression":{"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"33537:10:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"33556:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8808,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:31","typeDescriptions":{}}},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8813,"nodeType":"ExpressionStatement","src":"33537:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"33576:10:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"33590:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8823,"nodeType":"IfStatement","src":"33572:97:31","trueBody":{"id":8822,"nodeType":"Block","src":"33597:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"33652:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"33618:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8821,"nodeType":"RevertStatement","src":"33611:47:31"}]}}]},"documentation":{"id":8800,"nodeType":"StructuredDocumentation","src":"33143:307:31","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:31","nodeType":"FunctionDefinition","parameters":{"id":8803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8802,"mutability":"mutable","name":"value","nameLocation":"33479:5:31","nodeType":"VariableDeclaration","scope":8825,"src":"33472:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8801,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:31"},"returnParameters":{"id":8806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8805,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:31","nodeType":"VariableDeclaration","scope":8825,"src":"33509:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8804,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:31"},"scope":8892,"src":"33455:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8850,"nodeType":"Block","src":"34058:146:31","statements":[{"expression":{"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"34068:10:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8828,"src":"34086:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8834,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:31","typeDescriptions":{}}},"id":8837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8839,"nodeType":"ExpressionStatement","src":"34068:24:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"34106:10:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8828,"src":"34120:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8849,"nodeType":"IfStatement","src":"34102:96:31","trueBody":{"id":8848,"nodeType":"Block","src":"34127:71:31","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8828,"src":"34181:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"34148:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8847,"nodeType":"RevertStatement","src":"34141:46:31"}]}}]},"documentation":{"id":8826,"nodeType":"StructuredDocumentation","src":"33681:302:31","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:31","nodeType":"FunctionDefinition","parameters":{"id":8829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8828,"mutability":"mutable","name":"value","nameLocation":"34011:5:31","nodeType":"VariableDeclaration","scope":8851,"src":"34004:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8827,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:31"},"returnParameters":{"id":8832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8831,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:31","nodeType":"VariableDeclaration","scope":8851,"src":"34041:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8830,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:31"},"scope":8892,"src":"33988:216:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8880,"nodeType":"Block","src":"34444:250:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"34557:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8863,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:31","memberName":"max","nodeType":"MemberAccess","src":"34573:16:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8860,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:31","typeDescriptions":{}}},"id":8867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8874,"nodeType":"IfStatement","src":"34553:105:31","trueBody":{"id":8873,"nodeType":"Block","src":"34592:66:31","statements":[{"errorCall":{"arguments":[{"id":8870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"34641:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8869,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"34613:27:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8872,"nodeType":"RevertStatement","src":"34606:41:31"}]}},{"expression":{"arguments":[{"id":8877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"34681:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8875,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:31","typeDescriptions":{}}},"id":8878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8858,"id":8879,"nodeType":"Return","src":"34667:20:31"}]},"documentation":{"id":8852,"nodeType":"StructuredDocumentation","src":"34210:165:31","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8881,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:31","nodeType":"FunctionDefinition","parameters":{"id":8855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8854,"mutability":"mutable","name":"value","nameLocation":"34406:5:31","nodeType":"VariableDeclaration","scope":8881,"src":"34398:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8853,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:31"},"returnParameters":{"id":8858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8881,"src":"34436:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8856,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:31"},"scope":8892,"src":"34380:314:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8890,"nodeType":"Block","src":"34853:87:31","statements":[{"AST":{"nativeSrc":"34888:46:31","nodeType":"YulBlock","src":"34888:46:31","statements":[{"nativeSrc":"34902:22:31","nodeType":"YulAssignment","src":"34902:22:31","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:31","nodeType":"YulIdentifier","src":"34921:1:31"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:31","nodeType":"YulIdentifier","src":"34914:6:31"},"nativeSrc":"34914:9:31","nodeType":"YulFunctionCall","src":"34914:9:31"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:31","nodeType":"YulIdentifier","src":"34907:6:31"},"nativeSrc":"34907:17:31","nodeType":"YulFunctionCall","src":"34907:17:31"},"variableNames":[{"name":"u","nativeSrc":"34902:1:31","nodeType":"YulIdentifier","src":"34902:1:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8884,"isOffset":false,"isSlot":false,"src":"34921:1:31","valueSize":1},{"declaration":8887,"isOffset":false,"isSlot":false,"src":"34902:1:31","valueSize":1}],"flags":["memory-safe"],"id":8889,"nodeType":"InlineAssembly","src":"34863:71:31"}]},"documentation":{"id":8882,"nodeType":"StructuredDocumentation","src":"34700:90:31","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:31","nodeType":"FunctionDefinition","parameters":{"id":8885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8884,"mutability":"mutable","name":"b","nameLocation":"34816:1:31","nodeType":"VariableDeclaration","scope":8891,"src":"34811:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8883,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:31"},"returnParameters":{"id":8888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8887,"mutability":"mutable","name":"u","nameLocation":"34850:1:31","nodeType":"VariableDeclaration","scope":8891,"src":"34842:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8886,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:31"},"scope":8892,"src":"34795:145:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8893,"src":"769:34173:31","usedErrors":[7137,7142,7149,7154],"usedEvents":[]}],"src":"192:34751:31"},"id":31},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8892],"SignedMath":[9036]},"id":9037,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8894,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9037,"sourceUnit":8893,"src":"135:40:32","symbolAliases":[{"foreign":{"id":8895,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"143:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8897,"nodeType":"StructuredDocumentation","src":"177:80:32","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9036,"linearizedBaseContracts":[9036],"name":"SignedMath","nameLocation":"266:10:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":8926,"nodeType":"Block","src":"746:215:32","statements":[{"id":8925,"nodeType":"UncheckedBlock","src":"756:199:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8904,"src":"894:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"900:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8904,"src":"904:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8918,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"932:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8916,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"916:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8892_$","typeString":"type(library SafeCast)"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"916:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8914,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:32","typeDescriptions":{}}},"id":8920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8908,"id":8924,"nodeType":"Return","src":"887:57:32"}]}]},"documentation":{"id":8898,"nodeType":"StructuredDocumentation","src":"283:374:32","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8927,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:32","nodeType":"FunctionDefinition","parameters":{"id":8905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8900,"mutability":"mutable","name":"condition","nameLocation":"684:9:32","nodeType":"VariableDeclaration","scope":8927,"src":"679:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8899,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8902,"mutability":"mutable","name":"a","nameLocation":"702:1:32","nodeType":"VariableDeclaration","scope":8927,"src":"695:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8901,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8904,"mutability":"mutable","name":"b","nameLocation":"712:1:32","nodeType":"VariableDeclaration","scope":8927,"src":"705:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8903,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:32"},"returnParameters":{"id":8908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8927,"src":"738:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8906,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:32"},"scope":9036,"src":"662:299:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8945,"nodeType":"Block","src":"1102:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"1127:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"1131:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"1134:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8942,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"1137:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8937,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8927,"src":"1119:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8936,"id":8944,"nodeType":"Return","src":"1112:27:32"}]},"documentation":{"id":8928,"nodeType":"StructuredDocumentation","src":"967:66:32","text":" @dev Returns the largest of two signed numbers."},"id":8946,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:32","nodeType":"FunctionDefinition","parameters":{"id":8933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8930,"mutability":"mutable","name":"a","nameLocation":"1058:1:32","nodeType":"VariableDeclaration","scope":8946,"src":"1051:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8929,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8932,"mutability":"mutable","name":"b","nameLocation":"1068:1:32","nodeType":"VariableDeclaration","scope":8946,"src":"1061:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8931,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:32"},"returnParameters":{"id":8936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8946,"src":"1094:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8934,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:32"},"scope":9036,"src":"1038:108:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8964,"nodeType":"Block","src":"1288:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8957,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"1313:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8958,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"1317:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"1320:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"1323:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8956,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8927,"src":"1305:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8955,"id":8963,"nodeType":"Return","src":"1298:27:32"}]},"documentation":{"id":8947,"nodeType":"StructuredDocumentation","src":"1152:67:32","text":" @dev Returns the smallest of two signed numbers."},"id":8965,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:32","nodeType":"FunctionDefinition","parameters":{"id":8952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8949,"mutability":"mutable","name":"a","nameLocation":"1244:1:32","nodeType":"VariableDeclaration","scope":8965,"src":"1237:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8948,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8951,"mutability":"mutable","name":"b","nameLocation":"1254:1:32","nodeType":"VariableDeclaration","scope":8965,"src":"1247:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8950,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:32"},"returnParameters":{"id":8955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8965,"src":"1280:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8953,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:32"},"scope":9036,"src":"1224:108:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9008,"nodeType":"Block","src":"1537:162:32","statements":[{"assignments":[8976],"declarations":[{"constant":false,"id":8976,"mutability":"mutable","name":"x","nameLocation":"1606:1:32","nodeType":"VariableDeclaration","scope":9008,"src":"1599:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8975,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8989,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"1611:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"1615:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"1622:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"1626:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:32"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"1651:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8995,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"1671:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:32","typeDescriptions":{}}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8991,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:32","typeDescriptions":{}}},"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"1685:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"1689:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8974,"id":9007,"nodeType":"Return","src":"1644:48:32"}]},"documentation":{"id":8966,"nodeType":"StructuredDocumentation","src":"1338:126:32","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9009,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:32","nodeType":"FunctionDefinition","parameters":{"id":8971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8968,"mutability":"mutable","name":"a","nameLocation":"1493:1:32","nodeType":"VariableDeclaration","scope":9009,"src":"1486:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8967,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8970,"mutability":"mutable","name":"b","nameLocation":"1503:1:32","nodeType":"VariableDeclaration","scope":9009,"src":"1496:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8969,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:32"},"returnParameters":{"id":8974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9009,"src":"1529:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8972,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:32"},"scope":9036,"src":"1469:230:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9034,"nodeType":"Block","src":"1843:767:32","statements":[{"id":9033,"nodeType":"UncheckedBlock","src":"1853:751:32","statements":[{"assignments":[9018],"declarations":[{"constant":false,"id":9018,"mutability":"mutable","name":"mask","nameLocation":"2424:4:32","nodeType":"VariableDeclaration","scope":9033,"src":"2417:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9017,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9022,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9019,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"2431:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9025,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"2576:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9026,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9018,"src":"2580:4:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9029,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9018,"src":"2588:4:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:32","typeDescriptions":{}}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9016,"id":9032,"nodeType":"Return","src":"2560:33:32"}]}]},"documentation":{"id":9010,"nodeType":"StructuredDocumentation","src":"1705:78:32","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9035,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:32","nodeType":"FunctionDefinition","parameters":{"id":9013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9012,"mutability":"mutable","name":"n","nameLocation":"1808:1:32","nodeType":"VariableDeclaration","scope":9035,"src":"1801:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9011,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:32"},"returnParameters":{"id":9016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9035,"src":"1834:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:32"},"scope":9036,"src":"1788:822:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9037,"src":"258:2354:32","usedErrors":[],"usedEvents":[]}],"src":"109:2504:32"},"id":32},"contracts/CircuitBreaker.sol":{"ast":{"absolutePath":"contracts/CircuitBreaker.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"CircuitBreaker":[9702],"ContextUpgradeable":[1696],"ERC165Upgradeable":[2480],"IAccessControl":[2563],"ICircuitBreaker":[11602],"IERC165":[5506],"Initializable":[632],"PausableUpgradeable":[1967]},"id":9703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9038,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:33"},{"absolutePath":"contracts/interfaces/ICircuitBreaker.sol","file":"./interfaces/ICircuitBreaker.sol","id":9039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9703,"sourceUnit":11603,"src":"61:42:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":9040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9703,"sourceUnit":365,"src":"105:81:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":9041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9703,"sourceUnit":1968,"src":"188:75:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9043,"name":"ICircuitBreaker","nameLocations":["488:15:33"],"nodeType":"IdentifierPath","referencedDeclaration":11602,"src":"488:15:33"},"id":9044,"nodeType":"InheritanceSpecifier","src":"488:15:33"},{"baseName":{"id":9045,"name":"AccessControlUpgradeable","nameLocations":["505:24:33"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"505:24:33"},"id":9046,"nodeType":"InheritanceSpecifier","src":"505:24:33"},{"baseName":{"id":9047,"name":"PausableUpgradeable","nameLocations":["531:19:33"],"nodeType":"IdentifierPath","referencedDeclaration":1967,"src":"531:19:33"},"id":9048,"nodeType":"InheritanceSpecifier","src":"531:19:33"}],"canonicalName":"CircuitBreaker","contractDependencies":[],"contractKind":"contract","documentation":{"id":9042,"nodeType":"StructuredDocumentation","src":"267:192:33","text":" @title CircuitBreaker\n @dev Advanced circuit breaker implementation with anomaly detection\n @notice This contract monitors transfer patterns and can trigger circuit breakers"},"fullyImplemented":true,"id":9702,"linearizedBaseContracts":[9702,1967,364,2480,5506,2563,1696,632,11602],"name":"CircuitBreaker","nameLocation":"470:14:33","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e54e55ae","id":9053,"mutability":"constant","name":"CIRCUIT_BREAKER_ROLE","nameLocation":"638:20:33","nodeType":"VariableDeclaration","scope":9702,"src":"614:80:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"614:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"434952435549545f425245414b45525f524f4c45","id":9051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"671:22:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a265492","typeString":"literal_string \"CIRCUIT_BREAKER_ROLE\""},"value":"CIRCUIT_BREAKER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a265492","typeString":"literal_string \"CIRCUIT_BREAKER_ROLE\""}],"id":9050,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"661:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"661:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"32941ecb","id":9055,"mutability":"mutable","name":"isCircuitBreakerActive","nameLocation":"775:22:33","nodeType":"VariableDeclaration","scope":9702,"src":"763:34:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9054,"name":"bool","nodeType":"ElementaryTypeName","src":"763:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"44baa6c2","id":9057,"mutability":"mutable","name":"activationReason","nameLocation":"818:16:33","nodeType":"VariableDeclaration","scope":9702,"src":"804:30:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9056,"name":"string","nodeType":"ElementaryTypeName","src":"804:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"da4493f6","id":9059,"mutability":"mutable","name":"activationTime","nameLocation":"856:14:33","nodeType":"VariableDeclaration","scope":9702,"src":"841:29:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9058,"name":"uint256","nodeType":"ElementaryTypeName","src":"841:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"07df2f18","id":9061,"mutability":"mutable","name":"maxDailyVolume","nameLocation":"935:14:33","nodeType":"VariableDeclaration","scope":9702,"src":"920:29:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9060,"name":"uint256","nodeType":"ElementaryTypeName","src":"920:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"df18315b","id":9063,"mutability":"mutable","name":"maxHourlyVolume","nameLocation":"971:15:33","nodeType":"VariableDeclaration","scope":9702,"src":"956:30:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9062,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"36b089d8","id":9065,"mutability":"mutable","name":"maxSingleTransfer","nameLocation":"1008:17:33","nodeType":"VariableDeclaration","scope":9702,"src":"993:32:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9064,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6c58ab83","id":9067,"mutability":"mutable","name":"maxTransfersPerHour","nameLocation":"1092:19:33","nodeType":"VariableDeclaration","scope":9702,"src":"1077:34:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1077:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"da4a64bc","id":9069,"mutability":"mutable","name":"maxTransfersPerDay","nameLocation":"1133:18:33","nodeType":"VariableDeclaration","scope":9702,"src":"1118:33:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"12da5d1e","id":9071,"mutability":"mutable","name":"maxFailedAttempts","nameLocation":"1205:17:33","nodeType":"VariableDeclaration","scope":9702,"src":"1190:32:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"258061aa","id":9073,"mutability":"mutable","name":"failedAttemptWindow","nameLocation":"1244:19:33","nodeType":"VariableDeclaration","scope":9702,"src":"1229:34:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5feb1f71","id":9075,"mutability":"mutable","name":"autoResetInterval","nameLocation":"1321:17:33","nodeType":"VariableDeclaration","scope":9702,"src":"1306:32:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a2177124","id":9077,"mutability":"mutable","name":"lastResetTime","nameLocation":"1360:13:33","nodeType":"VariableDeclaration","scope":9702,"src":"1345:28:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"943ca3b9","id":9081,"mutability":"mutable","name":"dailyVolume","nameLocation":"1448:11:33","nodeType":"VariableDeclaration","scope":9702,"src":"1413:46:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9080,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1413:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1432:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8fbf5929","id":9085,"mutability":"mutable","name":"hourlyVolume","nameLocation":"1501:12:33","nodeType":"VariableDeclaration","scope":9702,"src":"1466:47:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9084,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1474:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1466:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"63236f49","id":9089,"mutability":"mutable","name":"hourlyTransferCount","nameLocation":"1555:19:33","nodeType":"VariableDeclaration","scope":9702,"src":"1520:54:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9088,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1520:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"e6b64fdb","id":9093,"mutability":"mutable","name":"dailyTransferCount","nameLocation":"1616:18:33","nodeType":"VariableDeclaration","scope":9702,"src":"1581:53:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9092,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1581:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"32627ec7","id":9097,"mutability":"mutable","name":"failedAttempts","nameLocation":"1676:14:33","nodeType":"VariableDeclaration","scope":9702,"src":"1641:49:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9096,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9094,"name":"address","nodeType":"ElementaryTypeName","src":"1649:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1641:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"7b969e1d","id":9101,"mutability":"mutable","name":"lastFailedAttempt","nameLocation":"1732:17:33","nodeType":"VariableDeclaration","scope":9702,"src":"1697:52:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9100,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9098,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1697:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"11803daffb8bd292f79dc0d607f5a1c30184b28e74ca55f6352d0d874d210727","id":9107,"name":"CircuitBreakerActivated","nameLocation":"1815:23:33","nodeType":"EventDefinition","parameters":{"id":9106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9103,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1846:6:33","nodeType":"VariableDeclaration","scope":9107,"src":"1839:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9102,"name":"string","nodeType":"ElementaryTypeName","src":"1839:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9105,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1862:9:33","nodeType":"VariableDeclaration","scope":9107,"src":"1854:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:34:33"},"src":"1809:64:33"},{"anonymous":false,"eventSelector":"4658f69373abd2ae36994b6398ba682f149ae01805feb8227244965d9f320909","id":9111,"name":"CircuitBreakerDeactivated","nameLocation":"1885:25:33","nodeType":"EventDefinition","parameters":{"id":9110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9109,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1919:9:33","nodeType":"VariableDeclaration","scope":9111,"src":"1911:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1911:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1910:19:33"},"src":"1879:51:33"},{"anonymous":false,"eventSelector":"92c75491ccd22cdf112823a73d11f3d277e0cb80cb4f0458fb647d2d2df16efd","id":9119,"name":"VolumeLimitExceededEvent","nameLocation":"1942:24:33","nodeType":"EventDefinition","parameters":{"id":9118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9113,"indexed":false,"mutability":"mutable","name":"limit","nameLocation":"1975:5:33","nodeType":"VariableDeclaration","scope":9119,"src":"1967:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1967:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9115,"indexed":false,"mutability":"mutable","name":"actual","nameLocation":"1990:6:33","nodeType":"VariableDeclaration","scope":9119,"src":"1982:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9117,"indexed":false,"mutability":"mutable","name":"period","nameLocation":"2005:6:33","nodeType":"VariableDeclaration","scope":9119,"src":"1998:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9116,"name":"string","nodeType":"ElementaryTypeName","src":"1998:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1966:46:33"},"src":"1936:77:33"},{"anonymous":false,"eventSelector":"aade5c0cb2c931eebd40b9c8c4fdfba862a97a35fcfb1f110fdee34d170908e2","id":9127,"name":"VelocityLimitExceededEvent","nameLocation":"2025:26:33","nodeType":"EventDefinition","parameters":{"id":9126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9121,"indexed":false,"mutability":"mutable","name":"limit","nameLocation":"2060:5:33","nodeType":"VariableDeclaration","scope":9127,"src":"2052:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9123,"indexed":false,"mutability":"mutable","name":"actual","nameLocation":"2075:6:33","nodeType":"VariableDeclaration","scope":9127,"src":"2067:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9125,"indexed":false,"mutability":"mutable","name":"period","nameLocation":"2090:6:33","nodeType":"VariableDeclaration","scope":9127,"src":"2083:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9124,"name":"string","nodeType":"ElementaryTypeName","src":"2083:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2051:46:33"},"src":"2019:79:33"},{"anonymous":false,"eventSelector":"cef34426b92fd7c1a4dacfb9e7b9625a61226ac4a0e6750a048ad536f84fa87f","id":9133,"name":"FailedAttemptsExceededEvent","nameLocation":"2110:27:33","nodeType":"EventDefinition","parameters":{"id":9132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9129,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"2146:7:33","nodeType":"VariableDeclaration","scope":9133,"src":"2138:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9128,"name":"address","nodeType":"ElementaryTypeName","src":"2138:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9131,"indexed":false,"mutability":"mutable","name":"attempts","nameLocation":"2163:8:33","nodeType":"VariableDeclaration","scope":9133,"src":"2155:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:35:33"},"src":"2104:69:33"},{"anonymous":false,"eventSelector":"f1b43c2e52a9e846469baaebdb63ecfd00023cf4e2b651237f6068f2467d2093","id":9137,"name":"AutoResetTriggered","nameLocation":"2185:18:33","nodeType":"EventDefinition","parameters":{"id":9136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9135,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2212:9:33","nodeType":"VariableDeclaration","scope":9137,"src":"2204:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:19:33"},"src":"2179:44:33"},{"errorSelector":"ff0376e7","id":9139,"name":"CircuitBreakerActive","nameLocation":"2288:20:33","nodeType":"ErrorDefinition","parameters":{"id":9138,"nodeType":"ParameterList","parameters":[],"src":"2308:2:33"},"src":"2282:29:33"},{"errorSelector":"dd27bab5","id":9141,"name":"VolumeLimitExceeded","nameLocation":"2323:19:33","nodeType":"ErrorDefinition","parameters":{"id":9140,"nodeType":"ParameterList","parameters":[],"src":"2342:2:33"},"src":"2317:28:33"},{"errorSelector":"5a30e744","id":9143,"name":"VelocityLimitExceeded","nameLocation":"2357:21:33","nodeType":"ErrorDefinition","parameters":{"id":9142,"nodeType":"ParameterList","parameters":[],"src":"2378:2:33"},"src":"2351:30:33"},{"errorSelector":"0079b0e5","id":9145,"name":"FailedAttemptsExceeded","nameLocation":"2393:22:33","nodeType":"ErrorDefinition","parameters":{"id":9144,"nodeType":"ParameterList","parameters":[],"src":"2415:2:33"},"src":"2387:31:33"},{"errorSelector":"e5239090","id":9147,"name":"InvalidParameters","nameLocation":"2430:17:33","nodeType":"ErrorDefinition","parameters":{"id":9146,"nodeType":"ParameterList","parameters":[],"src":"2447:2:33"},"src":"2424:26:33"},{"errorSelector":"5c427cd9","id":9149,"name":"UnauthorizedCaller","nameLocation":"2462:18:33","nodeType":"ErrorDefinition","parameters":{"id":9148,"nodeType":"ParameterList","parameters":[],"src":"2480:2:33"},"src":"2456:27:33"},{"body":{"id":9225,"nodeType":"Block","src":"2916:631:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9172,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2927:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2927:22:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9174,"nodeType":"ExpressionStatement","src":"2927:22:33"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9175,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"2960:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:17:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9177,"nodeType":"ExpressionStatement","src":"2960:17:33"},{"expression":{"arguments":[{"id":9179,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3009:18:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9180,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"3029:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9178,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2998:10:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2998:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9182,"nodeType":"ExpressionStatement","src":"2998:37:33"},{"expression":{"arguments":[{"id":9184,"name":"CIRCUIT_BREAKER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"3057:20:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9185,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"3079:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9183,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"3046:10:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:39:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9187,"nodeType":"ExpressionStatement","src":"3046:39:33"},{"expression":{"id":9190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9188,"name":"maxDailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"3106:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9189,"name":"_maxDailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9153,"src":"3123:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3106:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9191,"nodeType":"ExpressionStatement","src":"3106:32:33"},{"expression":{"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9192,"name":"maxHourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"3149:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9193,"name":"_maxHourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"3167:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3149:34:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9195,"nodeType":"ExpressionStatement","src":"3149:34:33"},{"expression":{"id":9198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9196,"name":"maxSingleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"3194:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9197,"name":"_maxSingleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9157,"src":"3214:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3194:38:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9199,"nodeType":"ExpressionStatement","src":"3194:38:33"},{"expression":{"id":9202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9200,"name":"maxTransfersPerHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9067,"src":"3243:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9201,"name":"_maxTransfersPerHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9159,"src":"3265:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3243:42:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9203,"nodeType":"ExpressionStatement","src":"3243:42:33"},{"expression":{"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9204,"name":"maxTransfersPerDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9069,"src":"3296:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9205,"name":"_maxTransfersPerDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9161,"src":"3317:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3296:40:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9207,"nodeType":"ExpressionStatement","src":"3296:40:33"},{"expression":{"id":9210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9208,"name":"maxFailedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"3347:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9209,"name":"_maxFailedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"3367:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3347:38:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9211,"nodeType":"ExpressionStatement","src":"3347:38:33"},{"expression":{"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9212,"name":"failedAttemptWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"3396:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9213,"name":"_failedAttemptWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9165,"src":"3418:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3396:42:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9215,"nodeType":"ExpressionStatement","src":"3396:42:33"},{"expression":{"id":9218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9216,"name":"autoResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"3449:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9217,"name":"_autoResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"3469:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3449:38:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9219,"nodeType":"ExpressionStatement","src":"3449:38:33"},{"expression":{"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9220,"name":"lastResetTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"3508:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9221,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3524:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3530:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"3524:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3508:31:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9224,"nodeType":"ExpressionStatement","src":"3508:31:33"}]},"functionSelector":"d114e6fc","id":9226,"implemented":true,"kind":"function","modifiers":[{"id":9170,"kind":"modifierInvocation","modifierName":{"id":9169,"name":"initializer","nameLocations":["2904:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"2904:11:33"},"nodeType":"ModifierInvocation","src":"2904:11:33"}],"name":"initialize","nameLocation":"2559:10:33","nodeType":"FunctionDefinition","parameters":{"id":9168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9151,"mutability":"mutable","name":"admin","nameLocation":"2588:5:33","nodeType":"VariableDeclaration","scope":9226,"src":"2580:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9150,"name":"address","nodeType":"ElementaryTypeName","src":"2580:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9153,"mutability":"mutable","name":"_maxDailyVolume","nameLocation":"2612:15:33","nodeType":"VariableDeclaration","scope":9226,"src":"2604:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9155,"mutability":"mutable","name":"_maxHourlyVolume","nameLocation":"2646:16:33","nodeType":"VariableDeclaration","scope":9226,"src":"2638:24:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2638:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9157,"mutability":"mutable","name":"_maxSingleTransfer","nameLocation":"2681:18:33","nodeType":"VariableDeclaration","scope":9226,"src":"2673:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2673:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9159,"mutability":"mutable","name":"_maxTransfersPerHour","nameLocation":"2718:20:33","nodeType":"VariableDeclaration","scope":9226,"src":"2710:28:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9161,"mutability":"mutable","name":"_maxTransfersPerDay","nameLocation":"2757:19:33","nodeType":"VariableDeclaration","scope":9226,"src":"2749:27:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9163,"mutability":"mutable","name":"_maxFailedAttempts","nameLocation":"2795:18:33","nodeType":"VariableDeclaration","scope":9226,"src":"2787:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2787:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9165,"mutability":"mutable","name":"_failedAttemptWindow","nameLocation":"2832:20:33","nodeType":"VariableDeclaration","scope":9226,"src":"2824:28:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9167,"mutability":"mutable","name":"_autoResetInterval","nameLocation":"2871:18:33","nodeType":"VariableDeclaration","scope":9226,"src":"2863:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2863:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:327:33"},"returnParameters":{"id":9171,"nodeType":"ParameterList","parameters":[],"src":"2916:0:33"},"scope":9702,"src":"2550:997:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9278,"nodeType":"Block","src":"3771:412:33","statements":[{"assignments":[9237],"declarations":[{"constant":false,"id":9237,"mutability":"mutable","name":"currentDay","nameLocation":"3790:10:33","nodeType":"VariableDeclaration","scope":9278,"src":"3782:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3782:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9242,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9238,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"3803:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3821:6:33","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"3803:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3782:45:33"},{"assignments":[9244],"declarations":[{"constant":false,"id":9244,"mutability":"mutable","name":"currentHour","nameLocation":"3846:11:33","nodeType":"VariableDeclaration","scope":9278,"src":"3838:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3838:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9245,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3860:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3866:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"3860:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3878:7:33","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"3860:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3838:47:33"},{"expression":{"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9250,"name":"dailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"3906:11:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9252,"indexExpression":{"id":9251,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9237,"src":"3918:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3906:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9253,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"3933:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3906:33:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9255,"nodeType":"ExpressionStatement","src":"3906:33:33"},{"expression":{"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9256,"name":"hourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"3950:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9258,"indexExpression":{"id":9257,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"3963:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3950:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9259,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"3979:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3950:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9261,"nodeType":"ExpressionStatement","src":"3950:35:33"},{"expression":{"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3996:34:33","subExpression":{"baseExpression":{"id":9262,"name":"hourlyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"3996:19:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9264,"indexExpression":{"id":9263,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"4016:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3996:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9266,"nodeType":"ExpressionStatement","src":"3996:34:33"},{"expression":{"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4041:32:33","subExpression":{"baseExpression":{"id":9267,"name":"dailyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9093,"src":"4041:18:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9269,"indexExpression":{"id":9268,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9237,"src":"4060:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4041:30:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9271,"nodeType":"ExpressionStatement","src":"4041:32:33"},{"expression":{"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9272,"name":"failedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"4151:14:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9274,"indexExpression":{"id":9273,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9229,"src":"4166:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4151:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4174:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4151:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9277,"nodeType":"ExpressionStatement","src":"4151:24:33"}]},"documentation":{"id":9227,"nodeType":"StructuredDocumentation","src":"3627:57:33","text":" @notice Record a successful transfer"},"functionSelector":"01e3a903","id":9279,"implemented":true,"kind":"function","modifiers":[],"name":"recordTransfer","nameLocation":"3699:14:33","nodeType":"FunctionDefinition","parameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9229,"mutability":"mutable","name":"from","nameLocation":"3722:4:33","nodeType":"VariableDeclaration","scope":9279,"src":"3714:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9228,"name":"address","nodeType":"ElementaryTypeName","src":"3714:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9279,"src":"3728:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9230,"name":"address","nodeType":"ElementaryTypeName","src":"3728:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9233,"mutability":"mutable","name":"amount","nameLocation":"3754:6:33","nodeType":"VariableDeclaration","scope":9279,"src":"3746:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9232,"name":"uint256","nodeType":"ElementaryTypeName","src":"3746:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3713:48:33"},"returnParameters":{"id":9235,"nodeType":"ParameterList","parameters":[],"src":"3771:0:33"},"scope":9702,"src":"3690:493:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9332,"nodeType":"Block","src":"4317:497:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9285,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4332:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4338:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"4332:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":9287,"name":"lastFailedAttempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9101,"src":"4350:17:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9289,"indexExpression":{"id":9288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"4368:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4350:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:44:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9291,"name":"failedAttemptWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"4380:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:67:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9305,"nodeType":"Block","src":"4461:52:33","statements":[{"expression":{"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4476:25:33","subExpression":{"baseExpression":{"id":9300,"name":"failedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"4476:14:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9302,"indexExpression":{"id":9301,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"4491:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4476:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9304,"nodeType":"ExpressionStatement","src":"4476:25:33"}]},"id":9306,"nodeType":"IfStatement","src":"4328:185:33","trueBody":{"id":9299,"nodeType":"Block","src":"4401:54:33","statements":[{"expression":{"id":9297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9293,"name":"failedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"4416:14:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9295,"indexExpression":{"id":9294,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"4431:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4416:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":9296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4442:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4416:27:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9298,"nodeType":"ExpressionStatement","src":"4416:27:33"}]}},{"expression":{"id":9312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9307,"name":"lastFailedAttempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9101,"src":"4533:17:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9309,"indexExpression":{"id":9308,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"4551:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4533:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9310,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4562:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"4562:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4533:44:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9313,"nodeType":"ExpressionStatement","src":"4533:44:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9314,"name":"failedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"4602:14:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9316,"indexExpression":{"id":9315,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"4617:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9317,"name":"maxFailedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"4629:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4602:44:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9331,"nodeType":"IfStatement","src":"4598:209:33","trueBody":{"id":9330,"nodeType":"Block","src":"4648:159:33","statements":[{"expression":{"arguments":[{"hexValue":"4661696c656420617474656d707473206578636565646564","id":9320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4687:26:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_e16dd17260f25a6d49737e43df48f44f0a69978ead73a5c3f6b59b4fe07d3d06","typeString":"literal_string \"Failed attempts exceeded\""},"value":"Failed attempts exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e16dd17260f25a6d49737e43df48f44f0a69978ead73a5c3f6b59b4fe07d3d06","typeString":"literal_string \"Failed attempts exceeded\""}],"id":9319,"name":"_activateCircuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"4663:23:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":9321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4663:51:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9322,"nodeType":"ExpressionStatement","src":"4663:51:33"},{"eventCall":{"arguments":[{"id":9324,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"4762:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":9325,"name":"failedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"4771:14:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9327,"indexExpression":{"id":9326,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"4786:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9323,"name":"FailedAttemptsExceededEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"4734:27:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:61:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9329,"nodeType":"EmitStatement","src":"4729:66:33"}]}}]},"documentation":{"id":9280,"nodeType":"StructuredDocumentation","src":"4195:61:33","text":" @notice Record a failed transfer attempt"},"functionSelector":"668fb1be","id":9333,"implemented":true,"kind":"function","modifiers":[],"name":"recordFailedAttempt","nameLocation":"4271:19:33","nodeType":"FunctionDefinition","parameters":{"id":9283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9282,"mutability":"mutable","name":"account","nameLocation":"4299:7:33","nodeType":"VariableDeclaration","scope":9333,"src":"4291:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9281,"name":"address","nodeType":"ElementaryTypeName","src":"4291:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4290:17:33"},"returnParameters":{"id":9284,"nodeType":"ParameterList","parameters":[],"src":"4317:0:33"},"scope":9702,"src":"4262:552:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9346,"nodeType":"Block","src":"4981:50:33","statements":[{"expression":{"arguments":[{"id":9343,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9336,"src":"5016:6:33","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":9342,"name":"_activateCircuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"4992:23:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":9344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4992:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9345,"nodeType":"ExpressionStatement","src":"4992:31:33"}]},"documentation":{"id":9334,"nodeType":"StructuredDocumentation","src":"4826:53:33","text":" @notice Activate circuit breaker"},"functionSelector":"6b5a0d8c","id":9347,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9339,"name":"CIRCUIT_BREAKER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"4959:20:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9340,"kind":"modifierInvocation","modifierName":{"id":9338,"name":"onlyRole","nameLocations":["4950:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4950:8:33"},"nodeType":"ModifierInvocation","src":"4950:30:33"}],"name":"activateCircuitBreaker","nameLocation":"4894:22:33","nodeType":"FunctionDefinition","parameters":{"id":9337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9336,"mutability":"mutable","name":"reason","nameLocation":"4933:6:33","nodeType":"VariableDeclaration","scope":9347,"src":"4917:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9335,"name":"string","nodeType":"ElementaryTypeName","src":"4917:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4916:24:33"},"returnParameters":{"id":9341,"nodeType":"ParameterList","parameters":[],"src":"4981:0:33"},"scope":9702,"src":"4885:146:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9371,"nodeType":"Block","src":"5180:168:33","statements":[{"expression":{"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9354,"name":"isCircuitBreakerActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"5191:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5216:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5191:30:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9357,"nodeType":"ExpressionStatement","src":"5191:30:33"},{"expression":{"id":9360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9358,"name":"activationReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9057,"src":"5232:16:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":9359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5251:2:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"5232:21:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9361,"nodeType":"ExpressionStatement","src":"5232:21:33"},{"expression":{"id":9364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9362,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9059,"src":"5264:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5281:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5264:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9365,"nodeType":"ExpressionStatement","src":"5264:18:33"},{"eventCall":{"arguments":[{"expression":{"id":9367,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5324:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"5324:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9366,"name":"CircuitBreakerDeactivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9111,"src":"5298:25:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5298:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9370,"nodeType":"EmitStatement","src":"5293:47:33"}]},"documentation":{"id":9348,"nodeType":"StructuredDocumentation","src":"5043:55:33","text":" @notice Deactivate circuit breaker"},"functionSelector":"42200b9e","id":9372,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9351,"name":"CIRCUIT_BREAKER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"5158:20:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9352,"kind":"modifierInvocation","modifierName":{"id":9350,"name":"onlyRole","nameLocations":["5149:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5149:8:33"},"nodeType":"ModifierInvocation","src":"5149:30:33"}],"name":"deactivateCircuitBreaker","nameLocation":"5113:24:33","nodeType":"FunctionDefinition","parameters":{"id":9349,"nodeType":"ParameterList","parameters":[],"src":"5137:2:33"},"returnParameters":{"id":9353,"nodeType":"ParameterList","parameters":[],"src":"5180:0:33"},"scope":9702,"src":"5104:244:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9444,"nodeType":"Block","src":"5474:694:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9376,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5489:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5495:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"5489:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9378,"name":"lastResetTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"5508:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9379,"name":"autoResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"5524:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:33:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5489:52:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9443,"nodeType":"IfStatement","src":"5485:676:33","trueBody":{"id":9442,"nodeType":"Block","src":"5543:618:33","statements":[{"expression":{"id":9384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9382,"name":"isCircuitBreakerActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"5558:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5583:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5558:30:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9385,"nodeType":"ExpressionStatement","src":"5558:30:33"},{"expression":{"id":9388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9386,"name":"activationReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9057,"src":"5603:16:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":9387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5622:2:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"5603:21:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9389,"nodeType":"ExpressionStatement","src":"5603:21:33"},{"expression":{"id":9392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9390,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9059,"src":"5639:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5656:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5639:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9393,"nodeType":"ExpressionStatement","src":"5639:18:33"},{"expression":{"id":9397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9394,"name":"lastResetTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"5672:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9395,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5688:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5694:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"5688:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5672:31:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9398,"nodeType":"ExpressionStatement","src":"5672:31:33"},{"assignments":[9400],"declarations":[{"constant":false,"id":9400,"mutability":"mutable","name":"currentDay","nameLocation":"5781:10:33","nodeType":"VariableDeclaration","scope":9442,"src":"5773:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5773:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9405,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9401,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5794:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5800:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"5794:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5812:6:33","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"5794:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5773:45:33"},{"assignments":[9407],"declarations":[{"constant":false,"id":9407,"mutability":"mutable","name":"currentHour","nameLocation":"5841:11:33","nodeType":"VariableDeclaration","scope":9442,"src":"5833:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9406,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9412,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9408,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5855:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5861:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"5855:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5873:7:33","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"5855:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5833:47:33"},{"expression":{"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9413,"name":"dailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"5909:11:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9415,"indexExpression":{"id":9414,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9400,"src":"5921:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5909:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5935:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5909:27:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9418,"nodeType":"ExpressionStatement","src":"5909:27:33"},{"expression":{"id":9423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9419,"name":"hourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"5951:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9421,"indexExpression":{"id":9420,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9407,"src":"5964:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5951:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5979:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5951:29:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9424,"nodeType":"ExpressionStatement","src":"5951:29:33"},{"expression":{"id":9429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9425,"name":"hourlyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"5995:19:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9427,"indexExpression":{"id":9426,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9407,"src":"6015:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5995:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6030:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5995:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9430,"nodeType":"ExpressionStatement","src":"5995:36:33"},{"expression":{"id":9435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9431,"name":"dailyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9093,"src":"6046:18:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9433,"indexExpression":{"id":9432,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9400,"src":"6065:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6046:30:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6079:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6046:34:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9436,"nodeType":"ExpressionStatement","src":"6046:34:33"},{"eventCall":{"arguments":[{"expression":{"id":9438,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6133:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6139:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"6133:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9437,"name":"AutoResetTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"6114:18:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6114:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9441,"nodeType":"EmitStatement","src":"6109:40:33"}]}}]},"documentation":{"id":9373,"nodeType":"StructuredDocumentation","src":"5360:78:33","text":" @notice Auto-reset circuit breaker if interval has passed"},"functionSelector":"0006d1c5","id":9445,"implemented":true,"kind":"function","modifiers":[],"name":"autoReset","nameLocation":"5453:9:33","nodeType":"FunctionDefinition","parameters":{"id":9374,"nodeType":"ParameterList","parameters":[],"src":"5462:2:33"},"returnParameters":{"id":9375,"nodeType":"ParameterList","parameters":[],"src":"5474:0:33"},"scope":9702,"src":"5444:724:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9469,"nodeType":"Block","src":"6303:191:33","statements":[{"expression":{"id":9452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9450,"name":"isCircuitBreakerActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"6314:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6339:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6314:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9453,"nodeType":"ExpressionStatement","src":"6314:29:33"},{"expression":{"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9454,"name":"activationReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9057,"src":"6354:16:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9455,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9447,"src":"6373:6:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6354:25:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9457,"nodeType":"ExpressionStatement","src":"6354:25:33"},{"expression":{"id":9461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9458,"name":"activationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9059,"src":"6390:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6407:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6413:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"6407:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6390:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9462,"nodeType":"ExpressionStatement","src":"6390:32:33"},{"eventCall":{"arguments":[{"id":9464,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9447,"src":"6462:6:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":9465,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6470:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6476:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"6470:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9463,"name":"CircuitBreakerActivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"6438:23:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:48:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9468,"nodeType":"EmitStatement","src":"6433:53:33"}]},"id":9470,"implemented":true,"kind":"function","modifiers":[],"name":"_activateCircuitBreaker","nameLocation":"6248:23:33","nodeType":"FunctionDefinition","parameters":{"id":9448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9447,"mutability":"mutable","name":"reason","nameLocation":"6286:6:33","nodeType":"VariableDeclaration","scope":9470,"src":"6272:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9446,"name":"string","nodeType":"ElementaryTypeName","src":"6272:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6271:22:33"},"returnParameters":{"id":9449,"nodeType":"ParameterList","parameters":[],"src":"6303:0:33"},"scope":9702,"src":"6239:255:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[11589],"body":{"id":9559,"nodeType":"Block","src":"6824:1184:33","statements":[{"condition":{"id":9481,"name":"isCircuitBreakerActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"6839:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9487,"nodeType":"IfStatement","src":"6835:90:33","trueBody":{"id":9486,"nodeType":"Block","src":"6863:62:33","statements":[{"expression":{"arguments":[{"hexValue":"4369726375697420627265616b657220697320616374697665","id":9483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6885:27:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc","typeString":"literal_string \"Circuit breaker is active\""},"value":"Circuit breaker is active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc","typeString":"literal_string \"Circuit breaker is active\""}],"id":9482,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6878:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6878:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9485,"nodeType":"ExpressionStatement","src":"6878:35:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9488,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"6989:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9489,"name":"maxSingleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"6998:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6989:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9496,"nodeType":"IfStatement","src":"6985:114:33","trueBody":{"id":9495,"nodeType":"Block","src":"7017:82:33","statements":[{"expression":{"arguments":[{"hexValue":"5472616e7366657220616d6f756e7420657863656564732073696e676c65207472616e73666572206c696d6974","id":9492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7039:47:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e6af7235625602a0d0950d358e4cdaa14d93a2a7768dafd512bfd267b0b66ea","typeString":"literal_string \"Transfer amount exceeds single transfer limit\""},"value":"Transfer amount exceeds single transfer limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2e6af7235625602a0d0950d358e4cdaa14d93a2a7768dafd512bfd267b0b66ea","typeString":"literal_string \"Transfer amount exceeds single transfer limit\""}],"id":9491,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7032:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9494,"nodeType":"ExpressionStatement","src":"7032:55:33"}]}},{"assignments":[9498],"declarations":[{"constant":false,"id":9498,"mutability":"mutable","name":"currentDay","nameLocation":"7127:10:33","nodeType":"VariableDeclaration","scope":9559,"src":"7119:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9497,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7140:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7146:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"7140:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7158:6:33","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"7140:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7119:45:33"},{"assignments":[9505],"declarations":[{"constant":false,"id":9505,"mutability":"mutable","name":"currentHour","nameLocation":"7183:11:33","nodeType":"VariableDeclaration","scope":9559,"src":"7175:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9504,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9510,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9506,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7197:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7203:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"7197:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7215:7:33","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"7197:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7175:47:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9511,"name":"dailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"7284:11:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9513,"indexExpression":{"id":9512,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"7296:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7284:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9514,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"7310:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9516,"name":"maxDailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"7319:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:49:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9523,"nodeType":"IfStatement","src":"7280:132:33","trueBody":{"id":9522,"nodeType":"Block","src":"7335:77:33","statements":[{"expression":{"arguments":[{"hexValue":"5472616e7366657220776f756c6420657863656564206461696c7920766f6c756d65206c696d6974","id":9519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7357:42:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_24b44587e93e541e6467c497b1051e66494d189f23aa0939cfee477f9ada3b53","typeString":"literal_string \"Transfer would exceed daily volume limit\""},"value":"Transfer would exceed daily volume limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_24b44587e93e541e6467c497b1051e66494d189f23aa0939cfee477f9ada3b53","typeString":"literal_string \"Transfer would exceed daily volume limit\""}],"id":9518,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7350:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7350:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9521,"nodeType":"ExpressionStatement","src":"7350:50:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9524,"name":"hourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"7474:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9526,"indexExpression":{"id":9525,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"7487:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7474:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"7502:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7474:34:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9529,"name":"maxHourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"7511:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7474:52:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9536,"nodeType":"IfStatement","src":"7470:136:33","trueBody":{"id":9535,"nodeType":"Block","src":"7528:78:33","statements":[{"expression":{"arguments":[{"hexValue":"5472616e7366657220776f756c642065786365656420686f75726c7920766f6c756d65206c696d6974","id":9532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7550:43:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa906a93521ae59a7cde8bbde2698be3acf1c6015bbbb1cb494e1804dab750ac","typeString":"literal_string \"Transfer would exceed hourly volume limit\""},"value":"Transfer would exceed hourly volume limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_aa906a93521ae59a7cde8bbde2698be3acf1c6015bbbb1cb494e1804dab750ac","typeString":"literal_string \"Transfer would exceed hourly volume limit\""}],"id":9531,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7543:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7543:51:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9534,"nodeType":"ExpressionStatement","src":"7543:51:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9537,"name":"dailyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9093,"src":"7675:18:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9539,"indexExpression":{"id":9538,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"7694:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7675:30:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9540,"name":"maxTransfersPerDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9069,"src":"7709:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7675:52:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9547,"nodeType":"IfStatement","src":"7671:130:33","trueBody":{"id":9546,"nodeType":"Block","src":"7729:72:33","statements":[{"expression":{"arguments":[{"hexValue":"4461696c79207472616e7366657220636f756e74206c696d6974206578636565646564","id":9543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7751:37:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc99d1b53b9d04c8add5d63c87c6e3a3e601d05afcc340f8e3b85c1691059563","typeString":"literal_string \"Daily transfer count limit exceeded\""},"value":"Daily transfer count limit exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bc99d1b53b9d04c8add5d63c87c6e3a3e601d05afcc340f8e3b85c1691059563","typeString":"literal_string \"Daily transfer count limit exceeded\""}],"id":9542,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7744:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:45:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9545,"nodeType":"ExpressionStatement","src":"7744:45:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9548,"name":"hourlyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"7871:19:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9550,"indexExpression":{"id":9549,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"7891:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7871:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9551,"name":"maxTransfersPerHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9067,"src":"7907:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7871:55:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9558,"nodeType":"IfStatement","src":"7867:134:33","trueBody":{"id":9557,"nodeType":"Block","src":"7928:73:33","statements":[{"expression":{"arguments":[{"hexValue":"486f75726c79207472616e7366657220636f756e74206c696d6974206578636565646564","id":9554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7950:38:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_26c338809e099085ce55b07017f4ca82b803535fc754335f20d0bf3ca5ea1278","typeString":"literal_string \"Hourly transfer count limit exceeded\""},"value":"Hourly transfer count limit exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_26c338809e099085ce55b07017f4ca82b803535fc754335f20d0bf3ca5ea1278","typeString":"literal_string \"Hourly transfer count limit exceeded\""}],"id":9553,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7943:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7943:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9556,"nodeType":"ExpressionStatement","src":"7943:46:33"}]}}]},"documentation":{"id":9471,"nodeType":"StructuredDocumentation","src":"6566:152:33","text":" @notice Check if a transfer should be allowed based on circuit breaker rules\n @param amount The amount of tokens to transfer"},"functionSelector":"cc1dd94f","id":9560,"implemented":true,"kind":"function","modifiers":[],"name":"checkTransfer","nameLocation":"6733:13:33","nodeType":"FunctionDefinition","overrides":{"id":9479,"nodeType":"OverrideSpecifier","overrides":[],"src":"6815:8:33"},"parameters":{"id":9478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9560,"src":"6747:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9472,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9560,"src":"6767:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9474,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9477,"mutability":"mutable","name":"amount","nameLocation":"6793:6:33","nodeType":"VariableDeclaration","scope":9560,"src":"6785:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9476,"name":"uint256","nodeType":"ElementaryTypeName","src":"6785:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6746:54:33"},"returnParameters":{"id":9480,"nodeType":"ParameterList","parameters":[],"src":"6824:0:33"},"scope":9702,"src":"6724:1284:33","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[11595],"body":{"id":9568,"nodeType":"Block","src":"8078:48:33","statements":[{"expression":{"id":9566,"name":"isCircuitBreakerActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"8096:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9565,"id":9567,"nodeType":"Return","src":"8089:29:33"}]},"functionSelector":"22f3e2d4","id":9569,"implemented":true,"kind":"function","modifiers":[],"name":"isActive","nameLocation":"8029:8:33","nodeType":"FunctionDefinition","overrides":{"id":9562,"nodeType":"OverrideSpecifier","overrides":[],"src":"8054:8:33"},"parameters":{"id":9561,"nodeType":"ParameterList","parameters":[],"src":"8037:2:33"},"returnParameters":{"id":9565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9569,"src":"8072:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9563,"name":"bool","nodeType":"ElementaryTypeName","src":"8072:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8071:6:33"},"scope":9702,"src":"8020:106:33","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[11601],"body":{"id":9577,"nodeType":"Block","src":"8216:42:33","statements":[{"expression":{"id":9575,"name":"activationReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9057,"src":"8234:16:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":9574,"id":9576,"nodeType":"Return","src":"8227:23:33"}]},"functionSelector":"789b6315","id":9578,"implemented":true,"kind":"function","modifiers":[],"name":"getActivationReason","nameLocation":"8147:19:33","nodeType":"FunctionDefinition","overrides":{"id":9571,"nodeType":"OverrideSpecifier","overrides":[],"src":"8183:8:33"},"parameters":{"id":9570,"nodeType":"ParameterList","parameters":[],"src":"8166:2:33"},"returnParameters":{"id":9574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9578,"src":"8201:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9572,"name":"string","nodeType":"ElementaryTypeName","src":"8201:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8200:15:33"},"scope":9702,"src":"8138:120:33","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9594,"nodeType":"Block","src":"8335:105:33","statements":[{"assignments":[9584],"declarations":[{"constant":false,"id":9584,"mutability":"mutable","name":"currentDay","nameLocation":"8354:10:33","nodeType":"VariableDeclaration","scope":9594,"src":"8346:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9583,"name":"uint256","nodeType":"ElementaryTypeName","src":"8346:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9589,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9585,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8367:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8373:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"8367:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8385:6:33","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"8367:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8346:45:33"},{"expression":{"baseExpression":{"id":9590,"name":"dailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"8409:11:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9592,"indexExpression":{"id":9591,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"8421:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8409:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9582,"id":9593,"nodeType":"Return","src":"8402:30:33"}]},"functionSelector":"ae6e0145","id":9595,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentDailyVolume","nameLocation":"8279:21:33","nodeType":"FunctionDefinition","parameters":{"id":9579,"nodeType":"ParameterList","parameters":[],"src":"8300:2:33"},"returnParameters":{"id":9582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9595,"src":"8326:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9580,"name":"uint256","nodeType":"ElementaryTypeName","src":"8326:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8325:9:33"},"scope":9702,"src":"8270:170:33","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9611,"nodeType":"Block","src":"8518:109:33","statements":[{"assignments":[9601],"declarations":[{"constant":false,"id":9601,"mutability":"mutable","name":"currentHour","nameLocation":"8537:11:33","nodeType":"VariableDeclaration","scope":9611,"src":"8529:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9600,"name":"uint256","nodeType":"ElementaryTypeName","src":"8529:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9606,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9602,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8551:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8557:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"8551:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8569:7:33","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"8551:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8529:47:33"},{"expression":{"baseExpression":{"id":9607,"name":"hourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"8594:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9609,"indexExpression":{"id":9608,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"8607:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8594:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9599,"id":9610,"nodeType":"Return","src":"8587:32:33"}]},"functionSelector":"a7e02d75","id":9612,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentHourlyVolume","nameLocation":"8461:22:33","nodeType":"FunctionDefinition","parameters":{"id":9596,"nodeType":"ParameterList","parameters":[],"src":"8483:2:33"},"returnParameters":{"id":9599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9612,"src":"8509:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9597,"name":"uint256","nodeType":"ElementaryTypeName","src":"8509:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8508:9:33"},"scope":9702,"src":"8452:175:33","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9628,"nodeType":"Block","src":"8712:116:33","statements":[{"assignments":[9618],"declarations":[{"constant":false,"id":9618,"mutability":"mutable","name":"currentHour","nameLocation":"8731:11:33","nodeType":"VariableDeclaration","scope":9628,"src":"8723:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9617,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9623,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9619,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8745:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8751:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"8745:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8763:7:33","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"8745:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8723:47:33"},{"expression":{"baseExpression":{"id":9624,"name":"hourlyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"8788:19:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9626,"indexExpression":{"id":9625,"name":"currentHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"8808:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8788:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9616,"id":9627,"nodeType":"Return","src":"8781:39:33"}]},"functionSelector":"7c5cf169","id":9629,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentHourlyTransferCount","nameLocation":"8648:29:33","nodeType":"FunctionDefinition","parameters":{"id":9613,"nodeType":"ParameterList","parameters":[],"src":"8677:2:33"},"returnParameters":{"id":9616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9629,"src":"8703:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9614,"name":"uint256","nodeType":"ElementaryTypeName","src":"8703:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8702:9:33"},"scope":9702,"src":"8639:189:33","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9645,"nodeType":"Block","src":"8912:112:33","statements":[{"assignments":[9635],"declarations":[{"constant":false,"id":9635,"mutability":"mutable","name":"currentDay","nameLocation":"8931:10:33","nodeType":"VariableDeclaration","scope":9645,"src":"8923:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8923:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9640,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9636,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8944:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8950:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"8944:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":9638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:6:33","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"8944:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8923:45:33"},{"expression":{"baseExpression":{"id":9641,"name":"dailyTransferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9093,"src":"8986:18:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9643,"indexExpression":{"id":9642,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9635,"src":"9005:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8986:30:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9633,"id":9644,"nodeType":"Return","src":"8979:37:33"}]},"functionSelector":"13935857","id":9646,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentDailyTransferCount","nameLocation":"8849:28:33","nodeType":"FunctionDefinition","parameters":{"id":9630,"nodeType":"ParameterList","parameters":[],"src":"8877:2:33"},"returnParameters":{"id":9633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9646,"src":"8903:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9631,"name":"uint256","nodeType":"ElementaryTypeName","src":"8903:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8902:9:33"},"scope":9702,"src":"8840:184:33","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9700,"nodeType":"Block","src":"9455:400:33","statements":[{"expression":{"id":9670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9668,"name":"maxDailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"9466:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9669,"name":"_maxDailyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9648,"src":"9483:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9466:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9671,"nodeType":"ExpressionStatement","src":"9466:32:33"},{"expression":{"id":9674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9672,"name":"maxHourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"9509:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9673,"name":"_maxHourlyVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9650,"src":"9527:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9509:34:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9675,"nodeType":"ExpressionStatement","src":"9509:34:33"},{"expression":{"id":9678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9676,"name":"maxSingleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"9554:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9677,"name":"_maxSingleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"9574:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9554:38:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9679,"nodeType":"ExpressionStatement","src":"9554:38:33"},{"expression":{"id":9682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9680,"name":"maxTransfersPerHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9067,"src":"9603:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9681,"name":"_maxTransfersPerHour","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9654,"src":"9625:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9603:42:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9683,"nodeType":"ExpressionStatement","src":"9603:42:33"},{"expression":{"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9684,"name":"maxTransfersPerDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9069,"src":"9656:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9685,"name":"_maxTransfersPerDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9656,"src":"9677:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9656:40:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9687,"nodeType":"ExpressionStatement","src":"9656:40:33"},{"expression":{"id":9690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9688,"name":"maxFailedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"9707:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9689,"name":"_maxFailedAttempts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"9727:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9707:38:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9691,"nodeType":"ExpressionStatement","src":"9707:38:33"},{"expression":{"id":9694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9692,"name":"failedAttemptWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"9756:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9693,"name":"_failedAttemptWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9660,"src":"9778:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9756:42:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9695,"nodeType":"ExpressionStatement","src":"9756:42:33"},{"expression":{"id":9698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9696,"name":"autoResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9075,"src":"9809:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9697,"name":"_autoResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9662,"src":"9829:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9809:38:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9699,"nodeType":"ExpressionStatement","src":"9809:38:33"}]},"functionSelector":"fd270b8d","id":9701,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9665,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"9435:18:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9666,"kind":"modifierInvocation","modifierName":{"id":9664,"name":"onlyRole","nameLocations":["9426:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"9426:8:33"},"nodeType":"ModifierInvocation","src":"9426:28:33"}],"name":"updateLimits","nameLocation":"9101:12:33","nodeType":"FunctionDefinition","parameters":{"id":9663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9648,"mutability":"mutable","name":"_maxDailyVolume","nameLocation":"9132:15:33","nodeType":"VariableDeclaration","scope":9701,"src":"9124:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9647,"name":"uint256","nodeType":"ElementaryTypeName","src":"9124:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9650,"mutability":"mutable","name":"_maxHourlyVolume","nameLocation":"9166:16:33","nodeType":"VariableDeclaration","scope":9701,"src":"9158:24:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9649,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9652,"mutability":"mutable","name":"_maxSingleTransfer","nameLocation":"9201:18:33","nodeType":"VariableDeclaration","scope":9701,"src":"9193:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9651,"name":"uint256","nodeType":"ElementaryTypeName","src":"9193:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9654,"mutability":"mutable","name":"_maxTransfersPerHour","nameLocation":"9238:20:33","nodeType":"VariableDeclaration","scope":9701,"src":"9230:28:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9653,"name":"uint256","nodeType":"ElementaryTypeName","src":"9230:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9656,"mutability":"mutable","name":"_maxTransfersPerDay","nameLocation":"9277:19:33","nodeType":"VariableDeclaration","scope":9701,"src":"9269:27:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9655,"name":"uint256","nodeType":"ElementaryTypeName","src":"9269:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9658,"mutability":"mutable","name":"_maxFailedAttempts","nameLocation":"9315:18:33","nodeType":"VariableDeclaration","scope":9701,"src":"9307:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9657,"name":"uint256","nodeType":"ElementaryTypeName","src":"9307:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9660,"mutability":"mutable","name":"_failedAttemptWindow","nameLocation":"9352:20:33","nodeType":"VariableDeclaration","scope":9701,"src":"9344:28:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9659,"name":"uint256","nodeType":"ElementaryTypeName","src":"9344:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9662,"mutability":"mutable","name":"_autoResetInterval","nameLocation":"9391:18:33","nodeType":"VariableDeclaration","scope":9701,"src":"9383:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9661,"name":"uint256","nodeType":"ElementaryTypeName","src":"9383:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9113:303:33"},"returnParameters":{"id":9667,"nodeType":"ParameterList","parameters":[],"src":"9455:0:33"},"scope":9702,"src":"9092:763:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9703,"src":"461:9397:33","usedErrors":[381,384,1846,1849,2490,2493,9139,9141,9143,9145,9147,9149],"usedEvents":[389,1838,1843,2502,2511,2520,9107,9111,9119,9127,9133,9137]}],"src":"33:9827:33"},"id":33},"contracts/NEBA.sol":{"ast":{"absolutePath":"contracts/NEBA.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[1696],"ECDSA":[5408],"EIP712Upgradeable":[2440],"ERC165Upgradeable":[2480],"ERC1967Utils":[3050],"ERC20PausableUpgradeable":[1481],"ERC20PermitUpgradeable":[1650],"ERC20Upgradeable":[1431],"IAccessControl":[2563],"ICircuitBreaker":[11602],"IERC165":[5506],"IERC1822Proxiable":[2619],"IERC20":[3138],"IERC20Errors":[2661],"IERC20Metadata":[3164],"IERC20Permit":[3200],"ITransferHook":[11626],"Initializable":[632],"NEBA":[11150],"NoncesUpgradeable":[1807],"PausableUpgradeable":[1967],"ReentrancyGuardUpgradeable":[2096],"UUPSUpgradeable":[814]},"id":11151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9704,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:34"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":9705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":1432,"src":"61:78:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","id":9706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":1482,"src":"141:97:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":9707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":365,"src":"240:81:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","id":9708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":1651,"src":"323:95:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":9709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":815,"src":"420:77:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":9710,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":2097,"src":"499:82:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":9711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":1968,"src":"583:75:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ITransferHook.sol","file":"./interfaces/ITransferHook.sol","id":9712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":11627,"src":"660:40:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ICircuitBreaker.sol","file":"./interfaces/ICircuitBreaker.sol","id":9713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11151,"sourceUnit":11603,"src":"702:42:34","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9715,"name":"ERC20Upgradeable","nameLocations":["1052:16:34"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"1052:16:34"},"id":9716,"nodeType":"InheritanceSpecifier","src":"1052:16:34"},{"baseName":{"id":9717,"name":"ERC20PausableUpgradeable","nameLocations":["1075:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":1481,"src":"1075:24:34"},"id":9718,"nodeType":"InheritanceSpecifier","src":"1075:24:34"},{"baseName":{"id":9719,"name":"AccessControlUpgradeable","nameLocations":["1106:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"1106:24:34"},"id":9720,"nodeType":"InheritanceSpecifier","src":"1106:24:34"},{"baseName":{"id":9721,"name":"ERC20PermitUpgradeable","nameLocations":["1137:22:34"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"1137:22:34"},"id":9722,"nodeType":"InheritanceSpecifier","src":"1137:22:34"},{"baseName":{"id":9723,"name":"UUPSUpgradeable","nameLocations":["1166:15:34"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"1166:15:34"},"id":9724,"nodeType":"InheritanceSpecifier","src":"1166:15:34"},{"baseName":{"id":9725,"name":"ReentrancyGuardUpgradeable","nameLocations":["1188:26:34"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"1188:26:34"},"id":9726,"nodeType":"InheritanceSpecifier","src":"1188:26:34"}],"canonicalName":"NEBA","contractDependencies":[],"contractKind":"contract","documentation":{"id":9714,"nodeType":"StructuredDocumentation","src":"748:279:34","text":" @title NEBA Token\n @dev Phase 1 implementation of NEBA Token with hardened security, upgradability, and compliance features\n @author NEBA Development Team\n @notice This contract implements ERC-20 with additional security, compliance, and governance features"},"fullyImplemented":true,"id":11150,"linearizedBaseContracts":[11150,2096,814,2619,1650,1807,2440,2609,3200,364,2480,5506,2563,1481,1967,1431,2661,3164,3138,1696,632],"name":"NEBA","nameLocation":"1038:4:34","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":9727,"nodeType":"StructuredDocumentation","src":"1328:50:34","text":"@notice Maximum total supply: 1 billion tokens"},"functionSelector":"32cb6b0c","id":9734,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"1408:10:34","nodeType":"VariableDeclaration","scope":11150,"src":"1384:59:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1384:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":9733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f3030305f303030","id":9729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1421:13:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":9732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1437:2:34","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":9731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1441:2:34","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1437:6:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1421:22:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"visibility":"public"},{"constant":true,"documentation":{"id":9735,"nodeType":"StructuredDocumentation","src":"1456:22:34","text":"@notice Token name"},"functionSelector":"18821400","id":9738,"mutability":"constant","name":"TOKEN_NAME","nameLocation":"1507:10:34","nodeType":"VariableDeclaration","scope":11150,"src":"1484:48:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9736,"name":"string","nodeType":"ElementaryTypeName","src":"1484:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4e45424120546f6b656e","id":9737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1520:12:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_82b445f4ede3c69cb348b965c7dca97c2ec7658cde3e4fd8baefb6139c5d3088","typeString":"literal_string \"NEBA Token\""},"value":"NEBA Token"},"visibility":"public"},{"constant":true,"documentation":{"id":9739,"nodeType":"StructuredDocumentation","src":"1545:24:34","text":"@notice Token symbol"},"functionSelector":"2a905318","id":9742,"mutability":"constant","name":"TOKEN_SYMBOL","nameLocation":"1598:12:34","nodeType":"VariableDeclaration","scope":11150,"src":"1575:45:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9740,"name":"string","nodeType":"ElementaryTypeName","src":"1575:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"244e454241","id":9741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1613:7:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_04dc242102e457ec4b14de2a4d728fb3eeaa7f598cacad2a756031b2d0d526fc","typeString":"literal_string \"$NEBA\""},"value":"$NEBA"},"visibility":"public"},{"constant":true,"documentation":{"id":9743,"nodeType":"StructuredDocumentation","src":"1633:26:34","text":"@notice Token decimals"},"functionSelector":"5b7f415c","id":9746,"mutability":"constant","name":"TOKEN_DECIMALS","nameLocation":"1687:14:34","nodeType":"VariableDeclaration","scope":11150,"src":"1665:41:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9744,"name":"uint8","nodeType":"ElementaryTypeName","src":"1665:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":9745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1704:2:34","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":true,"documentation":{"id":9747,"nodeType":"StructuredDocumentation","src":"1761:43:34","text":"@notice Role for upgrading the contract"},"functionSelector":"f72c0d8b","id":9752,"mutability":"constant","name":"UPGRADER_ROLE","nameLocation":"1834:13:34","nodeType":"VariableDeclaration","scope":11150,"src":"1810:66:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1810:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504752414445525f524f4c45","id":9750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1860:15:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""},"value":"UPGRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""}],"id":9749,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1850:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1850:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9753,"nodeType":"StructuredDocumentation","src":"1889:75:34","text":"@notice Role for the Multisig. Has full control: Can pause AND unpause."},"functionSelector":"42275c59","id":9758,"mutability":"constant","name":"ADMIN_PAUSER_ROLE","nameLocation":"1994:17:34","nodeType":"VariableDeclaration","scope":11150,"src":"1970:74:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1970:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f5041555345525f524f4c45","id":9756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2024:19:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_365fccb66c62533ad1447fec73f7b764cf03ac69d512070f7c0aa889025cec19","typeString":"literal_string \"ADMIN_PAUSER_ROLE\""},"value":"ADMIN_PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_365fccb66c62533ad1447fec73f7b764cf03ac69d512070f7c0aa889025cec19","typeString":"literal_string \"ADMIN_PAUSER_ROLE\""}],"id":9755,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2014:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9759,"nodeType":"StructuredDocumentation","src":"2057:93:34","text":"@notice Role for automated bots (Keepers/Sentinels). Has limited control: Can ONLY pause."},"functionSelector":"0b06806a","id":9764,"mutability":"constant","name":"BOT_PAUSER_ROLE","nameLocation":"2180:15:34","nodeType":"VariableDeclaration","scope":11150,"src":"2156:70:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2156:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"424f545f5041555345525f524f4c45","id":9762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2208:17:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf8b034af7a434c44d9299a66a1071085478bb9a7fdc1f0ebcb5d36dc76f02b2","typeString":"literal_string \"BOT_PAUSER_ROLE\""},"value":"BOT_PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bf8b034af7a434c44d9299a66a1071085478bb9a7fdc1f0ebcb5d36dc76f02b2","typeString":"literal_string \"BOT_PAUSER_ROLE\""}],"id":9761,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2198:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2198:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9765,"nodeType":"StructuredDocumentation","src":"2239:74:34","text":"@notice Role for governance unpausing (unpause only, through Timelock)"},"functionSelector":"9632874b","id":9770,"mutability":"constant","name":"GOVERNANCE_UNPAUSER_ROLE","nameLocation":"2343:24:34","nodeType":"VariableDeclaration","scope":11150,"src":"2319:88:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2319:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"474f5645524e414e43455f554e5041555345525f524f4c45","id":9768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2380:26:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b","typeString":"literal_string \"GOVERNANCE_UNPAUSER_ROLE\""},"value":"GOVERNANCE_UNPAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b","typeString":"literal_string \"GOVERNANCE_UNPAUSER_ROLE\""}],"id":9767,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2370:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:37:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9771,"nodeType":"StructuredDocumentation","src":"2420:63:34","text":"@notice Role for emergency guardian (pause only, immediate)"},"functionSelector":"ea4b7dcd","id":9776,"mutability":"constant","name":"EMERGENCY_GUARDIAN_ROLE","nameLocation":"2513:23:34","nodeType":"VariableDeclaration","scope":11150,"src":"2489:86:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2489:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454d455247454e43595f475541524449414e5f524f4c45","id":9774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2549:25:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_93a9ea60add98726fcd12f31bd91d98faf4378bac52abb4f48e807756ced77a1","typeString":"literal_string \"EMERGENCY_GUARDIAN_ROLE\""},"value":"EMERGENCY_GUARDIAN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_93a9ea60add98726fcd12f31bd91d98faf4378bac52abb4f48e807756ced77a1","typeString":"literal_string \"EMERGENCY_GUARDIAN_ROLE\""}],"id":9773,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2539:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2539:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9777,"nodeType":"StructuredDocumentation","src":"2588:39:34","text":"@notice Role for managing blocklist"},"functionSelector":"1872223f","id":9782,"mutability":"constant","name":"BLOCKLIST_MANAGER_ROLE","nameLocation":"2657:22:34","nodeType":"VariableDeclaration","scope":11150,"src":"2633:84:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2633:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"424c4f434b4c4953545f4d414e414745525f524f4c45","id":9780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2692:24:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d917161","typeString":"literal_string \"BLOCKLIST_MANAGER_ROLE\""},"value":"BLOCKLIST_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d917161","typeString":"literal_string \"BLOCKLIST_MANAGER_ROLE\""}],"id":9779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2682:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:35:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9783,"nodeType":"StructuredDocumentation","src":"2730:39:34","text":"@notice Role for managing whitelist"},"functionSelector":"7295ed93","id":9788,"mutability":"constant","name":"WHITELIST_MANAGER_ROLE","nameLocation":"2799:22:34","nodeType":"VariableDeclaration","scope":11150,"src":"2775:84:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2775:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"57484954454c4953545f4d414e414745525f524f4c45","id":9786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2834:24:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a868","typeString":"literal_string \"WHITELIST_MANAGER_ROLE\""},"value":"WHITELIST_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a868","typeString":"literal_string \"WHITELIST_MANAGER_ROLE\""}],"id":9785,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2824:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:35:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9789,"nodeType":"StructuredDocumentation","src":"2872:47:34","text":"@notice Role for circuit breaker management"},"functionSelector":"e54e55ae","id":9794,"mutability":"constant","name":"CIRCUIT_BREAKER_ROLE","nameLocation":"2949:20:34","nodeType":"VariableDeclaration","scope":11150,"src":"2925:80:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2925:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"434952435549545f425245414b45525f524f4c45","id":9792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2982:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a265492","typeString":"literal_string \"CIRCUIT_BREAKER_ROLE\""},"value":"CIRCUIT_BREAKER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a265492","typeString":"literal_string \"CIRCUIT_BREAKER_ROLE\""}],"id":9791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2972:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9795,"nodeType":"StructuredDocumentation","src":"3018:41:34","text":"@notice Role for parameter management"},"functionSelector":"dc62caf5","id":9800,"mutability":"constant","name":"PARAM_MANAGER_ROLE","nameLocation":"3089:18:34","nodeType":"VariableDeclaration","scope":11150,"src":"3065:76:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3065:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"504152414d5f4d414e414745525f524f4c45","id":9798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3120:20:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9dc316fa34ae880f78d85d5ce397feb0c9fbe2fc8ebf721a7d1646cabaf7f8c","typeString":"literal_string \"PARAM_MANAGER_ROLE\""},"value":"PARAM_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e9dc316fa34ae880f78d85d5ce397feb0c9fbe2fc8ebf721a7d1646cabaf7f8c","typeString":"literal_string \"PARAM_MANAGER_ROLE\""}],"id":9797,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3110:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3110:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9801,"nodeType":"StructuredDocumentation","src":"3154:41:34","text":"@notice Role for financial operations"},"functionSelector":"349b5954","id":9806,"mutability":"constant","name":"FINANCE_ROLE","nameLocation":"3225:12:34","nodeType":"VariableDeclaration","scope":11150,"src":"3201:64:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3201:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"46494e414e43455f524f4c45","id":9804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3250:14:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_940d6b1946ff1d2b5a9f1909219c3c81a370804b5ba0f91ec0828c99a2e6a681","typeString":"literal_string \"FINANCE_ROLE\""},"value":"FINANCE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_940d6b1946ff1d2b5a9f1909219c3c81a370804b5ba0f91ec0828c99a2e6a681","typeString":"literal_string \"FINANCE_ROLE\""}],"id":9803,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3240:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3240:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":9807,"nodeType":"StructuredDocumentation","src":"3278:40:34","text":"@notice Role for snapshot management"},"functionSelector":"7028e2cd","id":9812,"mutability":"constant","name":"SNAPSHOT_ROLE","nameLocation":"3348:13:34","nodeType":"VariableDeclaration","scope":11150,"src":"3324:66:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"534e415053484f545f524f4c45","id":9810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3374:15:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f","typeString":"literal_string \"SNAPSHOT_ROLE\""},"value":"SNAPSHOT_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f","typeString":"literal_string \"SNAPSHOT_ROLE\""}],"id":9809,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3364:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3364:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":9813,"nodeType":"StructuredDocumentation","src":"3455:51:34","text":"@notice Treasury address (Gnosis Safe Multisig)"},"functionSelector":"61d027b3","id":9815,"mutability":"mutable","name":"treasury","nameLocation":"3527:8:34","nodeType":"VariableDeclaration","scope":11150,"src":"3512:23:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9814,"name":"address","nodeType":"ElementaryTypeName","src":"3512:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":9816,"nodeType":"StructuredDocumentation","src":"3548:54:34","text":"@notice Blocklist mapping for restricted addresses"},"functionSelector":"e5c7160b","id":9820,"mutability":"mutable","name":"blocklist","nameLocation":"3640:9:34","nodeType":"VariableDeclaration","scope":11150,"src":"3608:41:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9819,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9817,"name":"address","nodeType":"ElementaryTypeName","src":"3616:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3608:24:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9818,"name":"bool","nodeType":"ElementaryTypeName","src":"3627:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":9821,"nodeType":"StructuredDocumentation","src":"3662:52:34","text":"@notice Whitelist mapping for approved addresses"},"functionSelector":"9b19251a","id":9825,"mutability":"mutable","name":"whitelist","nameLocation":"3752:9:34","nodeType":"VariableDeclaration","scope":11150,"src":"3720:41:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9824,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9822,"name":"address","nodeType":"ElementaryTypeName","src":"3728:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3720:24:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9823,"name":"bool","nodeType":"ElementaryTypeName","src":"3739:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":9826,"nodeType":"StructuredDocumentation","src":"3774:46:34","text":"@notice Transfer restrictions enabled flag"},"functionSelector":"45cb1258","id":9828,"mutability":"mutable","name":"transferRestrictionsEnabled","nameLocation":"3838:27:34","nodeType":"VariableDeclaration","scope":11150,"src":"3826:39:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9827,"name":"bool","nodeType":"ElementaryTypeName","src":"3826:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":9829,"nodeType":"StructuredDocumentation","src":"3878:32:34","text":"@notice Trading enabled flag"},"functionSelector":"4ada218b","id":9831,"mutability":"mutable","name":"tradingEnabled","nameLocation":"3928:14:34","nodeType":"VariableDeclaration","scope":11150,"src":"3916:26:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9830,"name":"bool","nodeType":"ElementaryTypeName","src":"3916:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":9832,"nodeType":"StructuredDocumentation","src":"3955:36:34","text":"@notice Circuit breaker contract"},"functionSelector":"16efd941","id":9835,"mutability":"mutable","name":"circuitBreaker","nameLocation":"4020:14:34","nodeType":"VariableDeclaration","scope":11150,"src":"3997:37:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"},"typeName":{"id":9834,"nodeType":"UserDefinedTypeName","pathNode":{"id":9833,"name":"ICircuitBreaker","nameLocations":["3997:15:34"],"nodeType":"IdentifierPath","referencedDeclaration":11602,"src":"3997:15:34"},"referencedDeclaration":11602,"src":"3997:15:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}},"visibility":"public"},{"constant":false,"documentation":{"id":9836,"nodeType":"StructuredDocumentation","src":"4047:34:34","text":"@notice Transfer hook contract"},"functionSelector":"82bc7bc9","id":9839,"mutability":"mutable","name":"transferHook","nameLocation":"4108:12:34","nodeType":"VariableDeclaration","scope":11150,"src":"4087:33:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"},"typeName":{"id":9838,"nodeType":"UserDefinedTypeName","pathNode":{"id":9837,"name":"ITransferHook","nameLocations":["4087:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":11626,"src":"4087:13:34"},"referencedDeclaration":11626,"src":"4087:13:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"visibility":"public"},{"constant":false,"documentation":{"id":9840,"nodeType":"StructuredDocumentation","src":"4133:54:34","text":"@notice Commit-reveal scheme for sensitive updates"},"functionSelector":"47885781","id":9844,"mutability":"mutable","name":"commits","nameLocation":"4228:7:34","nodeType":"VariableDeclaration","scope":11150,"src":"4193:42:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":9843,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4201:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"4193:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4212:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":9845,"nodeType":"StructuredDocumentation","src":"4248:35:34","text":"@notice Commit timeout duration"},"functionSelector":"b60095a5","id":9847,"mutability":"mutable","name":"commitTimeout","nameLocation":"4304:13:34","nodeType":"VariableDeclaration","scope":11150,"src":"4289:28:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4289:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":9848,"nodeType":"StructuredDocumentation","src":"4330:33:34","text":"@notice Snapshot data mapping"},"functionSelector":"d6565a2d","id":9853,"mutability":"mutable","name":"snapshots","nameLocation":"4409:9:34","nodeType":"VariableDeclaration","scope":11150,"src":"4369:49:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SnapshotData_$9874_storage_$","typeString":"mapping(uint256 => struct NEBA.SnapshotData)"},"typeName":{"id":9852,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4369:32:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SnapshotData_$9874_storage_$","typeString":"mapping(uint256 => struct NEBA.SnapshotData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9851,"nodeType":"UserDefinedTypeName","pathNode":{"id":9850,"name":"SnapshotData","nameLocations":["4388:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":9874,"src":"4388:12:34"},"referencedDeclaration":9874,"src":"4388:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_storage_ptr","typeString":"struct NEBA.SnapshotData"}}},"visibility":"public"},{"constant":false,"documentation":{"id":9854,"nodeType":"StructuredDocumentation","src":"4431:39:34","text":"@notice Current snapshot ID counter"},"functionSelector":"970875ce","id":9856,"mutability":"mutable","name":"currentSnapshotId","nameLocation":"4491:17:34","nodeType":"VariableDeclaration","scope":11150,"src":"4476:32:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":9857,"nodeType":"StructuredDocumentation","src":"4521:33:34","text":"@notice Circuit breaker state"},"functionSelector":"51108cac","id":9859,"mutability":"mutable","name":"circuitBreakerTriggered","nameLocation":"4572:23:34","nodeType":"VariableDeclaration","scope":11150,"src":"4560:35:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9858,"name":"bool","nodeType":"ElementaryTypeName","src":"4560:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":9860,"nodeType":"StructuredDocumentation","src":"4608:43:34","text":"@notice Last circuit breaker reset time"},"functionSelector":"15926257","id":9862,"mutability":"mutable","name":"lastCircuitBreakerReset","nameLocation":"4672:23:34","nodeType":"VariableDeclaration","scope":11150,"src":"4657:38:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9861,"name":"uint256","nodeType":"ElementaryTypeName","src":"4657:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":9863,"nodeType":"StructuredDocumentation","src":"4708:42:34","text":"@notice Circuit breaker reset interval"},"functionSelector":"2fbf02d4","id":9865,"mutability":"mutable","name":"circuitBreakerResetInterval","nameLocation":"4771:27:34","nodeType":"VariableDeclaration","scope":11150,"src":"4756:42:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9864,"name":"uint256","nodeType":"ElementaryTypeName","src":"4756:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"NEBA.SnapshotData","id":9874,"members":[{"constant":false,"id":9867,"mutability":"mutable","name":"id","nameLocation":"4894:2:34","nodeType":"VariableDeclaration","scope":9874,"src":"4886:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9866,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9869,"mutability":"mutable","name":"timestamp","nameLocation":"4915:9:34","nodeType":"VariableDeclaration","scope":9874,"src":"4907:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9868,"name":"uint256","nodeType":"ElementaryTypeName","src":"4907:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9871,"mutability":"mutable","name":"totalSupply","nameLocation":"4943:11:34","nodeType":"VariableDeclaration","scope":9874,"src":"4935:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4935:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9873,"mutability":"mutable","name":"active","nameLocation":"4970:6:34","nodeType":"VariableDeclaration","scope":9874,"src":"4965:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9872,"name":"bool","nodeType":"ElementaryTypeName","src":"4965:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SnapshotData","nameLocation":"4862:12:34","nodeType":"StructDefinition","scope":11150,"src":"4855:129:34","visibility":"public"},{"canonicalName":"NEBA.CommitData","id":9881,"members":[{"constant":false,"id":9876,"mutability":"mutable","name":"commit","nameLocation":"5033:6:34","nodeType":"VariableDeclaration","scope":9881,"src":"5025:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5025:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9878,"mutability":"mutable","name":"timestamp","nameLocation":"5058:9:34","nodeType":"VariableDeclaration","scope":9881,"src":"5050:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9880,"mutability":"mutable","name":"revealed","nameLocation":"5083:8:34","nodeType":"VariableDeclaration","scope":9881,"src":"5078:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9879,"name":"bool","nodeType":"ElementaryTypeName","src":"5078:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"CommitData","nameLocation":"5003:10:34","nodeType":"StructDefinition","scope":11150,"src":"4996:103:34","visibility":"public"},{"anonymous":false,"eventSelector":"4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a","id":9887,"name":"TreasuryUpdated","nameLocation":"5160:15:34","nodeType":"EventDefinition","parameters":{"id":9886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9883,"indexed":true,"mutability":"mutable","name":"oldTreasury","nameLocation":"5192:11:34","nodeType":"VariableDeclaration","scope":9887,"src":"5176:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9882,"name":"address","nodeType":"ElementaryTypeName","src":"5176:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9885,"indexed":true,"mutability":"mutable","name":"newTreasury","nameLocation":"5221:11:34","nodeType":"VariableDeclaration","scope":9887,"src":"5205:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9884,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5175:58:34"},"src":"5154:80:34"},{"anonymous":false,"eventSelector":"2df5e71bacf8a1a1d232ad715b36ae4617b1f75e7c6283373a54c96556cae754","id":9893,"name":"BlocklistUpdated","nameLocation":"5246:16:34","nodeType":"EventDefinition","parameters":{"id":9892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9889,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"5279:7:34","nodeType":"VariableDeclaration","scope":9893,"src":"5263:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9888,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9891,"indexed":false,"mutability":"mutable","name":"blocked","nameLocation":"5293:7:34","nodeType":"VariableDeclaration","scope":9893,"src":"5288:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9890,"name":"bool","nodeType":"ElementaryTypeName","src":"5288:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5262:39:34"},"src":"5240:62:34"},{"anonymous":false,"eventSelector":"f93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d","id":9899,"name":"WhitelistUpdated","nameLocation":"5314:16:34","nodeType":"EventDefinition","parameters":{"id":9898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9895,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"5347:7:34","nodeType":"VariableDeclaration","scope":9899,"src":"5331:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9894,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9897,"indexed":false,"mutability":"mutable","name":"whitelisted","nameLocation":"5361:11:34","nodeType":"VariableDeclaration","scope":9899,"src":"5356:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9896,"name":"bool","nodeType":"ElementaryTypeName","src":"5356:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5330:43:34"},"src":"5308:66:34"},{"anonymous":false,"eventSelector":"a120777524474df4e22abe93a0b3dccb74b3093cdbb842f4f6e32d2bf0ce63bc","id":9903,"name":"TransferRestrictionsToggled","nameLocation":"5386:27:34","nodeType":"EventDefinition","parameters":{"id":9902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9901,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"5419:7:34","nodeType":"VariableDeclaration","scope":9903,"src":"5414:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9900,"name":"bool","nodeType":"ElementaryTypeName","src":"5414:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5413:14:34"},"src":"5380:48:34"},{"anonymous":false,"eventSelector":"b3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e923","id":9907,"name":"TradingEnabled","nameLocation":"5440:14:34","nodeType":"EventDefinition","parameters":{"id":9906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9905,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"5463:9:34","nodeType":"VariableDeclaration","scope":9907,"src":"5455:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9904,"name":"uint256","nodeType":"ElementaryTypeName","src":"5455:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5454:19:34"},"src":"5434:40:34"},{"anonymous":false,"eventSelector":"ad6ede2bab15d4cc29f9aa4e11f38e7bffe6fe0296e8928492a62d29a8ab11d6","id":9913,"name":"CircuitBreakerUpdated","nameLocation":"5486:21:34","nodeType":"EventDefinition","parameters":{"id":9912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9909,"indexed":true,"mutability":"mutable","name":"oldBreaker","nameLocation":"5524:10:34","nodeType":"VariableDeclaration","scope":9913,"src":"5508:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9908,"name":"address","nodeType":"ElementaryTypeName","src":"5508:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9911,"indexed":true,"mutability":"mutable","name":"newBreaker","nameLocation":"5552:10:34","nodeType":"VariableDeclaration","scope":9913,"src":"5536:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9910,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5507:56:34"},"src":"5480:84:34"},{"anonymous":false,"eventSelector":"c370610a8c5f2daecdb3a2566e9a30f7969dc29704bf228fcc9a1a64ccd67138","id":9919,"name":"TransferHookUpdated","nameLocation":"5576:19:34","nodeType":"EventDefinition","parameters":{"id":9918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9915,"indexed":true,"mutability":"mutable","name":"oldHook","nameLocation":"5612:7:34","nodeType":"VariableDeclaration","scope":9919,"src":"5596:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9914,"name":"address","nodeType":"ElementaryTypeName","src":"5596:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9917,"indexed":true,"mutability":"mutable","name":"newHook","nameLocation":"5637:7:34","nodeType":"VariableDeclaration","scope":9919,"src":"5621:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9916,"name":"address","nodeType":"ElementaryTypeName","src":"5621:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5595:50:34"},"src":"5570:76:34"},{"anonymous":false,"eventSelector":"f0ca201a259f21761e7392673b3e9269933e13069f2081af411cb4079825f842","id":9925,"name":"CircuitBreakerTriggered","nameLocation":"5658:23:34","nodeType":"EventDefinition","parameters":{"id":9924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9921,"indexed":true,"mutability":"mutable","name":"triggerer","nameLocation":"5698:9:34","nodeType":"VariableDeclaration","scope":9925,"src":"5682:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9920,"name":"address","nodeType":"ElementaryTypeName","src":"5682:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9923,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"5716:6:34","nodeType":"VariableDeclaration","scope":9925,"src":"5709:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9922,"name":"string","nodeType":"ElementaryTypeName","src":"5709:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5681:42:34"},"src":"5652:72:34"},{"anonymous":false,"eventSelector":"749ce304ab81145be90b787a7777d030c801b4cfd19e6b30df21973a54ec004c","id":9927,"name":"CircuitBreakerReset","nameLocation":"5736:19:34","nodeType":"EventDefinition","parameters":{"id":9926,"nodeType":"ParameterList","parameters":[],"src":"5755:2:34"},"src":"5730:28:34"},{"anonymous":false,"eventSelector":"4c5620b7fb811e045f023b50b0c5fa3a4a14a640655c04bfb8530b58e779f900","id":9935,"name":"SnapshotCreated","nameLocation":"5770:15:34","nodeType":"EventDefinition","parameters":{"id":9934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9929,"indexed":true,"mutability":"mutable","name":"snapshotId","nameLocation":"5802:10:34","nodeType":"VariableDeclaration","scope":9935,"src":"5786:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5786:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9931,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"5822:9:34","nodeType":"VariableDeclaration","scope":9935,"src":"5814:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9930,"name":"uint256","nodeType":"ElementaryTypeName","src":"5814:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9933,"indexed":false,"mutability":"mutable","name":"totalSupply","nameLocation":"5841:11:34","nodeType":"VariableDeclaration","scope":9935,"src":"5833:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9932,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5785:68:34"},"src":"5764:90:34"},{"anonymous":false,"eventSelector":"93d98c19d9f85a53622c68b13046669ab48048057324f5300a2ce8692bb77191","id":9943,"name":"CommitCreated","nameLocation":"5866:13:34","nodeType":"EventDefinition","parameters":{"id":9942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9937,"indexed":true,"mutability":"mutable","name":"commit","nameLocation":"5896:6:34","nodeType":"VariableDeclaration","scope":9943,"src":"5880:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5880:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9939,"indexed":true,"mutability":"mutable","name":"committer","nameLocation":"5920:9:34","nodeType":"VariableDeclaration","scope":9943,"src":"5904:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9938,"name":"address","nodeType":"ElementaryTypeName","src":"5904:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9941,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"5939:9:34","nodeType":"VariableDeclaration","scope":9943,"src":"5931:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9940,"name":"uint256","nodeType":"ElementaryTypeName","src":"5931:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5879:70:34"},"src":"5860:90:34"},{"anonymous":false,"eventSelector":"81d0016ae442431196752190c857dddddebf8d309ed0b095312600407b3b3f43","id":9951,"name":"CommitRevealed","nameLocation":"5962:14:34","nodeType":"EventDefinition","parameters":{"id":9950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9945,"indexed":true,"mutability":"mutable","name":"commit","nameLocation":"5993:6:34","nodeType":"VariableDeclaration","scope":9951,"src":"5977:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5977:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9947,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"6009:6:34","nodeType":"VariableDeclaration","scope":9951,"src":"6001:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6001:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9949,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"6025:9:34","nodeType":"VariableDeclaration","scope":9951,"src":"6017:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9948,"name":"uint256","nodeType":"ElementaryTypeName","src":"6017:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5976:59:34"},"src":"5956:80:34"},{"anonymous":false,"eventSelector":"a45b854309f0bbcd0b5fe966bcc16c83a563411377ca9b86644a9aff98723a13","id":9957,"name":"ContractPaused","nameLocation":"6048:14:34","nodeType":"EventDefinition","parameters":{"id":9956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9953,"indexed":true,"mutability":"mutable","name":"pauser","nameLocation":"6079:6:34","nodeType":"VariableDeclaration","scope":9957,"src":"6063:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9952,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9955,"indexed":true,"mutability":"mutable","name":"pauseType","nameLocation":"6102:9:34","nodeType":"VariableDeclaration","scope":9957,"src":"6087:24:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9954,"name":"string","nodeType":"ElementaryTypeName","src":"6087:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6062:50:34"},"src":"6042:71:34"},{"anonymous":false,"eventSelector":"5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d11766","id":9961,"name":"ContractUnpaused","nameLocation":"6125:16:34","nodeType":"EventDefinition","parameters":{"id":9960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9959,"indexed":true,"mutability":"mutable","name":"unpauser","nameLocation":"6158:8:34","nodeType":"VariableDeclaration","scope":9961,"src":"6142:24:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9958,"name":"address","nodeType":"ElementaryTypeName","src":"6142:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6141:26:34"},"src":"6119:49:34"},{"errorSelector":"e6c4247b","id":9963,"name":"InvalidAddress","nameLocation":"6229:14:34","nodeType":"ErrorDefinition","parameters":{"id":9962,"nodeType":"ParameterList","parameters":[],"src":"6243:2:34"},"src":"6223:23:34"},{"errorSelector":"2c5211c6","id":9965,"name":"InvalidAmount","nameLocation":"6258:13:34","nodeType":"ErrorDefinition","parameters":{"id":9964,"nodeType":"ParameterList","parameters":[],"src":"6271:2:34"},"src":"6252:22:34"},{"errorSelector":"bc0286ce","id":9967,"name":"BlockedAddress","nameLocation":"6286:14:34","nodeType":"ErrorDefinition","parameters":{"id":9966,"nodeType":"ParameterList","parameters":[],"src":"6300:2:34"},"src":"6280:23:34"},{"errorSelector":"584a7938","id":9969,"name":"NotWhitelisted","nameLocation":"6315:14:34","nodeType":"ErrorDefinition","parameters":{"id":9968,"nodeType":"ParameterList","parameters":[],"src":"6329:2:34"},"src":"6309:23:34"},{"errorSelector":"8ec413b1","id":9971,"name":"TransferRestrictionsActive","nameLocation":"6344:26:34","nodeType":"ErrorDefinition","parameters":{"id":9970,"nodeType":"ParameterList","parameters":[],"src":"6370:2:34"},"src":"6338:35:34"},{"errorSelector":"ff0376e7","id":9973,"name":"CircuitBreakerActive","nameLocation":"6385:20:34","nodeType":"ErrorDefinition","parameters":{"id":9972,"nodeType":"ParameterList","parameters":[],"src":"6405:2:34"},"src":"6379:29:34"},{"errorSelector":"a13644b8","id":9975,"name":"CommitExpired","nameLocation":"6420:13:34","nodeType":"ErrorDefinition","parameters":{"id":9974,"nodeType":"ParameterList","parameters":[],"src":"6433:2:34"},"src":"6414:22:34"},{"errorSelector":"d1544b7c","id":9977,"name":"CommitNotFound","nameLocation":"6448:14:34","nodeType":"ErrorDefinition","parameters":{"id":9976,"nodeType":"ParameterList","parameters":[],"src":"6462:2:34"},"src":"6442:23:34"},{"errorSelector":"d331d27e","id":9979,"name":"CommitAlreadyRevealed","nameLocation":"6477:21:34","nodeType":"ErrorDefinition","parameters":{"id":9978,"nodeType":"ParameterList","parameters":[],"src":"6498:2:34"},"src":"6471:30:34"},{"errorSelector":"b7b33787","id":9981,"name":"InvalidCommit","nameLocation":"6513:13:34","nodeType":"ErrorDefinition","parameters":{"id":9980,"nodeType":"ParameterList","parameters":[],"src":"6526:2:34"},"src":"6507:22:34"},{"errorSelector":"48040a96","id":9983,"name":"SnapshotNotFound","nameLocation":"6541:16:34","nodeType":"ErrorDefinition","parameters":{"id":9982,"nodeType":"ParameterList","parameters":[],"src":"6557:2:34"},"src":"6535:25:34"},{"errorSelector":"3a617a54","id":9985,"name":"UnauthorizedUpgrade","nameLocation":"6572:19:34","nodeType":"ErrorDefinition","parameters":{"id":9984,"nodeType":"ParameterList","parameters":[],"src":"6591:2:34"},"src":"6566:28:34"},{"errorSelector":"12f1f923","id":9987,"name":"TradingNotEnabled","nameLocation":"6606:17:34","nodeType":"ErrorDefinition","parameters":{"id":9986,"nodeType":"ParameterList","parameters":[],"src":"6623:2:34"},"src":"6600:26:34"},{"errorSelector":"f1e667a8","id":9989,"name":"ParamCommitExpired","nameLocation":"6638:18:34","nodeType":"ErrorDefinition","parameters":{"id":9988,"nodeType":"ParameterList","parameters":[],"src":"6656:2:34"},"src":"6632:27:34"},{"body":{"id":10001,"nodeType":"Block","src":"6754:78:34","statements":[{"condition":{"baseExpression":{"id":9993,"name":"blocklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9820,"src":"6769:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9995,"indexExpression":{"id":9994,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9991,"src":"6779:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6769:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9999,"nodeType":"IfStatement","src":"6765:47:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9996,"name":"BlockedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9967,"src":"6796:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6796:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9998,"nodeType":"RevertStatement","src":"6789:23:34"}},{"id":10000,"nodeType":"PlaceholderStatement","src":"6823:1:34"}]},"id":10002,"name":"notBlocked","nameLocation":"6726:10:34","nodeType":"ModifierDefinition","parameters":{"id":9992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9991,"mutability":"mutable","name":"account","nameLocation":"6745:7:34","nodeType":"VariableDeclaration","scope":10002,"src":"6737:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9990,"name":"address","nodeType":"ElementaryTypeName","src":"6737:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6736:17:34"},"src":"6717:115:34","virtual":false,"visibility":"internal"},{"body":{"id":10022,"nodeType":"Block","src":"6886:159:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10006,"name":"transferRestrictionsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"6901:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":10010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6932:19:34","subExpression":{"baseExpression":{"id":10007,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"6933:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10009,"indexExpression":{"id":10008,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10004,"src":"6943:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6933:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6901:50:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10012,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10004,"src":"6955:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10013,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"6966:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6955:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6901:73:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10020,"nodeType":"IfStatement","src":"6897:129:34","trueBody":{"id":10019,"nodeType":"Block","src":"6976:50:34","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10016,"name":"NotWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9969,"src":"6998:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6998:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10018,"nodeType":"RevertStatement","src":"6991:23:34"}]}},{"id":10021,"nodeType":"PlaceholderStatement","src":"7036:1:34"}]},"id":10023,"name":"onlyWhitelisted","nameLocation":"6853:15:34","nodeType":"ModifierDefinition","parameters":{"id":10005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10004,"mutability":"mutable","name":"account","nameLocation":"6877:7:34","nodeType":"VariableDeclaration","scope":10023,"src":"6869:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10003,"name":"address","nodeType":"ElementaryTypeName","src":"6869:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6868:17:34"},"src":"6844:201:34","virtual":false,"visibility":"internal"},{"body":{"id":10056,"nodeType":"Block","src":"7117:404:34","statements":[{"condition":{"id":10029,"name":"transferRestrictionsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"7132:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10054,"nodeType":"IfStatement","src":"7128:374:34","trueBody":{"id":10053,"nodeType":"Block","src":"7161:341:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"7233:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10031,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"7241:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7233:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10033,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10027,"src":"7253:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10034,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"7259:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7253:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7233:34:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10052,"nodeType":"IfStatement","src":"7229:262:34","trueBody":{"id":10051,"nodeType":"Block","src":"7269:222:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7374:16:34","subExpression":{"baseExpression":{"id":10037,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"7375:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10039,"indexExpression":{"id":10038,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"7385:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7375:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":10044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7394:14:34","subExpression":{"baseExpression":{"id":10041,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"7395:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10043,"indexExpression":{"id":10042,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10027,"src":"7405:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7395:13:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7374:34:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10050,"nodeType":"IfStatement","src":"7370:106:34","trueBody":{"id":10049,"nodeType":"Block","src":"7410:66:34","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10046,"name":"NotWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9969,"src":"7440:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7440:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10048,"nodeType":"RevertStatement","src":"7433:23:34"}]}}]}}]}},{"id":10055,"nodeType":"PlaceholderStatement","src":"7512:1:34"}]},"id":10057,"name":"whitelistTransferAllowed","nameLocation":"7066:24:34","nodeType":"ModifierDefinition","parameters":{"id":10028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10025,"mutability":"mutable","name":"from","nameLocation":"7099:4:34","nodeType":"VariableDeclaration","scope":10057,"src":"7091:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10024,"name":"address","nodeType":"ElementaryTypeName","src":"7091:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10027,"mutability":"mutable","name":"to","nameLocation":"7113:2:34","nodeType":"VariableDeclaration","scope":10057,"src":"7105:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10026,"name":"address","nodeType":"ElementaryTypeName","src":"7105:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7090:26:34"},"src":"7057:464:34","virtual":false,"visibility":"internal"},{"body":{"id":10065,"nodeType":"Block","src":"7572:89:34","statements":[{"condition":{"id":10059,"name":"circuitBreakerTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"7587:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10063,"nodeType":"IfStatement","src":"7583:58:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10060,"name":"CircuitBreakerActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"7619:20:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7619:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10062,"nodeType":"RevertStatement","src":"7612:29:34"}},{"id":10064,"nodeType":"PlaceholderStatement","src":"7652:1:34"}]},"id":10066,"name":"whenCircuitBreakerNotActive","nameLocation":"7542:27:34","nodeType":"ModifierDefinition","parameters":{"id":10058,"nodeType":"ParameterList","parameters":[],"src":"7569:2:34"},"src":"7533:128:34","virtual":false,"visibility":"internal"},{"body":{"id":10080,"nodeType":"Block","src":"7703:104:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:15:34","subExpression":{"id":10068,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"7719:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10070,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7737:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7741:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7737:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10072,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"7751:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7737:22:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7718:41:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10078,"nodeType":"IfStatement","src":"7714:73:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10075,"name":"TradingNotEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9987,"src":"7768:17:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7768:19:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10077,"nodeType":"RevertStatement","src":"7761:26:34"}},{"id":10079,"nodeType":"PlaceholderStatement","src":"7798:1:34"}]},"id":10081,"name":"whenTradingEnabled","nameLocation":"7682:18:34","nodeType":"ModifierDefinition","parameters":{"id":10067,"nodeType":"ParameterList","parameters":[],"src":"7700:2:34"},"src":"7673:134:34","virtual":false,"visibility":"internal"},{"body":{"id":10088,"nodeType":"Block","src":"7938:41:34","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10085,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"7949:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7949:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10087,"nodeType":"ExpressionStatement","src":"7949:22:34"}]},"documentation":{"id":10082,"nodeType":"StructuredDocumentation","src":"7870:48:34","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":10089,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10083,"nodeType":"ParameterList","parameters":[],"src":"7935:2:34"},"returnParameters":{"id":10084,"nodeType":"ParameterList","parameters":[],"src":"7938:0:34"},"scope":11150,"src":"7924:55:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10211,"nodeType":"Block","src":"8487:1337:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10103,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10092,"src":"8502:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8523:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8515:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10104,"name":"address","nodeType":"ElementaryTypeName","src":"8515:7:34","typeDescriptions":{}}},"id":10107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8515:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8502:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10109,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"8529:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8547:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8539:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10110,"name":"address","nodeType":"ElementaryTypeName","src":"8539:7:34","typeDescriptions":{}}},"id":10113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8539:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8529:20:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8502:47:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10119,"nodeType":"IfStatement","src":"8498:76:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10116,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"8558:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10118,"nodeType":"RevertStatement","src":"8551:23:34"}},{"expression":{"arguments":[{"id":10121,"name":"TOKEN_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9738,"src":"8608:10:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10122,"name":"TOKEN_SYMBOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9742,"src":"8620:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10120,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"8595:12:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":10123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10124,"nodeType":"ExpressionStatement","src":"8595:38:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10125,"name":"__ERC20Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"8644:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8644:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10127,"nodeType":"ExpressionStatement","src":"8644:22:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10128,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"8677:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10130,"nodeType":"ExpressionStatement","src":"8677:22:34"},{"expression":{"arguments":[{"id":10132,"name":"TOKEN_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9738,"src":"8729:10:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10131,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"8710:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":10133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8710:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10134,"nodeType":"ExpressionStatement","src":"8710:30:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10135,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"8823:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8823:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10137,"nodeType":"ExpressionStatement","src":"8823:24:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10138,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"8858:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8858:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10140,"nodeType":"ExpressionStatement","src":"8858:24:34"},{"expression":{"id":10143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10141,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"8903:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10142,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10092,"src":"8914:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8903:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10144,"nodeType":"ExpressionStatement","src":"8903:20:34"},{"expression":{"id":10147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10145,"name":"commitTimeout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9847,"src":"8934:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10146,"name":"_commitTimeout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10096,"src":"8950:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8934:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10148,"nodeType":"ExpressionStatement","src":"8934:30:34"},{"expression":{"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10149,"name":"circuitBreakerResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"8975:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10150,"name":"_circuitBreakerResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10098,"src":"9005:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8975:58:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10152,"nodeType":"ExpressionStatement","src":"8975:58:34"},{"expression":{"arguments":[{"id":10154,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"9090:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10155,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9110:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10153,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9079:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9079:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10157,"nodeType":"ExpressionStatement","src":"9079:38:34"},{"expression":{"arguments":[{"id":10159,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"9139:13:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10160,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9154:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10158,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9128:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9128:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10162,"nodeType":"ExpressionStatement","src":"9128:33:34"},{"expression":{"arguments":[{"id":10164,"name":"ADMIN_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"9183:17:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10165,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9202:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10163,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9172:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9172:37:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10167,"nodeType":"ExpressionStatement","src":"9172:37:34"},{"expression":{"arguments":[{"id":10169,"name":"BLOCKLIST_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"9231:22:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10170,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9255:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10168,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9220:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10172,"nodeType":"ExpressionStatement","src":"9220:42:34"},{"expression":{"arguments":[{"id":10174,"name":"WHITELIST_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9788,"src":"9284:22:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10175,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9308:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10173,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9273:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9273:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10177,"nodeType":"ExpressionStatement","src":"9273:42:34"},{"expression":{"arguments":[{"id":10179,"name":"CIRCUIT_BREAKER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9794,"src":"9337:20:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10180,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9359:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10178,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9326:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10182,"nodeType":"ExpressionStatement","src":"9326:40:34"},{"expression":{"arguments":[{"id":10184,"name":"SNAPSHOT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9812,"src":"9388:13:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10185,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9403:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10183,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9377:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9377:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10187,"nodeType":"ExpressionStatement","src":"9377:33:34"},{"expression":{"arguments":[{"id":10189,"name":"PARAM_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9800,"src":"9432:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10190,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9452:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10188,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9421:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9421:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10192,"nodeType":"ExpressionStatement","src":"9421:38:34"},{"expression":{"arguments":[{"id":10194,"name":"FINANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9806,"src":"9481:12:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10195,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"9495:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10193,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"9470:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9470:32:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10197,"nodeType":"ExpressionStatement","src":"9470:32:34"},{"expression":{"arguments":[{"id":10199,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"9731:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10200,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"9741:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10198,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9725:5:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9725:27:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10202,"nodeType":"ExpressionStatement","src":"9725:27:34"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":10206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9802:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9794:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10204,"name":"address","nodeType":"ElementaryTypeName","src":"9794:7:34","typeDescriptions":{}}},"id":10207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9794:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10208,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10092,"src":"9806:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10203,"name":"TreasuryUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9887,"src":"9778:15:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":10209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9778:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10210,"nodeType":"EmitStatement","src":"9773:43:34"}]},"documentation":{"id":10090,"nodeType":"StructuredDocumentation","src":"7987:315:34","text":" @notice Initialize the NEBA Token contract\n @param _treasury Treasury address (Gnosis Safe Multisig)\n @param _admin Admin address\n @param _commitTimeout Commit timeout duration in seconds\n @param _circuitBreakerResetInterval Circuit breaker reset interval in seconds"},"functionSelector":"eb990c59","id":10212,"implemented":true,"kind":"function","modifiers":[{"id":10101,"kind":"modifierInvocation","modifierName":{"id":10100,"name":"initializer","nameLocations":["8475:11:34"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"8475:11:34"},"nodeType":"ModifierInvocation","src":"8475:11:34"}],"name":"initialize","nameLocation":"8317:10:34","nodeType":"FunctionDefinition","parameters":{"id":10099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10092,"mutability":"mutable","name":"_treasury","nameLocation":"8346:9:34","nodeType":"VariableDeclaration","scope":10212,"src":"8338:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10091,"name":"address","nodeType":"ElementaryTypeName","src":"8338:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10094,"mutability":"mutable","name":"_admin","nameLocation":"8374:6:34","nodeType":"VariableDeclaration","scope":10212,"src":"8366:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10093,"name":"address","nodeType":"ElementaryTypeName","src":"8366:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10096,"mutability":"mutable","name":"_commitTimeout","nameLocation":"8399:14:34","nodeType":"VariableDeclaration","scope":10212,"src":"8391:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10095,"name":"uint256","nodeType":"ElementaryTypeName","src":"8391:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10098,"mutability":"mutable","name":"_circuitBreakerResetInterval","nameLocation":"8432:28:34","nodeType":"VariableDeclaration","scope":10212,"src":"8424:36:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10097,"name":"uint256","nodeType":"ElementaryTypeName","src":"8424:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8327:140:34"},"returnParameters":{"id":10102,"nodeType":"ParameterList","parameters":[],"src":"8487:0:34"},"scope":11150,"src":"8308:1516:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1011],"body":{"id":10313,"nodeType":"Block","src":"10310:586:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10245,"name":"circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9835,"src":"10367:14:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}],"id":10244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10359:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10243,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:34","typeDescriptions":{}}},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10359:23:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10394:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10386:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10247,"name":"address","nodeType":"ElementaryTypeName","src":"10386:7:34","typeDescriptions":{}}},"id":10250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10359:37:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10262,"nodeType":"IfStatement","src":"10355:122:34","trueBody":{"id":10261,"nodeType":"Block","src":"10398:79:34","statements":[{"expression":{"arguments":[{"expression":{"id":10255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10442:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10446:6:34","memberName":"sender","nodeType":"MemberAccess","src":"10442:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"10454:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"10458:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10252,"name":"circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9835,"src":"10413:14:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10428:13:34","memberName":"checkTransfer","nodeType":"MemberAccess","referencedDeclaration":11589,"src":"10413:28:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view external"}},"id":10259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10413:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10260,"nodeType":"ExpressionStatement","src":"10413:52:34"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10265,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"10547:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}],"id":10264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10539:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10263,"name":"address","nodeType":"ElementaryTypeName","src":"10539:7:34","typeDescriptions":{}}},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10539:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10572:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10564:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10267,"name":"address","nodeType":"ElementaryTypeName","src":"10564:7:34","typeDescriptions":{}}},"id":10270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10564:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10539:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10282,"nodeType":"IfStatement","src":"10535:119:34","trueBody":{"id":10281,"nodeType":"Block","src":"10576:78:34","statements":[{"expression":{"arguments":[{"expression":{"id":10275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10619:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10623:6:34","memberName":"sender","nodeType":"MemberAccess","src":"10619:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10277,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"10631:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10278,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"10635:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10272,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"10591:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10604:14:34","memberName":"beforeTransfer","nodeType":"MemberAccess","referencedDeclaration":11615,"src":"10591:27:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":10279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:51:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10280,"nodeType":"ExpressionStatement","src":"10591:51:34"}]}},{"assignments":[10284],"declarations":[{"constant":false,"id":10284,"mutability":"mutable","name":"success","nameLocation":"10679:7:34","nodeType":"VariableDeclaration","scope":10313,"src":"10674:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10283,"name":"bool","nodeType":"ElementaryTypeName","src":"10674:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10290,"initialValue":{"arguments":[{"id":10287,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"10704:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10288,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"10708:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10285,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10689:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NEBA_$11150_$","typeString":"type(contract super NEBA)"}},"id":10286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10695:8:34","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"10689:14:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":10289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10689:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10674:41:34"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10293,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"10748:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}],"id":10292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10740:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10291,"name":"address","nodeType":"ElementaryTypeName","src":"10740:7:34","typeDescriptions":{}}},"id":10294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10740:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10765:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10295,"name":"address","nodeType":"ElementaryTypeName","src":"10765:7:34","typeDescriptions":{}}},"id":10298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10765:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10740:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10310,"nodeType":"IfStatement","src":"10736:118:34","trueBody":{"id":10309,"nodeType":"Block","src":"10777:77:34","statements":[{"expression":{"arguments":[{"expression":{"id":10303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10819:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10823:6:34","memberName":"sender","nodeType":"MemberAccess","src":"10819:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"10831:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"10835:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10300,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"10792:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"id":10302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10805:13:34","memberName":"afterTransfer","nodeType":"MemberAccess","referencedDeclaration":11625,"src":"10792:26:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":10307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10792:50:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10308,"nodeType":"ExpressionStatement","src":"10792:50:34"}]}},{"expression":{"id":10311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10284,"src":"10881:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10242,"id":10312,"nodeType":"Return","src":"10874:14:34"}]},"documentation":{"id":10213,"nodeType":"StructuredDocumentation","src":"9889:73:34","text":" @notice Override transfer to include security checks"},"functionSelector":"a9059cbb","id":10314,"implemented":true,"kind":"function","modifiers":[{"id":10221,"kind":"modifierInvocation","modifierName":{"id":10220,"name":"whenNotPaused","nameLocations":["10068:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":1857,"src":"10068:13:34"},"nodeType":"ModifierInvocation","src":"10068:13:34"},{"arguments":[{"expression":{"id":10223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10103:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10107:6:34","memberName":"sender","nodeType":"MemberAccess","src":"10103:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10225,"kind":"modifierInvocation","modifierName":{"id":10222,"name":"notBlocked","nameLocations":["10092:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":10002,"src":"10092:10:34"},"nodeType":"ModifierInvocation","src":"10092:22:34"},{"arguments":[{"id":10227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"10136:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10228,"kind":"modifierInvocation","modifierName":{"id":10226,"name":"notBlocked","nameLocations":["10125:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":10002,"src":"10125:10:34"},"nodeType":"ModifierInvocation","src":"10125:14:34"},{"arguments":[{"expression":{"id":10230,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10175:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10179:6:34","memberName":"sender","nodeType":"MemberAccess","src":"10175:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"10187:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10233,"kind":"modifierInvocation","modifierName":{"id":10229,"name":"whitelistTransferAllowed","nameLocations":["10150:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":10057,"src":"10150:24:34"},"nodeType":"ModifierInvocation","src":"10150:40:34"},{"id":10235,"kind":"modifierInvocation","modifierName":{"id":10234,"name":"whenCircuitBreakerNotActive","nameLocations":["10200:27:34"],"nodeType":"IdentifierPath","referencedDeclaration":10066,"src":"10200:27:34"},"nodeType":"ModifierInvocation","src":"10200:27:34"},{"id":10237,"kind":"modifierInvocation","modifierName":{"id":10236,"name":"whenTradingEnabled","nameLocations":["10238:18:34"],"nodeType":"IdentifierPath","referencedDeclaration":10081,"src":"10238:18:34"},"nodeType":"ModifierInvocation","src":"10238:18:34"},{"id":10239,"kind":"modifierInvocation","modifierName":{"id":10238,"name":"nonReentrant","nameLocations":["10266:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"10266:12:34"},"nodeType":"ModifierInvocation","src":"10266:12:34"}],"name":"transfer","nameLocation":"9977:8:34","nodeType":"FunctionDefinition","overrides":{"id":10219,"nodeType":"OverrideSpecifier","overrides":[],"src":"10049:8:34"},"parameters":{"id":10218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10215,"mutability":"mutable","name":"to","nameLocation":"9994:2:34","nodeType":"VariableDeclaration","scope":10314,"src":"9986:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10214,"name":"address","nodeType":"ElementaryTypeName","src":"9986:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10217,"mutability":"mutable","name":"amount","nameLocation":"10006:6:34","nodeType":"VariableDeclaration","scope":10314,"src":"9998:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10216,"name":"uint256","nodeType":"ElementaryTypeName","src":"9998:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9985:28:34"},"returnParameters":{"id":10242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10314,"src":"10298:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10240,"name":"bool","nodeType":"ElementaryTypeName","src":"10298:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10297:6:34"},"scope":11150,"src":"9968:928:34","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1091],"body":{"id":10413,"nodeType":"Block","src":"11339:578:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10347,"name":"circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9835,"src":"11396:14:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}],"id":10346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11388:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10345,"name":"address","nodeType":"ElementaryTypeName","src":"11388:7:34","typeDescriptions":{}}},"id":10348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11388:23:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11423:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11415:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10349,"name":"address","nodeType":"ElementaryTypeName","src":"11415:7:34","typeDescriptions":{}}},"id":10352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11415:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11388:37:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10363,"nodeType":"IfStatement","src":"11384:116:34","trueBody":{"id":10362,"nodeType":"Block","src":"11427:73:34","statements":[{"expression":{"arguments":[{"id":10357,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"11471:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"11477:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10359,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10321,"src":"11481:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10354,"name":"circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9835,"src":"11442:14:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}},"id":10356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11457:13:34","memberName":"checkTransfer","nodeType":"MemberAccess","referencedDeclaration":11589,"src":"11442:28:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view external"}},"id":10360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11442:46:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10361,"nodeType":"ExpressionStatement","src":"11442:46:34"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10366,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"11570:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}],"id":10365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11562:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10364,"name":"address","nodeType":"ElementaryTypeName","src":"11562:7:34","typeDescriptions":{}}},"id":10367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11562:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11595:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11587:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10368,"name":"address","nodeType":"ElementaryTypeName","src":"11587:7:34","typeDescriptions":{}}},"id":10371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11587:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11562:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10382,"nodeType":"IfStatement","src":"11558:113:34","trueBody":{"id":10381,"nodeType":"Block","src":"11599:72:34","statements":[{"expression":{"arguments":[{"id":10376,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"11642:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10377,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"11648:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10378,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10321,"src":"11652:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10373,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"11614:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"id":10375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11627:14:34","memberName":"beforeTransfer","nodeType":"MemberAccess","referencedDeclaration":11615,"src":"11614:27:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":10379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:45:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10380,"nodeType":"ExpressionStatement","src":"11614:45:34"}]}},{"assignments":[10384],"declarations":[{"constant":false,"id":10384,"mutability":"mutable","name":"success","nameLocation":"11696:7:34","nodeType":"VariableDeclaration","scope":10413,"src":"11691:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10383,"name":"bool","nodeType":"ElementaryTypeName","src":"11691:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10391,"initialValue":{"arguments":[{"id":10387,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"11725:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10388,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"11731:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10389,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10321,"src":"11735:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10385,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"11706:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NEBA_$11150_$","typeString":"type(contract super NEBA)"}},"id":10386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11712:12:34","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"11706:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":10390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11706:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11691:51:34"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10394,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"11775:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}],"id":10393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11767:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10392,"name":"address","nodeType":"ElementaryTypeName","src":"11767:7:34","typeDescriptions":{}}},"id":10395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11767:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11800:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11792:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10396,"name":"address","nodeType":"ElementaryTypeName","src":"11792:7:34","typeDescriptions":{}}},"id":10399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11792:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11767:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10410,"nodeType":"IfStatement","src":"11763:112:34","trueBody":{"id":10409,"nodeType":"Block","src":"11804:71:34","statements":[{"expression":{"arguments":[{"id":10404,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"11846:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"11852:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10406,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10321,"src":"11856:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10401,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"11819:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"id":10403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11832:13:34","memberName":"afterTransfer","nodeType":"MemberAccess","referencedDeclaration":11625,"src":"11819:26:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":10407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11819:44:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10408,"nodeType":"ExpressionStatement","src":"11819:44:34"}]}},{"expression":{"id":10411,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10384,"src":"11902:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10344,"id":10412,"nodeType":"Return","src":"11895:14:34"}]},"documentation":{"id":10315,"nodeType":"StructuredDocumentation","src":"10908:77:34","text":" @notice Override transferFrom to include security checks"},"functionSelector":"23b872dd","id":10414,"implemented":true,"kind":"function","modifiers":[{"id":10325,"kind":"modifierInvocation","modifierName":{"id":10324,"name":"whenNotPaused","nameLocations":["11109:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":1857,"src":"11109:13:34"},"nodeType":"ModifierInvocation","src":"11109:13:34"},{"arguments":[{"id":10327,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"11144:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10328,"kind":"modifierInvocation","modifierName":{"id":10326,"name":"notBlocked","nameLocations":["11133:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":10002,"src":"11133:10:34"},"nodeType":"ModifierInvocation","src":"11133:16:34"},{"arguments":[{"id":10330,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"11171:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10331,"kind":"modifierInvocation","modifierName":{"id":10329,"name":"notBlocked","nameLocations":["11160:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":10002,"src":"11160:10:34"},"nodeType":"ModifierInvocation","src":"11160:14:34"},{"arguments":[{"id":10333,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"11210:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"11216:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10335,"kind":"modifierInvocation","modifierName":{"id":10332,"name":"whitelistTransferAllowed","nameLocations":["11185:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":10057,"src":"11185:24:34"},"nodeType":"ModifierInvocation","src":"11185:34:34"},{"id":10337,"kind":"modifierInvocation","modifierName":{"id":10336,"name":"whenCircuitBreakerNotActive","nameLocations":["11229:27:34"],"nodeType":"IdentifierPath","referencedDeclaration":10066,"src":"11229:27:34"},"nodeType":"ModifierInvocation","src":"11229:27:34"},{"id":10339,"kind":"modifierInvocation","modifierName":{"id":10338,"name":"whenTradingEnabled","nameLocations":["11267:18:34"],"nodeType":"IdentifierPath","referencedDeclaration":10081,"src":"11267:18:34"},"nodeType":"ModifierInvocation","src":"11267:18:34"},{"id":10341,"kind":"modifierInvocation","modifierName":{"id":10340,"name":"nonReentrant","nameLocations":["11295:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"11295:12:34"},"nodeType":"ModifierInvocation","src":"11295:12:34"}],"name":"transferFrom","nameLocation":"11000:12:34","nodeType":"FunctionDefinition","overrides":{"id":10323,"nodeType":"OverrideSpecifier","overrides":[],"src":"11090:8:34"},"parameters":{"id":10322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10317,"mutability":"mutable","name":"from","nameLocation":"11021:4:34","nodeType":"VariableDeclaration","scope":10414,"src":"11013:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10316,"name":"address","nodeType":"ElementaryTypeName","src":"11013:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10319,"mutability":"mutable","name":"to","nameLocation":"11035:2:34","nodeType":"VariableDeclaration","scope":10414,"src":"11027:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10318,"name":"address","nodeType":"ElementaryTypeName","src":"11027:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10321,"mutability":"mutable","name":"amount","nameLocation":"11047:6:34","nodeType":"VariableDeclaration","scope":10414,"src":"11039:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10320,"name":"uint256","nodeType":"ElementaryTypeName","src":"11039:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11012:42:34"},"returnParameters":{"id":10344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10414,"src":"11327:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10342,"name":"bool","nodeType":"ElementaryTypeName","src":"11327:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11326:6:34"},"scope":11150,"src":"10991:926:34","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":10483,"nodeType":"Block","src":"12333:733:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12395:15:34","subExpression":{"id":10424,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"12396:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10426,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"12414:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10427,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"12422:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12414:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12395:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"12434:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10431,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"12440:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12434:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12395:53:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10436,"nodeType":"IfStatement","src":"12391:71:34","trueBody":{"expression":{"hexValue":"66616c7365","id":10434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12457:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10423,"id":10435,"nodeType":"Return","src":"12450:12:34"}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":10437,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"12477:6:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":10438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12477:8:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10441,"nodeType":"IfStatement","src":"12473:26:34","trueBody":{"expression":{"hexValue":"66616c7365","id":10439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12494:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10423,"id":10440,"nodeType":"Return","src":"12487:12:34"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10442,"name":"blocklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9820,"src":"12514:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10444,"indexExpression":{"id":10443,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"12524:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12514:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":10445,"name":"blocklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9820,"src":"12533:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10447,"indexExpression":{"id":10446,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"12543:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12533:13:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12514:32:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10451,"nodeType":"IfStatement","src":"12510:50:34","trueBody":{"expression":{"hexValue":"66616c7365","id":10449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12555:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10423,"id":10450,"nodeType":"Return","src":"12548:12:34"}},{"condition":{"id":10452,"name":"circuitBreakerTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"12575:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10455,"nodeType":"IfStatement","src":"12571:41:34","trueBody":{"expression":{"hexValue":"66616c7365","id":10453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12607:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10423,"id":10454,"nodeType":"Return","src":"12600:12:34"}},{"condition":{"id":10456,"name":"transferRestrictionsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"12749:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10480,"nodeType":"IfStatement","src":"12745:282:34","trueBody":{"id":10479,"nodeType":"Block","src":"12778:249:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10457,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"12850:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10458,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"12858:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12850:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"12870:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10461,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"12876:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12870:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12850:34:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10466,"nodeType":"IfStatement","src":"12846:51:34","trueBody":{"expression":{"hexValue":"74727565","id":10464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12893:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10423,"id":10465,"nodeType":"Return","src":"12886:11:34"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12967:16:34","subExpression":{"baseExpression":{"id":10467,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"12968:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10469,"indexExpression":{"id":10468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"12978:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12968:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":10474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12987:14:34","subExpression":{"baseExpression":{"id":10471,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"12988:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10473,"indexExpression":{"id":10472,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"12998:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12988:13:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12967:34:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10478,"nodeType":"IfStatement","src":"12963:52:34","trueBody":{"expression":{"hexValue":"66616c7365","id":10476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13010:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10423,"id":10477,"nodeType":"Return","src":"13003:12:34"}}]}},{"expression":{"hexValue":"74727565","id":10481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13054:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10423,"id":10482,"nodeType":"Return","src":"13047:11:34"}]},"documentation":{"id":10415,"nodeType":"StructuredDocumentation","src":"12059:152:34","text":" @notice Check if transfer is allowed (basic hooks for V1)\n @dev Simplified version - full ERC-1404 will be implemented in V2"},"functionSelector":"97e2b9af","id":10484,"implemented":true,"kind":"function","modifiers":[],"name":"isTransferAllowed","nameLocation":"12226:17:34","nodeType":"FunctionDefinition","parameters":{"id":10420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10417,"mutability":"mutable","name":"from","nameLocation":"12252:4:34","nodeType":"VariableDeclaration","scope":10484,"src":"12244:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10416,"name":"address","nodeType":"ElementaryTypeName","src":"12244:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10419,"mutability":"mutable","name":"to","nameLocation":"12266:2:34","nodeType":"VariableDeclaration","scope":10484,"src":"12258:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10418,"name":"address","nodeType":"ElementaryTypeName","src":"12258:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12243:26:34"},"returnParameters":{"id":10423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10484,"src":"12321:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10421,"name":"bool","nodeType":"ElementaryTypeName","src":"12321:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12320:6:34"},"scope":11150,"src":"12217:849:34","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10516,"nodeType":"Block","src":"13278:198:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10493,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10487,"src":"13293:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13314:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13306:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10494,"name":"address","nodeType":"ElementaryTypeName","src":"13306:7:34","typeDescriptions":{}}},"id":10497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13306:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13293:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10502,"nodeType":"IfStatement","src":"13289:52:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10499,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"13325:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13325:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10501,"nodeType":"RevertStatement","src":"13318:23:34"}},{"assignments":[10504],"declarations":[{"constant":false,"id":10504,"mutability":"mutable","name":"oldTreasury","nameLocation":"13360:11:34","nodeType":"VariableDeclaration","scope":10516,"src":"13352:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10503,"name":"address","nodeType":"ElementaryTypeName","src":"13352:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10506,"initialValue":{"id":10505,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"13374:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13352:30:34"},{"expression":{"id":10509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10507,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"13393:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10508,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10487,"src":"13404:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13393:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10510,"nodeType":"ExpressionStatement","src":"13393:20:34"},{"eventCall":{"arguments":[{"id":10512,"name":"oldTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10504,"src":"13445:11:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10513,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10487,"src":"13458:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10511,"name":"TreasuryUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9887,"src":"13429:15:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":10514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13429:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10515,"nodeType":"EmitStatement","src":"13424:44:34"}]},"documentation":{"id":10485,"nodeType":"StructuredDocumentation","src":"13139:52:34","text":" @notice Update treasury address"},"functionSelector":"7f51bb1f","id":10517,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10490,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"13258:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10491,"kind":"modifierInvocation","modifierName":{"id":10489,"name":"onlyRole","nameLocations":["13249:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"13249:8:34"},"nodeType":"ModifierInvocation","src":"13249:28:34"}],"name":"updateTreasury","nameLocation":"13206:14:34","nodeType":"FunctionDefinition","parameters":{"id":10488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10487,"mutability":"mutable","name":"_treasury","nameLocation":"13229:9:34","nodeType":"VariableDeclaration","scope":10517,"src":"13221:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10486,"name":"address","nodeType":"ElementaryTypeName","src":"13221:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13220:19:34"},"returnParameters":{"id":10492,"nodeType":"ParameterList","parameters":[],"src":"13278:0:34"},"scope":11150,"src":"13197:279:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10539,"nodeType":"Block","src":"13670:97:34","statements":[{"expression":{"id":10532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10528,"name":"blocklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9820,"src":"13681:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10530,"indexExpression":{"id":10529,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10520,"src":"13691:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13681:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10531,"name":"blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"13702:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13681:28:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10533,"nodeType":"ExpressionStatement","src":"13681:28:34"},{"eventCall":{"arguments":[{"id":10535,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10520,"src":"13742:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10536,"name":"blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"13751:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10534,"name":"BlocklistUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9893,"src":"13725:16:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13725:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10538,"nodeType":"EmitStatement","src":"13720:39:34"}]},"documentation":{"id":10518,"nodeType":"StructuredDocumentation","src":"13488:52:34","text":" @notice Update blocklist status"},"functionSelector":"b45a1eb5","id":10540,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10525,"name":"BLOCKLIST_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"13640:22:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10526,"kind":"modifierInvocation","modifierName":{"id":10524,"name":"onlyRole","nameLocations":["13631:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"13631:8:34"},"nodeType":"ModifierInvocation","src":"13631:32:34"}],"name":"updateBlocklist","nameLocation":"13555:15:34","nodeType":"FunctionDefinition","parameters":{"id":10523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10520,"mutability":"mutable","name":"account","nameLocation":"13579:7:34","nodeType":"VariableDeclaration","scope":10540,"src":"13571:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10519,"name":"address","nodeType":"ElementaryTypeName","src":"13571:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10522,"mutability":"mutable","name":"blocked","nameLocation":"13593:7:34","nodeType":"VariableDeclaration","scope":10540,"src":"13588:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10521,"name":"bool","nodeType":"ElementaryTypeName","src":"13588:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13570:31:34"},"returnParameters":{"id":10527,"nodeType":"ParameterList","parameters":[],"src":"13670:0:34"},"scope":11150,"src":"13546:221:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10562,"nodeType":"Block","src":"13965:105:34","statements":[{"expression":{"id":10555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10551,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"13976:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10553,"indexExpression":{"id":10552,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10543,"src":"13986:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13976:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10554,"name":"whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"13997:11:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13976:32:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10556,"nodeType":"ExpressionStatement","src":"13976:32:34"},{"eventCall":{"arguments":[{"id":10558,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10543,"src":"14041:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10559,"name":"whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"14050:11:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10557,"name":"WhitelistUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9899,"src":"14024:16:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":10560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14024:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10561,"nodeType":"EmitStatement","src":"14019:43:34"}]},"documentation":{"id":10541,"nodeType":"StructuredDocumentation","src":"13779:52:34","text":" @notice Update whitelist status"},"functionSelector":"0d392cd9","id":10563,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10548,"name":"WHITELIST_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9788,"src":"13935:22:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10549,"kind":"modifierInvocation","modifierName":{"id":10547,"name":"onlyRole","nameLocations":["13926:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"13926:8:34"},"nodeType":"ModifierInvocation","src":"13926:32:34"}],"name":"updateWhitelist","nameLocation":"13846:15:34","nodeType":"FunctionDefinition","parameters":{"id":10546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10543,"mutability":"mutable","name":"account","nameLocation":"13870:7:34","nodeType":"VariableDeclaration","scope":10563,"src":"13862:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10542,"name":"address","nodeType":"ElementaryTypeName","src":"13862:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10545,"mutability":"mutable","name":"whitelisted","nameLocation":"13884:11:34","nodeType":"VariableDeclaration","scope":10563,"src":"13879:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10544,"name":"bool","nodeType":"ElementaryTypeName","src":"13879:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13861:35:34"},"returnParameters":{"id":10550,"nodeType":"ParameterList","parameters":[],"src":"13965:0:34"},"scope":11150,"src":"13837:233:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10579,"nodeType":"Block","src":"14221:149:34","statements":[{"expression":{"id":10573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10570,"name":"transferRestrictionsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"14232:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14262:28:34","subExpression":{"id":10571,"name":"transferRestrictionsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"14263:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14232:58:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10574,"nodeType":"ExpressionStatement","src":"14232:58:34"},{"eventCall":{"arguments":[{"id":10576,"name":"transferRestrictionsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"14334:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10575,"name":"TransferRestrictionsToggled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9903,"src":"14306:27:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":10577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14306:56:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10578,"nodeType":"EmitStatement","src":"14301:61:34"}]},"documentation":{"id":10564,"nodeType":"StructuredDocumentation","src":"14082:57:34","text":" @notice Toggle transfer restrictions"},"functionSelector":"512fede1","id":10580,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10567,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"14201:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10568,"kind":"modifierInvocation","modifierName":{"id":10566,"name":"onlyRole","nameLocations":["14192:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"14192:8:34"},"nodeType":"ModifierInvocation","src":"14192:28:34"}],"name":"toggleTransferRestrictions","nameLocation":"14154:26:34","nodeType":"FunctionDefinition","parameters":{"id":10565,"nodeType":"ParameterList","parameters":[],"src":"14180:2:34"},"returnParameters":{"id":10569,"nodeType":"ParameterList","parameters":[],"src":"14221:0:34"},"scope":11150,"src":"14145:225:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10602,"nodeType":"Block","src":"14510:149:34","statements":[{"expression":{"arguments":[{"id":10589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14529:15:34","subExpression":{"id":10588,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"14530:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726164696e6720616c726561647920656e61626c6564","id":10590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14546:25:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0","typeString":"literal_string \"Trading already enabled\""},"value":"Trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0","typeString":"literal_string \"Trading already enabled\""}],"id":10587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14521:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14521:51:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10592,"nodeType":"ExpressionStatement","src":"14521:51:34"},{"expression":{"id":10595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10593,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"14583:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14583:21:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10596,"nodeType":"ExpressionStatement","src":"14583:21:34"},{"eventCall":{"arguments":[{"expression":{"id":10598,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14635:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14641:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"14635:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10597,"name":"TradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9907,"src":"14620:14:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14620:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10601,"nodeType":"EmitStatement","src":"14615:36:34"}]},"documentation":{"id":10581,"nodeType":"StructuredDocumentation","src":"14382:59:34","text":" @notice Enable trading (one-time only)"},"functionSelector":"8a8c523c","id":10603,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10584,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"14490:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10585,"kind":"modifierInvocation","modifierName":{"id":10583,"name":"onlyRole","nameLocations":["14481:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"14481:8:34"},"nodeType":"ModifierInvocation","src":"14481:28:34"}],"name":"enableTrading","nameLocation":"14456:13:34","nodeType":"FunctionDefinition","parameters":{"id":10582,"nodeType":"ParameterList","parameters":[],"src":"14469:2:34"},"returnParameters":{"id":10586,"nodeType":"ParameterList","parameters":[],"src":"14510:0:34"},"scope":11150,"src":"14447:212:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10630,"nodeType":"Block","src":"14920:189:34","statements":[{"assignments":[10613],"declarations":[{"constant":false,"id":10613,"mutability":"mutable","name":"oldBreaker","nameLocation":"14939:10:34","nodeType":"VariableDeclaration","scope":10630,"src":"14931:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10612,"name":"address","nodeType":"ElementaryTypeName","src":"14931:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10618,"initialValue":{"arguments":[{"id":10616,"name":"circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9835,"src":"14960:14:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}],"id":10615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14952:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10614,"name":"address","nodeType":"ElementaryTypeName","src":"14952:7:34","typeDescriptions":{}}},"id":10617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14952:23:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14931:44:34"},{"expression":{"id":10623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10619,"name":"circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9835,"src":"14986:14:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10621,"name":"_circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10606,"src":"15019:15:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10620,"name":"ICircuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11602,"src":"15003:15:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICircuitBreaker_$11602_$","typeString":"type(contract ICircuitBreaker)"}},"id":10622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:32:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}},"src":"14986:49:34","typeDescriptions":{"typeIdentifier":"t_contract$_ICircuitBreaker_$11602","typeString":"contract ICircuitBreaker"}},"id":10624,"nodeType":"ExpressionStatement","src":"14986:49:34"},{"eventCall":{"arguments":[{"id":10626,"name":"oldBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10613,"src":"15073:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10627,"name":"_circuitBreaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10606,"src":"15085:15:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10625,"name":"CircuitBreakerUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"15051:21:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":10628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15051:50:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10629,"nodeType":"EmitStatement","src":"15046:55:34"}]},"documentation":{"id":10604,"nodeType":"StructuredDocumentation","src":"14733:60:34","text":" @notice Update circuit breaker contract"},"functionSelector":"e1eb7399","id":10631,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10609,"name":"CIRCUIT_BREAKER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9794,"src":"14892:20:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10610,"kind":"modifierInvocation","modifierName":{"id":10608,"name":"onlyRole","nameLocations":["14883:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"14883:8:34"},"nodeType":"ModifierInvocation","src":"14883:30:34"}],"name":"updateCircuitBreaker","nameLocation":"14808:20:34","nodeType":"FunctionDefinition","parameters":{"id":10607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10606,"mutability":"mutable","name":"_circuitBreaker","nameLocation":"14837:15:34","nodeType":"VariableDeclaration","scope":10631,"src":"14829:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10605,"name":"address","nodeType":"ElementaryTypeName","src":"14829:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14828:25:34"},"returnParameters":{"id":10611,"nodeType":"ParameterList","parameters":[],"src":"14920:0:34"},"scope":11150,"src":"14799:310:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10655,"nodeType":"Block","src":"15309:160:34","statements":[{"expression":{"id":10642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10640,"name":"circuitBreakerTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"15320:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15346:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15320:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10643,"nodeType":"ExpressionStatement","src":"15320:30:34"},{"expression":{"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10644,"name":"lastCircuitBreakerReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9862,"src":"15361:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10645,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15387:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15393:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"15387:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15361:41:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10648,"nodeType":"ExpressionStatement","src":"15361:41:34"},{"eventCall":{"arguments":[{"expression":{"id":10650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15442:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15446:6:34","memberName":"sender","nodeType":"MemberAccess","src":"15442:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10652,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10634,"src":"15454:6:34","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":10649,"name":"CircuitBreakerTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"15418:23:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":10653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15418:43:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10654,"nodeType":"EmitStatement","src":"15413:48:34"}]},"documentation":{"id":10632,"nodeType":"StructuredDocumentation","src":"15121:61:34","text":" @notice Trigger circuit breaker manually"},"functionSelector":"61b242c5","id":10656,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10637,"name":"CIRCUIT_BREAKER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9794,"src":"15281:20:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10638,"kind":"modifierInvocation","modifierName":{"id":10636,"name":"onlyRole","nameLocations":["15272:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"15272:8:34"},"nodeType":"ModifierInvocation","src":"15272:30:34"}],"name":"triggerCircuitBreaker","nameLocation":"15197:21:34","nodeType":"FunctionDefinition","parameters":{"id":10635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10634,"mutability":"mutable","name":"reason","nameLocation":"15235:6:34","nodeType":"VariableDeclaration","scope":10656,"src":"15219:22:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10633,"name":"string","nodeType":"ElementaryTypeName","src":"15219:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15218:24:34"},"returnParameters":{"id":10639,"nodeType":"ParameterList","parameters":[],"src":"15309:0:34"},"scope":11150,"src":"15188:281:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10675,"nodeType":"Block","src":"15608:139:34","statements":[{"expression":{"id":10665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10663,"name":"circuitBreakerTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"15619:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":10664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15645:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15619:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10666,"nodeType":"ExpressionStatement","src":"15619:31:34"},{"expression":{"id":10670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10667,"name":"lastCircuitBreakerReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9862,"src":"15661:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10668,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15687:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15693:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"15687:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15661:41:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10671,"nodeType":"ExpressionStatement","src":"15661:41:34"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10672,"name":"CircuitBreakerReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9927,"src":"15718:19:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15718:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10674,"nodeType":"EmitStatement","src":"15713:26:34"}]},"documentation":{"id":10657,"nodeType":"StructuredDocumentation","src":"15481:50:34","text":" @notice Reset circuit breaker"},"functionSelector":"de5f8d93","id":10676,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10660,"name":"CIRCUIT_BREAKER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9794,"src":"15586:20:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10661,"kind":"modifierInvocation","modifierName":{"id":10659,"name":"onlyRole","nameLocations":["15577:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"15577:8:34"},"nodeType":"ModifierInvocation","src":"15577:30:34"}],"name":"resetCircuitBreaker","nameLocation":"15546:19:34","nodeType":"FunctionDefinition","parameters":{"id":10658,"nodeType":"ParameterList","parameters":[],"src":"15565:2:34"},"returnParameters":{"id":10662,"nodeType":"ParameterList","parameters":[],"src":"15608:0:34"},"scope":11150,"src":"15537:210:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10700,"nodeType":"Block","src":"15887:251:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10680,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15902:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15908:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"15902:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10682,"name":"lastCircuitBreakerReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9862,"src":"15921:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10683,"name":"circuitBreakerResetInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"15947:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15921:53:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15902:72:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10699,"nodeType":"IfStatement","src":"15898:233:34","trueBody":{"id":10698,"nodeType":"Block","src":"15976:155:34","statements":[{"expression":{"id":10688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10686,"name":"circuitBreakerTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"15991:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":10687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16017:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15991:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10689,"nodeType":"ExpressionStatement","src":"15991:31:34"},{"expression":{"id":10693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10690,"name":"lastCircuitBreakerReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9862,"src":"16037:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10691,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16063:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16069:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"16063:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16037:41:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10694,"nodeType":"ExpressionStatement","src":"16037:41:34"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10695,"name":"CircuitBreakerReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9927,"src":"16098:19:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16098:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10697,"nodeType":"EmitStatement","src":"16093:26:34"}]}}]},"documentation":{"id":10677,"nodeType":"StructuredDocumentation","src":"15759:78:34","text":" @notice Auto-reset circuit breaker if interval has passed"},"functionSelector":"a1bdba44","id":10701,"implemented":true,"kind":"function","modifiers":[],"name":"autoResetCircuitBreaker","nameLocation":"15852:23:34","nodeType":"FunctionDefinition","parameters":{"id":10678,"nodeType":"ParameterList","parameters":[],"src":"15875:2:34"},"returnParameters":{"id":10679,"nodeType":"ParameterList","parameters":[],"src":"15887:0:34"},"scope":11150,"src":"15843:295:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10728,"nodeType":"Block","src":"16389:171:34","statements":[{"assignments":[10711],"declarations":[{"constant":false,"id":10711,"mutability":"mutable","name":"oldHook","nameLocation":"16408:7:34","nodeType":"VariableDeclaration","scope":10728,"src":"16400:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10710,"name":"address","nodeType":"ElementaryTypeName","src":"16400:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10716,"initialValue":{"arguments":[{"id":10714,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"16426:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}],"id":10713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16418:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10712,"name":"address","nodeType":"ElementaryTypeName","src":"16418:7:34","typeDescriptions":{}}},"id":10715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16418:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16400:39:34"},{"expression":{"id":10721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10717,"name":"transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"16450:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10719,"name":"_transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"16479:13:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10718,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11626,"src":"16465:13:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransferHook_$11626_$","typeString":"type(contract ITransferHook)"}},"id":10720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16465:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"src":"16450:43:34","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$11626","typeString":"contract ITransferHook"}},"id":10722,"nodeType":"ExpressionStatement","src":"16450:43:34"},{"eventCall":{"arguments":[{"id":10724,"name":"oldHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10711,"src":"16529:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10725,"name":"_transferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"16538:13:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10723,"name":"TransferHookUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9919,"src":"16509:19:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":10726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16509:43:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10727,"nodeType":"EmitStatement","src":"16504:48:34"}]},"documentation":{"id":10702,"nodeType":"StructuredDocumentation","src":"16210:58:34","text":" @notice Update transfer hook contract"},"functionSelector":"e4d1155e","id":10729,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10707,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"16363:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10708,"kind":"modifierInvocation","modifierName":{"id":10706,"name":"onlyRole","nameLocations":["16354:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"16354:8:34"},"nodeType":"ModifierInvocation","src":"16354:28:34"}],"name":"updateTransferHook","nameLocation":"16283:18:34","nodeType":"FunctionDefinition","parameters":{"id":10705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10704,"mutability":"mutable","name":"_transferHook","nameLocation":"16310:13:34","nodeType":"VariableDeclaration","scope":10729,"src":"16302:21:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10703,"name":"address","nodeType":"ElementaryTypeName","src":"16302:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16301:23:34"},"returnParameters":{"id":10709,"nodeType":"ParameterList","parameters":[],"src":"16389:0:34"},"scope":11150,"src":"16274:286:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10753,"nodeType":"Block","src":"16790:118:34","statements":[{"expression":{"id":10743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10738,"name":"commits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9844,"src":"16801:7:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10740,"indexExpression":{"id":10739,"name":"commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10732,"src":"16809:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16801:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10741,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16819:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16825:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"16819:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16801:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10744,"nodeType":"ExpressionStatement","src":"16801:33:34"},{"eventCall":{"arguments":[{"id":10746,"name":"commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10732,"src":"16864:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16872:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:34","memberName":"sender","nodeType":"MemberAccess","src":"16872:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10749,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16884:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16890:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"16884:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10745,"name":"CommitCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9943,"src":"16850:13:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":10751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16850:50:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10752,"nodeType":"EmitStatement","src":"16845:55:34"}]},"documentation":{"id":10730,"nodeType":"StructuredDocumentation","src":"16632:76:34","text":" @notice Create a commit for sensitive parameter updates"},"functionSelector":"1fc4b857","id":10754,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10735,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"16770:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10736,"kind":"modifierInvocation","modifierName":{"id":10734,"name":"onlyRole","nameLocations":["16761:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"16761:8:34"},"nodeType":"ModifierInvocation","src":"16761:28:34"}],"name":"createCommit","nameLocation":"16723:12:34","nodeType":"FunctionDefinition","parameters":{"id":10733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10732,"mutability":"mutable","name":"commit","nameLocation":"16744:6:34","nodeType":"VariableDeclaration","scope":10754,"src":"16736:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16736:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16735:16:34"},"returnParameters":{"id":10737,"nodeType":"ParameterList","parameters":[],"src":"16790:0:34"},"scope":11150,"src":"16714:194:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10815,"nodeType":"Block","src":"17062:406:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10765,"name":"commits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9844,"src":"17077:7:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10767,"indexExpression":{"id":10766,"name":"commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10757,"src":"17085:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17077:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17096:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17077:20:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10773,"nodeType":"IfStatement","src":"17073:49:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10770,"name":"CommitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9977,"src":"17106:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17106:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10772,"nodeType":"RevertStatement","src":"17099:23:34"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10774,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17137:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17143:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"17137:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10776,"name":"commits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9844,"src":"17155:7:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10778,"indexExpression":{"id":10777,"name":"commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10757,"src":"17163:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17155:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10779,"name":"commitTimeout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9847,"src":"17173:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17155:31:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17137:49:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10785,"nodeType":"IfStatement","src":"17133:82:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10782,"name":"ParamCommitExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"17195:18:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17195:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10784,"nodeType":"RevertStatement","src":"17188:27:34"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10789,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10759,"src":"17257:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17265:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17269:6:34","memberName":"sender","nodeType":"MemberAccess","src":"17265:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10792,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17277:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17283:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"17277:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10787,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17240:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17244:12:34","memberName":"encodePacked","nodeType":"MemberAccess","src":"17240:16:34","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17240:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10786,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17230:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17230:64:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10796,"name":"commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10757,"src":"17298:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"17230:74:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10802,"nodeType":"IfStatement","src":"17226:129:34","trueBody":{"id":10801,"nodeType":"Block","src":"17306:49:34","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10798,"name":"InvalidCommit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"17328:13:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17328:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10800,"nodeType":"RevertStatement","src":"17321:22:34"}]}},{"expression":{"id":10806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"17375:22:34","subExpression":{"baseExpression":{"id":10803,"name":"commits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9844,"src":"17382:7:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10805,"indexExpression":{"id":10804,"name":"commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10757,"src":"17390:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17382:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10807,"nodeType":"ExpressionStatement","src":"17375:22:34"},{"eventCall":{"arguments":[{"id":10809,"name":"commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10757,"src":"17428:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10810,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10759,"src":"17436:6:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10811,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17444:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17450:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"17444:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10808,"name":"CommitRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9951,"src":"17413:14:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,uint256)"}},"id":10813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17413:47:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10814,"nodeType":"EmitStatement","src":"17408:52:34"}]},"documentation":{"id":10755,"nodeType":"StructuredDocumentation","src":"16920:44:34","text":" @notice Reveal a commit"},"functionSelector":"6d1fa35b","id":10816,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10762,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"17042:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10763,"kind":"modifierInvocation","modifierName":{"id":10761,"name":"onlyRole","nameLocations":["17033:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"17033:8:34"},"nodeType":"ModifierInvocation","src":"17033:28:34"}],"name":"revealCommit","nameLocation":"16979:12:34","nodeType":"FunctionDefinition","parameters":{"id":10760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10757,"mutability":"mutable","name":"commit","nameLocation":"17000:6:34","nodeType":"VariableDeclaration","scope":10816,"src":"16992:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16992:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10759,"mutability":"mutable","name":"secret","nameLocation":"17016:6:34","nodeType":"VariableDeclaration","scope":10816,"src":"17008:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17008:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16991:32:34"},"returnParameters":{"id":10764,"nodeType":"ParameterList","parameters":[],"src":"17062:0:34"},"scope":11150,"src":"16970:498:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10855,"nodeType":"Block","src":"17839:400:34","statements":[{"expression":{"id":10826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17850:19:34","subExpression":{"id":10825,"name":"currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9856,"src":"17850:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10827,"nodeType":"ExpressionStatement","src":"17850:19:34"},{"expression":{"id":10830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10828,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10823,"src":"17880:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10829,"name":"currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9856,"src":"17893:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17880:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10831,"nodeType":"ExpressionStatement","src":"17880:30:34"},{"expression":{"id":10843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10832,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"17931:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SnapshotData_$9874_storage_$","typeString":"mapping(uint256 => struct NEBA.SnapshotData storage ref)"}},"id":10834,"indexExpression":{"id":10833,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10823,"src":"17941:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17931:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_storage","typeString":"struct NEBA.SnapshotData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10836,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10823,"src":"17987:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10837,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18023:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18029:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"18023:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10839,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"18066:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18066:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":10841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18102:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10835,"name":"SnapshotData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"17955:12:34","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SnapshotData_$9874_storage_ptr_$","typeString":"type(struct NEBA.SnapshotData storage pointer)"}},"id":10842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["17983:2:34","18012:9:34","18053:11:34","18094:6:34"],"names":["id","timestamp","totalSupply","active"],"nodeType":"FunctionCall","src":"17955:163:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_memory_ptr","typeString":"struct NEBA.SnapshotData memory"}},"src":"17931:187:34","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_storage","typeString":"struct NEBA.SnapshotData storage ref"}},"id":10844,"nodeType":"ExpressionStatement","src":"17931:187:34"},{"eventCall":{"arguments":[{"id":10846,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10823,"src":"18160:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10847,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18172:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18178:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"18172:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10849,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"18189:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18189:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10845,"name":"SnapshotCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"18144:15:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":10851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18144:59:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10852,"nodeType":"EmitStatement","src":"18139:64:34"},{"expression":{"id":10853,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10823,"src":"18221:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10824,"id":10854,"nodeType":"Return","src":"18214:17:34"}]},"documentation":{"id":10817,"nodeType":"StructuredDocumentation","src":"17535:174:34","text":" @notice Create a snapshot of current token balances\n @dev Only callable by SNAPSHOT_ROLE\n @return snapshotId The ID of the created snapshot"},"functionSelector":"1504d8f0","id":10856,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10820,"name":"SNAPSHOT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9812,"src":"17779:13:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10821,"kind":"modifierInvocation","modifierName":{"id":10819,"name":"onlyRole","nameLocations":["17770:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"17770:8:34"},"nodeType":"ModifierInvocation","src":"17770:23:34"}],"name":"createSnapshot","nameLocation":"17724:14:34","nodeType":"FunctionDefinition","parameters":{"id":10818,"nodeType":"ParameterList","parameters":[],"src":"17738:2:34"},"returnParameters":{"id":10824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10823,"mutability":"mutable","name":"snapshotId","nameLocation":"17821:10:34","nodeType":"VariableDeclaration","scope":10856,"src":"17813:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10822,"name":"uint256","nodeType":"ElementaryTypeName","src":"17813:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17812:20:34"},"scope":11150,"src":"17715:524:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10880,"nodeType":"Block","src":"18536:144:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":10865,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"18551:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SnapshotData_$9874_storage_$","typeString":"mapping(uint256 => struct NEBA.SnapshotData storage ref)"}},"id":10867,"indexExpression":{"id":10866,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10859,"src":"18561:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18551:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_storage","typeString":"struct NEBA.SnapshotData storage ref"}},"id":10868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18573:2:34","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":9867,"src":"18551:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18579:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18551:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10875,"nodeType":"IfStatement","src":"18547:87:34","trueBody":{"id":10874,"nodeType":"Block","src":"18582:52:34","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10871,"name":"SnapshotNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"18604:16:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18604:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10873,"nodeType":"RevertStatement","src":"18597:25:34"}]}},{"expression":{"baseExpression":{"id":10876,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"18651:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SnapshotData_$9874_storage_$","typeString":"mapping(uint256 => struct NEBA.SnapshotData storage ref)"}},"id":10878,"indexExpression":{"id":10877,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10859,"src":"18661:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18651:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_storage","typeString":"struct NEBA.SnapshotData storage ref"}},"functionReturnParameters":10864,"id":10879,"nodeType":"Return","src":"18644:28:34"}]},"documentation":{"id":10857,"nodeType":"StructuredDocumentation","src":"18251:149:34","text":" @notice Get snapshot data by ID\n @param snapshotId The snapshot ID to retrieve\n @return snapshot The snapshot data"},"functionSelector":"76f10ad0","id":10881,"implemented":true,"kind":"function","modifiers":[],"name":"getSnapshot","nameLocation":"18415:11:34","nodeType":"FunctionDefinition","parameters":{"id":10860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10859,"mutability":"mutable","name":"snapshotId","nameLocation":"18435:10:34","nodeType":"VariableDeclaration","scope":10881,"src":"18427:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10858,"name":"uint256","nodeType":"ElementaryTypeName","src":"18427:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18426:20:34"},"returnParameters":{"id":10864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10863,"mutability":"mutable","name":"snapshot","nameLocation":"18520:8:34","nodeType":"VariableDeclaration","scope":10881,"src":"18500:28:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_memory_ptr","typeString":"struct NEBA.SnapshotData"},"typeName":{"id":10862,"nodeType":"UserDefinedTypeName","pathNode":{"id":10861,"name":"SnapshotData","nameLocations":["18500:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":9874,"src":"18500:12:34"},"referencedDeclaration":9874,"src":"18500:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_storage_ptr","typeString":"struct NEBA.SnapshotData"}},"visibility":"internal"}],"src":"18499:30:34"},"scope":11150,"src":"18406:274:34","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10889,"nodeType":"Block","src":"18855:43:34","statements":[{"expression":{"id":10887,"name":"currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9856,"src":"18873:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10886,"id":10888,"nodeType":"Return","src":"18866:24:34"}]},"documentation":{"id":10882,"nodeType":"StructuredDocumentation","src":"18692:94:34","text":" @notice Get the latest snapshot ID\n @return The latest snapshot ID"},"functionSelector":"8a5d4869","id":10890,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestSnapshotId","nameLocation":"18801:19:34","nodeType":"FunctionDefinition","parameters":{"id":10883,"nodeType":"ParameterList","parameters":[],"src":"18820:2:34"},"returnParameters":{"id":10886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10890,"src":"18846:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10884,"name":"uint256","nodeType":"ElementaryTypeName","src":"18846:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18845:9:34"},"scope":11150,"src":"18792:106:34","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10905,"nodeType":"Block","src":"19135:55:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":10898,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"19153:9:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SnapshotData_$9874_storage_$","typeString":"mapping(uint256 => struct NEBA.SnapshotData storage ref)"}},"id":10900,"indexExpression":{"id":10899,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10893,"src":"19163:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19153:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_SnapshotData_$9874_storage","typeString":"struct NEBA.SnapshotData storage ref"}},"id":10901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19175:2:34","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":9867,"src":"19153:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19181:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19153:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10897,"id":10904,"nodeType":"Return","src":"19146:36:34"}]},"documentation":{"id":10891,"nodeType":"StructuredDocumentation","src":"18910:146:34","text":" @notice Check if a snapshot exists\n @param snapshotId The snapshot ID to check\n @return True if snapshot exists"},"functionSelector":"3db11d6a","id":10906,"implemented":true,"kind":"function","modifiers":[],"name":"snapshotExists","nameLocation":"19071:14:34","nodeType":"FunctionDefinition","parameters":{"id":10894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10893,"mutability":"mutable","name":"snapshotId","nameLocation":"19094:10:34","nodeType":"VariableDeclaration","scope":10906,"src":"19086:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10892,"name":"uint256","nodeType":"ElementaryTypeName","src":"19086:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19085:20:34"},"returnParameters":{"id":10897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10906,"src":"19129:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10895,"name":"bool","nodeType":"ElementaryTypeName","src":"19129:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19128:6:34"},"scope":11150,"src":"19062:128:34","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10976,"nodeType":"Block","src":"19441:747:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10914,"name":"ADMIN_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"19542:17:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19561:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19565:6:34","memberName":"sender","nodeType":"MemberAccess","src":"19561:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10913,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"19534:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19534:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":10919,"name":"BOT_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"19598:15:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19615:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19619:6:34","memberName":"sender","nodeType":"MemberAccess","src":"19615:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10918,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"19590:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19590:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19534:92:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":10925,"name":"EMERGENCY_GUARDIAN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"19651:23:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19676:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19680:6:34","memberName":"sender","nodeType":"MemberAccess","src":"19676:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10924,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"19643:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19643:44:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19534:153:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206d75737420686176652070617573657220726f6c65","id":10930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19702:30:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_d71992932a07311a7fe35c90250c38d83e0570fb6722e93d9ab4db08203a0175","typeString":"literal_string \"Caller must have pauser role\""},"value":"Caller must have pauser role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d71992932a07311a7fe35c90250c38d83e0570fb6722e93d9ab4db08203a0175","typeString":"literal_string \"Caller must have pauser role\""}],"id":10912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19512:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19512:231:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10932,"nodeType":"ExpressionStatement","src":"19512:231:34"},{"assignments":[10934],"declarations":[{"constant":false,"id":10934,"mutability":"mutable","name":"pauseType","nameLocation":"19830:9:34","nodeType":"VariableDeclaration","scope":10976,"src":"19816:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10933,"name":"string","nodeType":"ElementaryTypeName","src":"19816:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10936,"initialValue":{"hexValue":"554e4b4e4f574e","id":10935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19842:9:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_7695161cac249b85fbc07184e7834e478da25ac93990ab166c1c538e6504e47e","typeString":"literal_string \"UNKNOWN\""},"value":"UNKNOWN"},"nodeType":"VariableDeclarationStatement","src":"19816:35:34"},{"condition":{"arguments":[{"id":10938,"name":"ADMIN_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"19874:17:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19893:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19897:6:34","memberName":"sender","nodeType":"MemberAccess","src":"19893:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10937,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"19866:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19866:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"arguments":[{"id":10947,"name":"BOT_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"19953:15:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19970:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19974:6:34","memberName":"sender","nodeType":"MemberAccess","src":"19970:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10946,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"19945:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19945:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"arguments":[{"id":10956,"name":"EMERGENCY_GUARDIAN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"20028:23:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10957,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20053:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20057:6:34","memberName":"sender","nodeType":"MemberAccess","src":"20053:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10955,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"20020:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20020:44:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10964,"nodeType":"IfStatement","src":"20016:82:34","trueBody":{"expression":{"id":10962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10960,"name":"pauseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10934,"src":"20066:9:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"454d455247454e43595f475541524449414e","id":10961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20078:20:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c306e15ef0cc746d4ee30624c115ae8f6e854854406c9f57792f6f41f4d4d386","typeString":"literal_string \"EMERGENCY_GUARDIAN\""},"value":"EMERGENCY_GUARDIAN"},"src":"20066:32:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10963,"nodeType":"ExpressionStatement","src":"20066:32:34"}},"id":10965,"nodeType":"IfStatement","src":"19941:157:34","trueBody":{"expression":{"id":10953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10951,"name":"pauseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10934,"src":"19983:9:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"424f54","id":10952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19995:5:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_902cbe3a02736af9827fb6a90bada39e955c0941e08f0c63b3a662a7b17a4e2b","typeString":"literal_string \"BOT\""},"value":"BOT"},"src":"19983:17:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10954,"nodeType":"ExpressionStatement","src":"19983:17:34"}},"id":10966,"nodeType":"IfStatement","src":"19862:236:34","trueBody":{"expression":{"id":10944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10942,"name":"pauseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10934,"src":"19906:9:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"41444d494e","id":10943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19918:7:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"},"src":"19906:19:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10945,"nodeType":"ExpressionStatement","src":"19906:19:34"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10967,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"20119:6:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20119:8:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10969,"nodeType":"ExpressionStatement","src":"20119:8:34"},{"eventCall":{"arguments":[{"expression":{"id":10971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20158:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20162:6:34","memberName":"sender","nodeType":"MemberAccess","src":"20158:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10973,"name":"pauseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10934,"src":"20170:9:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10970,"name":"ContractPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9957,"src":"20143:14:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":10974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20143:37:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10975,"nodeType":"EmitStatement","src":"20138:42:34"}]},"documentation":{"id":10907,"nodeType":"StructuredDocumentation","src":"19257:140:34","text":" @notice Pauses the contract.\n @dev Accessible by ADMIN_PAUSER_ROLE, BOT_PAUSER_ROLE, or EMERGENCY_GUARDIAN_ROLE."},"functionSelector":"8456cb59","id":10977,"implemented":true,"kind":"function","modifiers":[{"id":10910,"kind":"modifierInvocation","modifierName":{"id":10909,"name":"whenNotPaused","nameLocations":["19427:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":1857,"src":"19427:13:34"},"nodeType":"ModifierInvocation","src":"19427:13:34"}],"name":"pause","nameLocation":"19412:5:34","nodeType":"FunctionDefinition","parameters":{"id":10908,"nodeType":"ParameterList","parameters":[],"src":"19417:2:34"},"returnParameters":{"id":10911,"nodeType":"ParameterList","parameters":[],"src":"19441:0:34"},"scope":11150,"src":"19403:785:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11006,"nodeType":"Block","src":"20368:320:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10985,"name":"ADMIN_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"20464:17:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20483:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20487:6:34","memberName":"sender","nodeType":"MemberAccess","src":"20483:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10984,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"20456:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20456:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":10990,"name":"GOVERNANCE_UNPAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"20520:24:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10991,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20546:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20550:6:34","memberName":"sender","nodeType":"MemberAccess","src":"20546:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10989,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"20512:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20512:45:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20456:101:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206d757374206861766520756e70617573657220726f6c65","id":10995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20572:32:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_af19e568b9b34b1f57788834f378a86eac5a6aa78d03af4615b02186a8a40b93","typeString":"literal_string \"Caller must have unpauser role\""},"value":"Caller must have unpauser role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af19e568b9b34b1f57788834f378a86eac5a6aa78d03af4615b02186a8a40b93","typeString":"literal_string \"Caller must have unpauser role\""}],"id":10983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20434:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20434:181:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10997,"nodeType":"ExpressionStatement","src":"20434:181:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10998,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"20626:8:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20626:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11000,"nodeType":"ExpressionStatement","src":"20626:10:34"},{"eventCall":{"arguments":[{"expression":{"id":11002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20669:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20673:6:34","memberName":"sender","nodeType":"MemberAccess","src":"20669:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11001,"name":"ContractUnpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"20652:16:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20652:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11005,"nodeType":"EmitStatement","src":"20647:33:34"}]},"documentation":{"id":10978,"nodeType":"StructuredDocumentation","src":"20200:125:34","text":" @notice Unpauses the contract.\n @dev Accessible by ADMIN_PAUSER_ROLE or GOVERNANCE_UNPAUSER_ROLE."},"functionSelector":"3f4ba83a","id":11007,"implemented":true,"kind":"function","modifiers":[{"id":10981,"kind":"modifierInvocation","modifierName":{"id":10980,"name":"whenPaused","nameLocations":["20357:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"20357:10:34"},"nodeType":"ModifierInvocation","src":"20357:10:34"}],"name":"unpause","nameLocation":"20340:7:34","nodeType":"FunctionDefinition","parameters":{"id":10979,"nodeType":"ParameterList","parameters":[],"src":"20347:2:34"},"returnParameters":{"id":10982,"nodeType":"ParameterList","parameters":[],"src":"20368:0:34"},"scope":11150,"src":"20331:357:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11031,"nodeType":"Block","src":"21004:122:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11016,"name":"botAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11010,"src":"21019:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":11019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21041:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21033:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11017,"name":"address","nodeType":"ElementaryTypeName","src":"21033:7:34","typeDescriptions":{}}},"id":11020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21033:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21019:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11025,"nodeType":"IfStatement","src":"21015:53:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11022,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"21052:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21052:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11024,"nodeType":"RevertStatement","src":"21045:23:34"}},{"expression":{"arguments":[{"id":11027,"name":"BOT_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"21090:15:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":11028,"name":"botAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11010,"src":"21107:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11026,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"21079:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21079:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11030,"nodeType":"ExpressionStatement","src":"21079:39:34"}]},"documentation":{"id":11008,"nodeType":"StructuredDocumentation","src":"20700:212:34","text":" @notice Grant BOT_PAUSER_ROLE to automated bot address\n @dev Only callable by admin to set up the automated monitoring bot\n @param botAddress Address of the automated bot/keeper"},"functionSelector":"c1d6cb4f","id":11032,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11013,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"20984:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11014,"kind":"modifierInvocation","modifierName":{"id":11012,"name":"onlyRole","nameLocations":["20975:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"20975:8:34"},"nodeType":"ModifierInvocation","src":"20975:28:34"}],"name":"grantBotPauserRole","nameLocation":"20927:18:34","nodeType":"FunctionDefinition","parameters":{"id":11011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11010,"mutability":"mutable","name":"botAddress","nameLocation":"20954:10:34","nodeType":"VariableDeclaration","scope":11032,"src":"20946:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11009,"name":"address","nodeType":"ElementaryTypeName","src":"20946:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20945:20:34"},"returnParameters":{"id":11015,"nodeType":"ParameterList","parameters":[],"src":"21004:0:34"},"scope":11150,"src":"20918:208:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11046,"nodeType":"Block","src":"21448:59:34","statements":[{"expression":{"arguments":[{"id":11042,"name":"BOT_PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"21471:15:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":11043,"name":"botAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11035,"src":"21488:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11041,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"21459:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21459:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11045,"nodeType":"ExpressionStatement","src":"21459:40:34"}]},"documentation":{"id":11033,"nodeType":"StructuredDocumentation","src":"21138:217:34","text":" @notice Revoke BOT_PAUSER_ROLE from automated bot address\n @dev Only callable by admin to revoke bot permissions if compromised\n @param botAddress Address of the automated bot/keeper"},"functionSelector":"5d75b889","id":11047,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11038,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"21428:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11039,"kind":"modifierInvocation","modifierName":{"id":11037,"name":"onlyRole","nameLocations":["21419:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"21419:8:34"},"nodeType":"ModifierInvocation","src":"21419:28:34"}],"name":"revokeBotPauserRole","nameLocation":"21370:19:34","nodeType":"FunctionDefinition","parameters":{"id":11036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11035,"mutability":"mutable","name":"botAddress","nameLocation":"21398:10:34","nodeType":"VariableDeclaration","scope":11047,"src":"21390:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11034,"name":"address","nodeType":"ElementaryTypeName","src":"21390:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21389:20:34"},"returnParameters":{"id":11040,"nodeType":"ParameterList","parameters":[],"src":"21448:0:34"},"scope":11150,"src":"21361:146:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11071,"nodeType":"Block","src":"21858:145:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11056,"name":"governanceAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11050,"src":"21873:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":11059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21902:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21894:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11057,"name":"address","nodeType":"ElementaryTypeName","src":"21894:7:34","typeDescriptions":{}}},"id":11060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21894:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21873:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11065,"nodeType":"IfStatement","src":"21869:60:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11062,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"21913:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21913:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11064,"nodeType":"RevertStatement","src":"21906:23:34"}},{"expression":{"arguments":[{"id":11067,"name":"GOVERNANCE_UNPAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"21951:24:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":11068,"name":"governanceAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11050,"src":"21977:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11066,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"21940:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21940:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11070,"nodeType":"ExpressionStatement","src":"21940:55:34"}]},"documentation":{"id":11048,"nodeType":"StructuredDocumentation","src":"21519:231:34","text":" @notice Grant GOVERNANCE_UNPAUSER_ROLE to governance address\n @dev Only callable by admin to set up governance unpausing\n @param governanceAddress Address of the governance system (e.g., Timelock)"},"functionSelector":"df8bcac7","id":11072,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11053,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"21838:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11054,"kind":"modifierInvocation","modifierName":{"id":11052,"name":"onlyRole","nameLocations":["21829:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"21829:8:34"},"nodeType":"ModifierInvocation","src":"21829:28:34"}],"name":"grantGovernanceUnpauserRole","nameLocation":"21765:27:34","nodeType":"FunctionDefinition","parameters":{"id":11051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11050,"mutability":"mutable","name":"governanceAddress","nameLocation":"21801:17:34","nodeType":"VariableDeclaration","scope":11072,"src":"21793:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11049,"name":"address","nodeType":"ElementaryTypeName","src":"21793:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21792:27:34"},"returnParameters":{"id":11055,"nodeType":"ParameterList","parameters":[],"src":"21858:0:34"},"scope":11150,"src":"21756:247:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11096,"nodeType":"Block","src":"22363:140:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11081,"name":"guardianAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11075,"src":"22378:15:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":11084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22405:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22397:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11082,"name":"address","nodeType":"ElementaryTypeName","src":"22397:7:34","typeDescriptions":{}}},"id":11085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22397:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22378:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11090,"nodeType":"IfStatement","src":"22374:58:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11087,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"22416:14:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22416:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11089,"nodeType":"RevertStatement","src":"22409:23:34"}},{"expression":{"arguments":[{"id":11092,"name":"EMERGENCY_GUARDIAN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"22454:23:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":11093,"name":"guardianAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11075,"src":"22479:15:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11091,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"22443:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22443:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11095,"nodeType":"ExpressionStatement","src":"22443:52:34"}]},"documentation":{"id":11073,"nodeType":"StructuredDocumentation","src":"22015:243:34","text":" @notice Grant EMERGENCY_GUARDIAN_ROLE to emergency guardian address\n @dev Only callable by admin to set up emergency guardian\n @param guardianAddress Address of the emergency guardian (e.g., Security Council)"},"functionSelector":"b941d774","id":11097,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11078,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"22343:18:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11079,"kind":"modifierInvocation","modifierName":{"id":11077,"name":"onlyRole","nameLocations":["22334:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"22334:8:34"},"nodeType":"ModifierInvocation","src":"22334:28:34"}],"name":"grantEmergencyGuardianRole","nameLocation":"22273:26:34","nodeType":"FunctionDefinition","parameters":{"id":11076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11075,"mutability":"mutable","name":"guardianAddress","nameLocation":"22308:15:34","nodeType":"VariableDeclaration","scope":11097,"src":"22300:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11074,"name":"address","nodeType":"ElementaryTypeName","src":"22300:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22299:25:34"},"returnParameters":{"id":11080,"nodeType":"ParameterList","parameters":[],"src":"22363:0:34"},"scope":11150,"src":"22264:239:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[768],"body":{"id":11107,"nodeType":"Block","src":"22760:77:34","statements":[]},"documentation":{"id":11098,"nodeType":"StructuredDocumentation","src":"22569:53:34","text":" @notice Authorize upgrade (UUPS)"},"id":11108,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11104,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"22739:13:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11105,"kind":"modifierInvocation","modifierName":{"id":11103,"name":"onlyRole","nameLocations":["22730:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"22730:8:34"},"nodeType":"ModifierInvocation","src":"22730:23:34"}],"name":"_authorizeUpgrade","nameLocation":"22637:17:34","nodeType":"FunctionDefinition","overrides":{"id":11102,"nodeType":"OverrideSpecifier","overrides":[],"src":"22711:8:34"},"parameters":{"id":11101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11100,"mutability":"mutable","name":"newImplementation","nameLocation":"22663:17:34","nodeType":"VariableDeclaration","scope":11108,"src":"22655:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11099,"name":"address","nodeType":"ElementaryTypeName","src":"22655:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22654:27:34"},"returnParameters":{"id":11106,"nodeType":"ParameterList","parameters":[],"src":"22760:0:34"},"scope":11150,"src":"22628:209:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1230,1480],"body":{"id":11128,"nodeType":"Block","src":"23047:49:34","statements":[{"expression":{"arguments":[{"id":11123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11110,"src":"23072:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11124,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11112,"src":"23078:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11114,"src":"23082:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11120,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"23058:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NEBA_$11150_$","typeString":"type(contract super NEBA)"}},"id":11122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23064:7:34","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"23058:13:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":11126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23058:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11127,"nodeType":"ExpressionStatement","src":"23058:30:34"}]},"id":11129,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"22913:7:34","nodeType":"FunctionDefinition","overrides":{"id":11118,"nodeType":"OverrideSpecifier","overrides":[{"id":11116,"name":"ERC20Upgradeable","nameLocations":["22998:16:34"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"22998:16:34"},{"id":11117,"name":"ERC20PausableUpgradeable","nameLocations":["23016:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":1481,"src":"23016:24:34"}],"src":"22989:52:34"},"parameters":{"id":11115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11110,"mutability":"mutable","name":"from","nameLocation":"22929:4:34","nodeType":"VariableDeclaration","scope":11129,"src":"22921:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11109,"name":"address","nodeType":"ElementaryTypeName","src":"22921:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11112,"mutability":"mutable","name":"to","nameLocation":"22943:2:34","nodeType":"VariableDeclaration","scope":11129,"src":"22935:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11111,"name":"address","nodeType":"ElementaryTypeName","src":"22935:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11114,"mutability":"mutable","name":"value","nameLocation":"22955:5:34","nodeType":"VariableDeclaration","scope":11129,"src":"22947:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11113,"name":"uint256","nodeType":"ElementaryTypeName","src":"22947:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22920:41:34"},"returnParameters":{"id":11119,"nodeType":"ParameterList","parameters":[],"src":"23047:0:34"},"scope":11150,"src":"22904:192:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1639],"body":{"id":11143,"nodeType":"Block","src":"23243:45:34","statements":[{"expression":{"arguments":[{"id":11140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11131,"src":"23274:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":11138,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"23261:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NEBA_$11150_$","typeString":"type(contract super NEBA)"}},"id":11139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23267:6:34","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"23261:12:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23261:19:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11137,"id":11142,"nodeType":"Return","src":"23254:26:34"}]},"functionSelector":"7ecebe00","id":11144,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"23117:6:34","nodeType":"FunctionDefinition","overrides":{"id":11134,"nodeType":"OverrideSpecifier","overrides":[{"id":11133,"name":"ERC20PermitUpgradeable","nameLocations":["23187:22:34"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"23187:22:34"}],"src":"23178:32:34"},"parameters":{"id":11132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11131,"mutability":"mutable","name":"owner","nameLocation":"23132:5:34","nodeType":"VariableDeclaration","scope":11144,"src":"23124:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11130,"name":"address","nodeType":"ElementaryTypeName","src":"23124:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23123:15:34"},"returnParameters":{"id":11137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11144,"src":"23229:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11135,"name":"uint256","nodeType":"ElementaryTypeName","src":"23229:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23228:9:34"},"scope":11150,"src":"23108:180:34","stateMutability":"view","virtual":false,"visibility":"public"},{"constant":false,"documentation":{"id":11145,"nodeType":"StructuredDocumentation","src":"23348:177:34","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."},"id":11149,"mutability":"mutable","name":"__gap","nameLocation":"23551:5:34","nodeType":"VariableDeclaration","scope":11150,"src":"23531:25:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":11146,"name":"uint256","nodeType":"ElementaryTypeName","src":"23531:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11148,"length":{"hexValue":"3530","id":11147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23539:2:34","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"23531:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":11151,"src":"1029:22531:34","usedErrors":[381,384,659,664,1516,1523,1710,1846,1849,1998,2490,2493,2631,2636,2641,2650,2655,2660,2776,2789,3210,3473,5071,5076,5081,9963,9965,9967,9969,9971,9973,9975,9977,9979,9981,9983,9985,9987,9989],"usedEvents":[389,1838,1843,2502,2511,2520,2571,2589,3072,3081,9887,9893,9899,9903,9907,9913,9919,9925,9927,9935,9943,9951,9957,9961]}],"src":"33:23529:34"},"id":34},"contracts/TransferHook.sol":{"ast":{"absolutePath":"contracts/TransferHook.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[1696],"ERC165Upgradeable":[2480],"IAccessControl":[2563],"IERC165":[5506],"ITransferHook":[11626],"Initializable":[632],"TransferHook":[11576]},"id":11577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11152,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:35"},{"absolutePath":"contracts/interfaces/ITransferHook.sol","file":"./interfaces/ITransferHook.sol","id":11153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11577,"sourceUnit":11627,"src":"61:40:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":11154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11577,"sourceUnit":365,"src":"103:81:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11156,"name":"ITransferHook","nameLocations":["409:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":11626,"src":"409:13:35"},"id":11157,"nodeType":"InheritanceSpecifier","src":"409:13:35"},{"baseName":{"id":11158,"name":"AccessControlUpgradeable","nameLocations":["424:24:35"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"424:24:35"},"id":11159,"nodeType":"InheritanceSpecifier","src":"424:24:35"}],"canonicalName":"TransferHook","contractDependencies":[],"contractKind":"contract","documentation":{"id":11155,"nodeType":"StructuredDocumentation","src":"188:194:35","text":" @title TransferHook\n @dev Sample transfer hook implementation for compliance and monitoring\n @notice This contract provides hooks for transfer monitoring and compliance checks"},"fullyImplemented":true,"id":11576,"linearizedBaseContracts":[11576,364,2480,5506,2563,1696,632,11626],"name":"TransferHook","nameLocation":"393:12:35","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"2bedd955","id":11164,"mutability":"constant","name":"HOOK_MANAGER_ROLE","nameLocation":"536:17:35","nodeType":"VariableDeclaration","scope":11576,"src":"512:74:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"512:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"484f4f4b5f4d414e414745525f524f4c45","id":11162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"566:19:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e","typeString":"literal_string \"HOOK_MANAGER_ROLE\""},"value":"HOOK_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e","typeString":"literal_string \"HOOK_MANAGER_ROLE\""}],"id":11161,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"556:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"556:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"a8497870","id":11166,"mutability":"mutable","name":"hooksEnabled","nameLocation":"667:12:35","nodeType":"VariableDeclaration","scope":11576,"src":"655:24:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11165,"name":"bool","nodeType":"ElementaryTypeName","src":"655:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"272efc69","id":11170,"mutability":"mutable","name":"whitelistedSenders","nameLocation":"718:18:35","nodeType":"VariableDeclaration","scope":11576,"src":"686:50:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":11169,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11167,"name":"address","nodeType":"ElementaryTypeName","src":"694:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"686:24:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11168,"name":"bool","nodeType":"ElementaryTypeName","src":"705:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"65f6c6f5","id":11174,"mutability":"mutable","name":"whitelistedReceivers","nameLocation":"775:20:35","nodeType":"VariableDeclaration","scope":11576,"src":"743:52:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":11173,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11171,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"743:24:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11172,"name":"bool","nodeType":"ElementaryTypeName","src":"762:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"d5749d42","id":11178,"mutability":"mutable","name":"blacklistedAddresses","nameLocation":"834:20:35","nodeType":"VariableDeclaration","scope":11576,"src":"802:52:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":11177,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11175,"name":"address","nodeType":"ElementaryTypeName","src":"810:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"802:24:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11176,"name":"bool","nodeType":"ElementaryTypeName","src":"821:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"a9e75723","id":11180,"mutability":"mutable","name":"maxTransferAmount","nameLocation":"882:17:35","nodeType":"VariableDeclaration","scope":11576,"src":"867:32:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11179,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"68841431","id":11182,"mutability":"mutable","name":"minTransferAmount","nameLocation":"921:17:35","nodeType":"VariableDeclaration","scope":11576,"src":"906:32:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11181,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2dc74c20","id":11186,"mutability":"mutable","name":"transferCount","nameLocation":"1014:13:35","nodeType":"VariableDeclaration","scope":11576,"src":"979:48:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11185,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11183,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"979:27:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11184,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"38e901b6","id":11190,"mutability":"mutable","name":"totalTransferred","nameLocation":"1069:16:35","nodeType":"VariableDeclaration","scope":11576,"src":"1034:51:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11189,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11187,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1034:27:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"0d2d8a31","id":11194,"mutability":"mutable","name":"lastTransferTime","nameLocation":"1127:16:35","nodeType":"VariableDeclaration","scope":11576,"src":"1092:51:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11193,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11191,"name":"address","nodeType":"ElementaryTypeName","src":"1100:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1092:27:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1111:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"8e386ea29f37964fdbdb87193d773dea74e258b0f6108461c88c712051fb27bc","id":11204,"name":"TransferExecuted","nameLocation":"1209:16:35","nodeType":"EventDefinition","parameters":{"id":11203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11196,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1242:4:35","nodeType":"VariableDeclaration","scope":11204,"src":"1226:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11195,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11198,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1264:2:35","nodeType":"VariableDeclaration","scope":11204,"src":"1248:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11197,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11200,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1276:6:35","nodeType":"VariableDeclaration","scope":11204,"src":"1268:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11202,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1292:9:35","nodeType":"VariableDeclaration","scope":11204,"src":"1284:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:77:35"},"src":"1203:100:35"},{"anonymous":false,"eventSelector":"855852ede06df792cbe12bbb8b292fd0d251a1dcfea1f072d5793f1930568ebf","id":11212,"name":"WhitelistUpdated","nameLocation":"1315:16:35","nodeType":"EventDefinition","parameters":{"id":11211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11206,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1348:7:35","nodeType":"VariableDeclaration","scope":11212,"src":"1332:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11205,"name":"address","nodeType":"ElementaryTypeName","src":"1332:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11208,"indexed":false,"mutability":"mutable","name":"whitelisted","nameLocation":"1362:11:35","nodeType":"VariableDeclaration","scope":11212,"src":"1357:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11207,"name":"bool","nodeType":"ElementaryTypeName","src":"1357:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11210,"indexed":false,"mutability":"mutable","name":"isSender","nameLocation":"1380:8:35","nodeType":"VariableDeclaration","scope":11212,"src":"1375:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11209,"name":"bool","nodeType":"ElementaryTypeName","src":"1375:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1331:58:35"},"src":"1309:81:35"},{"anonymous":false,"eventSelector":"6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac","id":11218,"name":"BlacklistUpdated","nameLocation":"1402:16:35","nodeType":"EventDefinition","parameters":{"id":11217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11214,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1435:7:35","nodeType":"VariableDeclaration","scope":11218,"src":"1419:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11213,"name":"address","nodeType":"ElementaryTypeName","src":"1419:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11216,"indexed":false,"mutability":"mutable","name":"blacklisted","nameLocation":"1449:11:35","nodeType":"VariableDeclaration","scope":11218,"src":"1444:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11215,"name":"bool","nodeType":"ElementaryTypeName","src":"1444:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1418:43:35"},"src":"1396:66:35"},{"anonymous":false,"eventSelector":"4d4981437d0211f9e6843eb024d9ada1fa3a99514d4343d4aece106dd11524bb","id":11224,"name":"LimitsUpdated","nameLocation":"1474:13:35","nodeType":"EventDefinition","parameters":{"id":11223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11220,"indexed":false,"mutability":"mutable","name":"maxAmount","nameLocation":"1496:9:35","nodeType":"VariableDeclaration","scope":11224,"src":"1488:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1488:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11222,"indexed":false,"mutability":"mutable","name":"minAmount","nameLocation":"1515:9:35","nodeType":"VariableDeclaration","scope":11224,"src":"1507:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1487:38:35"},"src":"1468:58:35"},{"anonymous":false,"eventSelector":"ccccc2b9fbbc74545c7f9dac70ee99992ba9927917a3ad98439b8aecb678a431","id":11228,"name":"HooksToggled","nameLocation":"1538:12:35","nodeType":"EventDefinition","parameters":{"id":11227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11226,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"1556:7:35","nodeType":"VariableDeclaration","scope":11228,"src":"1551:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11225,"name":"bool","nodeType":"ElementaryTypeName","src":"1551:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1550:14:35"},"src":"1532:33:35"},{"errorSelector":"dc6e3259","id":11230,"name":"HooksDisabled","nameLocation":"1630:13:35","nodeType":"ErrorDefinition","parameters":{"id":11229,"nodeType":"ParameterList","parameters":[],"src":"1643:2:35"},"src":"1624:22:35"},{"errorSelector":"1f7b776b","id":11232,"name":"AddressBlacklisted","nameLocation":"1658:18:35","nodeType":"ErrorDefinition","parameters":{"id":11231,"nodeType":"ParameterList","parameters":[],"src":"1676:2:35"},"src":"1652:27:35"},{"errorSelector":"24b19124","id":11234,"name":"TransferAmountExceedsLimit","nameLocation":"1691:26:35","nodeType":"ErrorDefinition","parameters":{"id":11233,"nodeType":"ParameterList","parameters":[],"src":"1717:2:35"},"src":"1685:35:35"},{"errorSelector":"32455af4","id":11236,"name":"TransferAmountBelowMinimum","nameLocation":"1732:26:35","nodeType":"ErrorDefinition","parameters":{"id":11235,"nodeType":"ParameterList","parameters":[],"src":"1758:2:35"},"src":"1726:35:35"},{"errorSelector":"5c427cd9","id":11238,"name":"UnauthorizedCaller","nameLocation":"1773:18:35","nodeType":"ErrorDefinition","parameters":{"id":11237,"nodeType":"ParameterList","parameters":[],"src":"1791:2:35"},"src":"1767:27:35"},{"body":{"id":11274,"nodeType":"Block","src":"2005:284:35","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":11249,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2016:20:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":11250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:22:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11251,"nodeType":"ExpressionStatement","src":"2016:22:35"},{"expression":{"arguments":[{"id":11253,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2070:18:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":11254,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11240,"src":"2090:5:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11252,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2059:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2059:37:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11256,"nodeType":"ExpressionStatement","src":"2059:37:35"},{"expression":{"arguments":[{"id":11258,"name":"HOOK_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11164,"src":"2118:17:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":11259,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11240,"src":"2137:5:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11257,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2107:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:36:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11261,"nodeType":"ExpressionStatement","src":"2107:36:35"},{"expression":{"id":11264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11262,"name":"hooksEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11166,"src":"2164:12:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":11263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2179:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2164:19:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11265,"nodeType":"ExpressionStatement","src":"2164:19:35"},{"expression":{"id":11268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11266,"name":"maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"2194:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11267,"name":"_maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11242,"src":"2214:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2194:38:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11269,"nodeType":"ExpressionStatement","src":"2194:38:35"},{"expression":{"id":11272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11270,"name":"minTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11182,"src":"2243:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11271,"name":"_minTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11244,"src":"2263:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2243:38:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11273,"nodeType":"ExpressionStatement","src":"2243:38:35"}]},"functionSelector":"7a1ac61e","id":11275,"implemented":true,"kind":"function","modifiers":[{"id":11247,"kind":"modifierInvocation","modifierName":{"id":11246,"name":"initializer","nameLocations":["1993:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1993:11:35"},"nodeType":"ModifierInvocation","src":"1993:11:35"}],"name":"initialize","nameLocation":"1870:10:35","nodeType":"FunctionDefinition","parameters":{"id":11245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11240,"mutability":"mutable","name":"admin","nameLocation":"1899:5:35","nodeType":"VariableDeclaration","scope":11275,"src":"1891:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11239,"name":"address","nodeType":"ElementaryTypeName","src":"1891:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11242,"mutability":"mutable","name":"_maxTransferAmount","nameLocation":"1923:18:35","nodeType":"VariableDeclaration","scope":11275,"src":"1915:26:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11244,"mutability":"mutable","name":"_minTransferAmount","nameLocation":"1960:18:35","nodeType":"VariableDeclaration","scope":11275,"src":"1952:26:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1880:105:35"},"returnParameters":{"id":11248,"nodeType":"ParameterList","parameters":[],"src":"2005:0:35"},"scope":11576,"src":"1861:428:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[11615],"body":{"id":11328,"nodeType":"Block","src":"2530:630:35","statements":[{"condition":{"id":11287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2545:13:35","subExpression":{"id":11286,"name":"hooksEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11166,"src":"2546:12:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11289,"nodeType":"IfStatement","src":"2541:26:35","trueBody":{"functionReturnParameters":11285,"id":11288,"nodeType":"Return","src":"2560:7:35"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":11290,"name":"blacklistedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"2638:20:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11292,"indexExpression":{"id":11291,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"2659:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2638:26:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":11293,"name":"blacklistedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"2668:20:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11295,"indexExpression":{"id":11294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11280,"src":"2689:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2668:24:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2638:54:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11301,"nodeType":"IfStatement","src":"2634:114:35","trueBody":{"id":11300,"nodeType":"Block","src":"2694:54:35","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11297,"name":"AddressBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11232,"src":"2716:18:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2716:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11299,"nodeType":"RevertStatement","src":"2709:27:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11282,"src":"2813:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":11303,"name":"maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"2822:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2813:26:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11309,"nodeType":"IfStatement","src":"2809:94:35","trueBody":{"id":11308,"nodeType":"Block","src":"2841:62:35","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11305,"name":"TransferAmountExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11234,"src":"2863:26:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2863:28:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11307,"nodeType":"RevertStatement","src":"2856:35:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11310,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11282,"src":"2927:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":11311,"name":"minTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11182,"src":"2936:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2927:26:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11282,"src":"2957:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2966:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2957:10:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2927:40:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11321,"nodeType":"IfStatement","src":"2923:108:35","trueBody":{"id":11320,"nodeType":"Block","src":"2969:62:35","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11317,"name":"TransferAmountBelowMinimum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11236,"src":"2991:26:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2991:28:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11319,"nodeType":"RevertStatement","src":"2984:35:35"}]}},{"expression":{"arguments":[{"id":11323,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"3135:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11280,"src":"3141:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11325,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11282,"src":"3145:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11322,"name":"_performComplianceChecks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11405,"src":"3110:24:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":11326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3110:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11327,"nodeType":"ExpressionStatement","src":"3110:42:35"}]},"documentation":{"id":11276,"nodeType":"StructuredDocumentation","src":"2370:65:35","text":" @notice Called before a transfer is executed"},"functionSelector":"1ffb811f","id":11329,"implemented":true,"kind":"function","modifiers":[],"name":"beforeTransfer","nameLocation":"2450:14:35","nodeType":"FunctionDefinition","overrides":{"id":11284,"nodeType":"OverrideSpecifier","overrides":[],"src":"2521:8:35"},"parameters":{"id":11283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11278,"mutability":"mutable","name":"from","nameLocation":"2473:4:35","nodeType":"VariableDeclaration","scope":11329,"src":"2465:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11277,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11280,"mutability":"mutable","name":"to","nameLocation":"2487:2:35","nodeType":"VariableDeclaration","scope":11329,"src":"2479:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11279,"name":"address","nodeType":"ElementaryTypeName","src":"2479:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11282,"mutability":"mutable","name":"amount","nameLocation":"2499:6:35","nodeType":"VariableDeclaration","scope":11329,"src":"2491:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2491:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2464:42:35"},"returnParameters":{"id":11285,"nodeType":"ParameterList","parameters":[],"src":"2530:0:35"},"scope":11576,"src":"2441:719:35","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[11625],"body":{"id":11394,"nodeType":"Block","src":"3325:543:35","statements":[{"condition":{"id":11341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3340:13:35","subExpression":{"id":11340,"name":"hooksEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11166,"src":"3341:12:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11343,"nodeType":"IfStatement","src":"3336:26:35","trueBody":{"functionReturnParameters":11339,"id":11342,"nodeType":"Return","src":"3355:7:35"}},{"expression":{"id":11347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3421:21:35","subExpression":{"baseExpression":{"id":11344,"name":"transferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"3421:13:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11346,"indexExpression":{"id":11345,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"3435:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3421:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11348,"nodeType":"ExpressionStatement","src":"3421:21:35"},{"expression":{"id":11352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3453:19:35","subExpression":{"baseExpression":{"id":11349,"name":"transferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"3453:13:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11351,"indexExpression":{"id":11350,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11334,"src":"3467:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3453:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11353,"nodeType":"ExpressionStatement","src":"3453:19:35"},{"expression":{"id":11358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11354,"name":"totalTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11190,"src":"3483:16:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11356,"indexExpression":{"id":11355,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"3500:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3483:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11357,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11336,"src":"3509:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3483:32:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11359,"nodeType":"ExpressionStatement","src":"3483:32:35"},{"expression":{"id":11364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11360,"name":"totalTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11190,"src":"3526:16:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11362,"indexExpression":{"id":11361,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11334,"src":"3543:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3526:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11363,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11336,"src":"3550:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:30:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11365,"nodeType":"ExpressionStatement","src":"3526:30:35"},{"expression":{"id":11371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11366,"name":"lastTransferTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11194,"src":"3567:16:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11368,"indexExpression":{"id":11367,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"3584:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3567:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":11369,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3592:5:35","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3598:9:35","memberName":"timestamp","nodeType":"MemberAccess","src":"3592:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3567:40:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11372,"nodeType":"ExpressionStatement","src":"3567:40:35"},{"expression":{"id":11378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11373,"name":"lastTransferTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11194,"src":"3618:16:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11375,"indexExpression":{"id":11374,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11334,"src":"3635:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3618:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":11376,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3641:5:35","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3647:9:35","memberName":"timestamp","nodeType":"MemberAccess","src":"3641:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3618:38:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11379,"nodeType":"ExpressionStatement","src":"3618:38:35"},{"eventCall":{"arguments":[{"id":11381,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"3699:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11382,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11334,"src":"3705:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11383,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11336,"src":"3709:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11384,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3717:5:35","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3723:9:35","memberName":"timestamp","nodeType":"MemberAccess","src":"3717:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11380,"name":"TransferExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"3682:16:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":11386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3682:51:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11387,"nodeType":"EmitStatement","src":"3677:56:35"},{"expression":{"arguments":[{"id":11389,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"3843:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11390,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11334,"src":"3849:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11391,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11336,"src":"3853:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11388,"name":"_performPostTransferActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11415,"src":"3815:27:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":11392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3815:45:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11393,"nodeType":"ExpressionStatement","src":"3815:45:35"}]},"documentation":{"id":11330,"nodeType":"StructuredDocumentation","src":"3172:64:35","text":" @notice Called after a transfer is executed"},"functionSelector":"f49062ca","id":11395,"implemented":true,"kind":"function","modifiers":[],"name":"afterTransfer","nameLocation":"3251:13:35","nodeType":"FunctionDefinition","overrides":{"id":11338,"nodeType":"OverrideSpecifier","overrides":[],"src":"3316:8:35"},"parameters":{"id":11337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11332,"mutability":"mutable","name":"from","nameLocation":"3273:4:35","nodeType":"VariableDeclaration","scope":11395,"src":"3265:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11331,"name":"address","nodeType":"ElementaryTypeName","src":"3265:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11334,"mutability":"mutable","name":"to","nameLocation":"3287:2:35","nodeType":"VariableDeclaration","scope":11395,"src":"3279:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11333,"name":"address","nodeType":"ElementaryTypeName","src":"3279:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11336,"mutability":"mutable","name":"amount","nameLocation":"3299:6:35","nodeType":"VariableDeclaration","scope":11395,"src":"3291:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3264:42:35"},"returnParameters":{"id":11339,"nodeType":"ParameterList","parameters":[],"src":"3325:0:35"},"scope":11576,"src":"3242:626:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11404,"nodeType":"Block","src":"4029:107:35","statements":[]},"id":11405,"implemented":true,"kind":"function","modifiers":[],"name":"_performComplianceChecks","nameLocation":"3948:24:35","nodeType":"FunctionDefinition","parameters":{"id":11402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11397,"mutability":"mutable","name":"from","nameLocation":"3981:4:35","nodeType":"VariableDeclaration","scope":11405,"src":"3973:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11396,"name":"address","nodeType":"ElementaryTypeName","src":"3973:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11399,"mutability":"mutable","name":"to","nameLocation":"3995:2:35","nodeType":"VariableDeclaration","scope":11405,"src":"3987:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11398,"name":"address","nodeType":"ElementaryTypeName","src":"3987:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11401,"mutability":"mutable","name":"amount","nameLocation":"4007:6:35","nodeType":"VariableDeclaration","scope":11405,"src":"3999:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3999:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3972:42:35"},"returnParameters":{"id":11403,"nodeType":"ParameterList","parameters":[],"src":"4029:0:35"},"scope":11576,"src":"3939:197:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":11414,"nodeType":"Block","src":"4236:112:35","statements":[]},"id":11415,"implemented":true,"kind":"function","modifiers":[],"name":"_performPostTransferActions","nameLocation":"4157:27:35","nodeType":"FunctionDefinition","parameters":{"id":11412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11407,"mutability":"mutable","name":"from","nameLocation":"4193:4:35","nodeType":"VariableDeclaration","scope":11415,"src":"4185:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11406,"name":"address","nodeType":"ElementaryTypeName","src":"4185:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11409,"mutability":"mutable","name":"to","nameLocation":"4207:2:35","nodeType":"VariableDeclaration","scope":11415,"src":"4199:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11408,"name":"address","nodeType":"ElementaryTypeName","src":"4199:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11411,"mutability":"mutable","name":"amount","nameLocation":"4219:6:35","nodeType":"VariableDeclaration","scope":11415,"src":"4211:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11410,"name":"uint256","nodeType":"ElementaryTypeName","src":"4211:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4184:42:35"},"returnParameters":{"id":11413,"nodeType":"ParameterList","parameters":[],"src":"4236:0:35"},"scope":11576,"src":"4148:200:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":11431,"nodeType":"Block","src":"4530:89:35","statements":[{"expression":{"id":11425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11422,"name":"hooksEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11166,"src":"4541:12:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4556:13:35","subExpression":{"id":11423,"name":"hooksEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11166,"src":"4557:12:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4541:28:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11426,"nodeType":"ExpressionStatement","src":"4541:28:35"},{"eventCall":{"arguments":[{"id":11428,"name":"hooksEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11166,"src":"4598:12:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11427,"name":"HooksToggled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11228,"src":"4585:12:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":11429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11430,"nodeType":"EmitStatement","src":"4580:31:35"}]},"documentation":{"id":11416,"nodeType":"StructuredDocumentation","src":"4416:48:35","text":" @notice Toggle hooks on/off"},"functionSelector":"aff6c36a","id":11432,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11419,"name":"HOOK_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11164,"src":"4511:17:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11420,"kind":"modifierInvocation","modifierName":{"id":11418,"name":"onlyRole","nameLocations":["4502:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4502:8:35"},"nodeType":"ModifierInvocation","src":"4502:27:35"}],"name":"toggleHooks","nameLocation":"4479:11:35","nodeType":"FunctionDefinition","parameters":{"id":11417,"nodeType":"ParameterList","parameters":[],"src":"4490:2:35"},"returnParameters":{"id":11421,"nodeType":"ParameterList","parameters":[],"src":"4530:0:35"},"scope":11576,"src":"4470:149:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11467,"nodeType":"Block","src":"4827:240:35","statements":[{"condition":{"id":11445,"name":"isSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11439,"src":"4842:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":11459,"nodeType":"Block","src":"4926:70:35","statements":[{"expression":{"id":11457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11453,"name":"whitelistedReceivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11174,"src":"4941:20:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11455,"indexExpression":{"id":11454,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"4962:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4941:29:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11456,"name":"whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11437,"src":"4973:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4941:43:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11458,"nodeType":"ExpressionStatement","src":"4941:43:35"}]},"id":11460,"nodeType":"IfStatement","src":"4838:158:35","trueBody":{"id":11452,"nodeType":"Block","src":"4852:68:35","statements":[{"expression":{"id":11450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11446,"name":"whitelistedSenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11170,"src":"4867:18:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11448,"indexExpression":{"id":11447,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"4886:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4867:27:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11449,"name":"whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11437,"src":"4897:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4867:41:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11451,"nodeType":"ExpressionStatement","src":"4867:41:35"}]}},{"eventCall":{"arguments":[{"id":11462,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"5028:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11463,"name":"whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11437,"src":"5037:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":11464,"name":"isSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11439,"src":"5050:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11461,"name":"WhitelistUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11212,"src":"5011:16:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$","typeString":"function (address,bool,bool)"}},"id":11465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5011:48:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11466,"nodeType":"EmitStatement","src":"5006:53:35"}]},"documentation":{"id":11433,"nodeType":"StructuredDocumentation","src":"4631:52:35","text":" @notice Update whitelist status"},"functionSelector":"40dfb1dc","id":11468,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11442,"name":"HOOK_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11164,"src":"4802:17:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11443,"kind":"modifierInvocation","modifierName":{"id":11441,"name":"onlyRole","nameLocations":["4793:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4793:8:35"},"nodeType":"ModifierInvocation","src":"4793:27:35"}],"name":"updateWhitelist","nameLocation":"4698:15:35","nodeType":"FunctionDefinition","parameters":{"id":11440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11435,"mutability":"mutable","name":"account","nameLocation":"4722:7:35","nodeType":"VariableDeclaration","scope":11468,"src":"4714:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11434,"name":"address","nodeType":"ElementaryTypeName","src":"4714:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11437,"mutability":"mutable","name":"whitelisted","nameLocation":"4736:11:35","nodeType":"VariableDeclaration","scope":11468,"src":"4731:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11436,"name":"bool","nodeType":"ElementaryTypeName","src":"4731:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11439,"mutability":"mutable","name":"isSender","nameLocation":"4754:8:35","nodeType":"VariableDeclaration","scope":11468,"src":"4749:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11438,"name":"bool","nodeType":"ElementaryTypeName","src":"4749:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4713:50:35"},"returnParameters":{"id":11444,"nodeType":"ParameterList","parameters":[],"src":"4827:0:35"},"scope":11576,"src":"4689:378:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11490,"nodeType":"Block","src":"5260:116:35","statements":[{"expression":{"id":11483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11479,"name":"blacklistedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5271:20:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11481,"indexExpression":{"id":11480,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11471,"src":"5292:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5271:29:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11482,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11473,"src":"5303:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5271:43:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11484,"nodeType":"ExpressionStatement","src":"5271:43:35"},{"eventCall":{"arguments":[{"id":11486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11471,"src":"5347:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11487,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11473,"src":"5356:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11485,"name":"BlacklistUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11218,"src":"5330:16:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":11488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11489,"nodeType":"EmitStatement","src":"5325:43:35"}]},"documentation":{"id":11469,"nodeType":"StructuredDocumentation","src":"5079:52:35","text":" @notice Update blacklist status"},"functionSelector":"9155e083","id":11491,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11476,"name":"HOOK_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11164,"src":"5235:17:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11477,"kind":"modifierInvocation","modifierName":{"id":11475,"name":"onlyRole","nameLocations":["5226:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5226:8:35"},"nodeType":"ModifierInvocation","src":"5226:27:35"}],"name":"updateBlacklist","nameLocation":"5146:15:35","nodeType":"FunctionDefinition","parameters":{"id":11474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11471,"mutability":"mutable","name":"account","nameLocation":"5170:7:35","nodeType":"VariableDeclaration","scope":11491,"src":"5162:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11470,"name":"address","nodeType":"ElementaryTypeName","src":"5162:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11473,"mutability":"mutable","name":"blacklisted","nameLocation":"5184:11:35","nodeType":"VariableDeclaration","scope":11491,"src":"5179:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11472,"name":"bool","nodeType":"ElementaryTypeName","src":"5179:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5161:35:35"},"returnParameters":{"id":11478,"nodeType":"ParameterList","parameters":[],"src":"5260:0:35"},"scope":11576,"src":"5137:239:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11515,"nodeType":"Block","src":"5586:175:35","statements":[{"expression":{"id":11504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11502,"name":"maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"5597:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11503,"name":"_maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11494,"src":"5617:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5597:38:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11505,"nodeType":"ExpressionStatement","src":"5597:38:35"},{"expression":{"id":11508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11506,"name":"minTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11182,"src":"5646:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11507,"name":"_minTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11496,"src":"5666:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5646:38:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11509,"nodeType":"ExpressionStatement","src":"5646:38:35"},{"eventCall":{"arguments":[{"id":11511,"name":"_maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11494,"src":"5714:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11512,"name":"_minTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11496,"src":"5734:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11510,"name":"LimitsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11224,"src":"5700:13:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:53:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11514,"nodeType":"EmitStatement","src":"5695:58:35"}]},"documentation":{"id":11492,"nodeType":"StructuredDocumentation","src":"5388:51:35","text":" @notice Update transfer limits"},"functionSelector":"a2240e19","id":11516,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11499,"name":"HOOK_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11164,"src":"5561:17:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11500,"kind":"modifierInvocation","modifierName":{"id":11498,"name":"onlyRole","nameLocations":["5552:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5552:8:35"},"nodeType":"ModifierInvocation","src":"5552:27:35"}],"name":"updateLimits","nameLocation":"5454:12:35","nodeType":"FunctionDefinition","parameters":{"id":11497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11494,"mutability":"mutable","name":"_maxTransferAmount","nameLocation":"5475:18:35","nodeType":"VariableDeclaration","scope":11516,"src":"5467:26:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11493,"name":"uint256","nodeType":"ElementaryTypeName","src":"5467:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11496,"mutability":"mutable","name":"_minTransferAmount","nameLocation":"5503:18:35","nodeType":"VariableDeclaration","scope":11516,"src":"5495:26:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11495,"name":"uint256","nodeType":"ElementaryTypeName","src":"5495:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5466:56:35"},"returnParameters":{"id":11501,"nodeType":"ParameterList","parameters":[],"src":"5586:0:35"},"scope":11576,"src":"5445:316:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11538,"nodeType":"Block","src":"5976:154:35","statements":[{"expression":{"components":[{"baseExpression":{"id":11527,"name":"transferCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"6009:13:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11529,"indexExpression":{"id":11528,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11518,"src":"6023:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6009:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":11530,"name":"totalTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11190,"src":"6046:16:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11532,"indexExpression":{"id":11531,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11518,"src":"6063:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6046:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":11533,"name":"lastTransferTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11194,"src":"6086:16:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11535,"indexExpression":{"id":11534,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11518,"src":"6103:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6086:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5994:128:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":11526,"id":11537,"nodeType":"Return","src":"5987:135:35"}]},"functionSelector":"7e3b6451","id":11539,"implemented":true,"kind":"function","modifiers":[],"name":"getTransferStats","nameLocation":"5837:16:35","nodeType":"FunctionDefinition","parameters":{"id":11519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11518,"mutability":"mutable","name":"account","nameLocation":"5862:7:35","nodeType":"VariableDeclaration","scope":11539,"src":"5854:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11517,"name":"address","nodeType":"ElementaryTypeName","src":"5854:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5853:17:35"},"returnParameters":{"id":11526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11521,"mutability":"mutable","name":"count","nameLocation":"5912:5:35","nodeType":"VariableDeclaration","scope":11539,"src":"5904:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11520,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11523,"mutability":"mutable","name":"total","nameLocation":"5936:5:35","nodeType":"VariableDeclaration","scope":11539,"src":"5928:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11522,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11525,"mutability":"mutable","name":"lastTime","nameLocation":"5960:8:35","nodeType":"VariableDeclaration","scope":11539,"src":"5952:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5952:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5893:82:35"},"scope":11576,"src":"5828:302:35","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11550,"nodeType":"Block","src":"6217:53:35","statements":[{"expression":{"baseExpression":{"id":11546,"name":"whitelistedSenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11170,"src":"6235:18:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11548,"indexExpression":{"id":11547,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11541,"src":"6254:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6235:27:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":11545,"id":11549,"nodeType":"Return","src":"6228:34:35"}]},"functionSelector":"1b9e2fad","id":11551,"implemented":true,"kind":"function","modifiers":[],"name":"isWhitelistedSender","nameLocation":"6151:19:35","nodeType":"FunctionDefinition","parameters":{"id":11542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11541,"mutability":"mutable","name":"account","nameLocation":"6179:7:35","nodeType":"VariableDeclaration","scope":11551,"src":"6171:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11540,"name":"address","nodeType":"ElementaryTypeName","src":"6171:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6170:17:35"},"returnParameters":{"id":11545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11551,"src":"6211:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11543,"name":"bool","nodeType":"ElementaryTypeName","src":"6211:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6210:6:35"},"scope":11576,"src":"6142:128:35","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11562,"nodeType":"Block","src":"6359:55:35","statements":[{"expression":{"baseExpression":{"id":11558,"name":"whitelistedReceivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11174,"src":"6377:20:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11560,"indexExpression":{"id":11559,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11553,"src":"6398:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6377:29:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":11557,"id":11561,"nodeType":"Return","src":"6370:36:35"}]},"functionSelector":"85102404","id":11563,"implemented":true,"kind":"function","modifiers":[],"name":"isWhitelistedReceiver","nameLocation":"6291:21:35","nodeType":"FunctionDefinition","parameters":{"id":11554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11553,"mutability":"mutable","name":"account","nameLocation":"6321:7:35","nodeType":"VariableDeclaration","scope":11563,"src":"6313:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11552,"name":"address","nodeType":"ElementaryTypeName","src":"6313:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6312:17:35"},"returnParameters":{"id":11557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11563,"src":"6353:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11555,"name":"bool","nodeType":"ElementaryTypeName","src":"6353:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6352:6:35"},"scope":11576,"src":"6282:132:35","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11574,"nodeType":"Block","src":"6495:55:35","statements":[{"expression":{"baseExpression":{"id":11570,"name":"blacklistedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"6513:20:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11572,"indexExpression":{"id":11571,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11565,"src":"6534:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6513:29:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":11569,"id":11573,"nodeType":"Return","src":"6506:36:35"}]},"functionSelector":"fe575a87","id":11575,"implemented":true,"kind":"function","modifiers":[],"name":"isBlacklisted","nameLocation":"6435:13:35","nodeType":"FunctionDefinition","parameters":{"id":11566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11565,"mutability":"mutable","name":"account","nameLocation":"6457:7:35","nodeType":"VariableDeclaration","scope":11575,"src":"6449:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11564,"name":"address","nodeType":"ElementaryTypeName","src":"6449:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6448:17:35"},"returnParameters":{"id":11569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11575,"src":"6489:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11567,"name":"bool","nodeType":"ElementaryTypeName","src":"6489:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6488:6:35"},"scope":11576,"src":"6426:124:35","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11577,"src":"384:6169:35","usedErrors":[381,384,2490,2493,11230,11232,11234,11236,11238],"usedEvents":[389,2502,2511,2520,11204,11212,11218,11224,11228]}],"src":"33:6522:35"},"id":35},"contracts/interfaces/ICircuitBreaker.sol":{"ast":{"absolutePath":"contracts/interfaces/ICircuitBreaker.sol","exportedSymbols":{"ICircuitBreaker":[11602]},"id":11603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11578,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:36"},{"abstract":false,"baseContracts":[],"canonicalName":"ICircuitBreaker","contractDependencies":[],"contractKind":"interface","documentation":{"id":11579,"nodeType":"StructuredDocumentation","src":"61:185:36","text":" @title ICircuitBreaker\n @dev Interface for circuit breaker functionality\n @notice This interface provides methods for checking transfers against circuit breaker rules"},"fullyImplemented":false,"id":11602,"linearizedBaseContracts":[11602],"name":"ICircuitBreaker","nameLocation":"258:15:36","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":11580,"nodeType":"StructuredDocumentation","src":"281:268:36","text":" @notice Check if a transfer should be allowed based on circuit breaker rules\n @param from The address tokens are transferred from\n @param to The address tokens are transferred to\n @param amount The amount of tokens to transfer"},"functionSelector":"cc1dd94f","id":11589,"implemented":false,"kind":"function","modifiers":[],"name":"checkTransfer","nameLocation":"564:13:36","nodeType":"FunctionDefinition","parameters":{"id":11587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11582,"mutability":"mutable","name":"from","nameLocation":"586:4:36","nodeType":"VariableDeclaration","scope":11589,"src":"578:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11581,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11584,"mutability":"mutable","name":"to","nameLocation":"600:2:36","nodeType":"VariableDeclaration","scope":11589,"src":"592:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11583,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11586,"mutability":"mutable","name":"amount","nameLocation":"612:6:36","nodeType":"VariableDeclaration","scope":11589,"src":"604:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11585,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:42:36"},"returnParameters":{"id":11588,"nodeType":"ParameterList","parameters":[],"src":"633:0:36"},"scope":11602,"src":"555:79:36","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11590,"nodeType":"StructuredDocumentation","src":"646:139:36","text":" @notice Get the current circuit breaker state\n @return isActive Whether the circuit breaker is currently active"},"functionSelector":"22f3e2d4","id":11595,"implemented":false,"kind":"function","modifiers":[],"name":"isActive","nameLocation":"800:8:36","nodeType":"FunctionDefinition","parameters":{"id":11591,"nodeType":"ParameterList","parameters":[],"src":"808:2:36"},"returnParameters":{"id":11594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11593,"mutability":"mutable","name":"isActive","nameLocation":"839:8:36","nodeType":"VariableDeclaration","scope":11595,"src":"834:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11592,"name":"bool","nodeType":"ElementaryTypeName","src":"834:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"833:15:36"},"scope":11602,"src":"791:58:36","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11596,"nodeType":"StructuredDocumentation","src":"861:142:36","text":" @notice Get the reason for circuit breaker activation\n @return reason The reason the circuit breaker was activated"},"functionSelector":"789b6315","id":11601,"implemented":false,"kind":"function","modifiers":[],"name":"getActivationReason","nameLocation":"1018:19:36","nodeType":"FunctionDefinition","parameters":{"id":11597,"nodeType":"ParameterList","parameters":[],"src":"1037:2:36"},"returnParameters":{"id":11600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11599,"mutability":"mutable","name":"reason","nameLocation":"1077:6:36","nodeType":"VariableDeclaration","scope":11601,"src":"1063:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11598,"name":"string","nodeType":"ElementaryTypeName","src":"1063:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1062:22:36"},"scope":11602,"src":"1009:76:36","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11603,"src":"248:840:36","usedErrors":[],"usedEvents":[]}],"src":"33:1057:36"},"id":36},"contracts/interfaces/ITransferHook.sol":{"ast":{"absolutePath":"contracts/interfaces/ITransferHook.sol","exportedSymbols":{"ITransferHook":[11626]},"id":11627,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11604,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:37"},{"abstract":false,"baseContracts":[],"canonicalName":"ITransferHook","contractDependencies":[],"contractKind":"interface","documentation":{"id":11605,"nodeType":"StructuredDocumentation","src":"61:206:37","text":" @title ITransferHook\n @dev Interface for transfer hooks that can be called before and after transfers\n @notice This interface allows for custom logic to be executed during token transfers"},"fullyImplemented":false,"id":11626,"linearizedBaseContracts":[11626],"name":"ITransferHook","nameLocation":"279:13:37","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":11606,"nodeType":"StructuredDocumentation","src":"300:236:37","text":" @notice Called before a transfer is executed\n @param from The address tokens are transferred from\n @param to The address tokens are transferred to\n @param amount The amount of tokens to transfer"},"functionSelector":"1ffb811f","id":11615,"implemented":false,"kind":"function","modifiers":[],"name":"beforeTransfer","nameLocation":"551:14:37","nodeType":"FunctionDefinition","parameters":{"id":11613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11608,"mutability":"mutable","name":"from","nameLocation":"574:4:37","nodeType":"VariableDeclaration","scope":11615,"src":"566:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11607,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11610,"mutability":"mutable","name":"to","nameLocation":"588:2:37","nodeType":"VariableDeclaration","scope":11615,"src":"580:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11609,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11612,"mutability":"mutable","name":"amount","nameLocation":"600:6:37","nodeType":"VariableDeclaration","scope":11615,"src":"592:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11611,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"565:42:37"},"returnParameters":{"id":11614,"nodeType":"ParameterList","parameters":[],"src":"616:0:37"},"scope":11626,"src":"542:75:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":11616,"nodeType":"StructuredDocumentation","src":"629:237:37","text":" @notice Called after a transfer is executed\n @param from The address tokens were transferred from\n @param to The address tokens were transferred to\n @param amount The amount of tokens transferred"},"functionSelector":"f49062ca","id":11625,"implemented":false,"kind":"function","modifiers":[],"name":"afterTransfer","nameLocation":"881:13:37","nodeType":"FunctionDefinition","parameters":{"id":11623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11618,"mutability":"mutable","name":"from","nameLocation":"903:4:37","nodeType":"VariableDeclaration","scope":11625,"src":"895:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11617,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11620,"mutability":"mutable","name":"to","nameLocation":"917:2:37","nodeType":"VariableDeclaration","scope":11625,"src":"909:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11619,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11622,"mutability":"mutable","name":"amount","nameLocation":"929:6:37","nodeType":"VariableDeclaration","scope":11625,"src":"921:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11621,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"894:42:37"},"returnParameters":{"id":11624,"nodeType":"ParameterList","parameters":[],"src":"945:0:37"},"scope":11626,"src":"872:74:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":11627,"src":"269:680:37","usedErrors":[],"usedEvents":[]}],"src":"33:918:37"},"id":37}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ERC20PausableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":\"ERC20PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x76fa4ae31ed43664c3ccadadec6395192216e8bb958aaaf583282024d20644a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671413f9138325daeda7b5ddb8dbb3e025bdc7b29bd8c7e9c8e5d1ba2b962b2e\",\"dweb:/ipfs/QmcBW9dDj9XHfaeYnoV3VsRnL6iYpmspAf4619mnfj8Vcu\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"NoncesUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":\"NoncesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207abcb047275fe9ab1021b00d87fa28f2bd4b7182b05f5497c443b4c3644476d664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xBCB047275FE9AB1021B00D87FA28F2BD4B7182B05F5497C443B4C3 PUSH5 0x4476D66473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"496:5741:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207abcb047275fe9ab1021b00d87fa28f2bd4b7182b05f5497c443b4c3644476d664736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xBCB047275FE9AB1021B00D87FA28F2BD4B7182B05F5497C443B4C3 PUSH5 0x4476D66473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"496:5741:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d7d4a67df310761069c72f0aa7aca48785182f028d0ab5cb914d8d597047c81a64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xD4 0xA6 PUSH30 0xF310761069C72F0AA7ACA48785182F028D0AB5CB914D8D597047C81A6473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"233:5762:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d7d4a67df310761069c72f0aa7aca48785182f028d0ab5cb914d8d597047c81a64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xD4 0xA6 PUSH30 0xF310761069C72F0AA7ACA48785182F028D0AB5CB914D8D597047C81A6473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"233:5762:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200a9b3bfd42e2839c544b73e312c4412f54c9412eb538adc8349b88bcecdc96e664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP12 EXTCODESIZE REVERT TIMESTAMP 0xE2 DUP4 SWAP13 SLOAD 0x4B PUSH20 0xE312C4412F54C9412EB538ADC8349B88BCECDC96 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"411:484:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200a9b3bfd42e2839c544b73e312c4412f54c9412eb538adc8349b88bcecdc96e664736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP12 EXTCODESIZE REVERT TIMESTAMP 0xE2 DUP4 SWAP13 SLOAD 0x4B PUSH20 0xE312C4412F54C9412EB538ADC8349B88BCECDC96 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"411:484:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c1f375d05e58ba4a844d4b298bac767bc297cf7bb95f8aa94f49fae804292da964736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 RETURN PUSH22 0xD05E58BA4A844D4B298BAC767BC297CF7BB95F8AA94F 0x49 STATICCALL 0xE8 DIV 0x29 0x2D 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c1f375d05e58ba4a844d4b298bac767bc297cf7bb95f8aa94f49fae804292da964736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 RETURN PUSH22 0xD05E58BA4A844D4B298BAC767BC297CF7BB95F8AA94F 0x49 STATICCALL 0xE8 DIV 0x29 0x2D 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fb8720b26db07c01717f156a729c9fcef0507559f2ff0ee85811c23aca84d99264736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB DUP8 KECCAK256 0xB2 PUSH14 0xB07C01717F156A729C9FCEF05075 MSIZE CALLCODE SELFDESTRUCT 0xE 0xE8 PC GT 0xC2 GASPRICE 0xCA DUP5 0xD9 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fb8720b26db07c01717f156a729c9fcef0507559f2ff0ee85811c23aca84d99264736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB DUP8 KECCAK256 0xB2 PUSH14 0xB07C01717F156A729C9FCEF05075 MSIZE CALLCODE SELFDESTRUCT 0xE 0xE8 PC GT 0xC2 GASPRICE 0xCA DUP5 0xD9 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3a4d5c08521c04733aea6cd5a905190ec6282906fc31227a0e00b5cd8c1003a64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 LOG4 0xD5 0xC0 DUP6 0x21 0xC0 SELFBALANCE CALLER 0xAE 0xA6 0xCD GAS SWAP1 MLOAD SWAP1 0xEC PUSH3 0x82906F 0xC3 SLT 0x27 LOG0 0xE0 SIGNEXTEND 0x5C 0xD8 0xC1 STOP GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18982:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3a4d5c08521c04733aea6cd5a905190ec6282906fc31227a0e00b5cd8c1003a64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 LOG4 0xD5 0xC0 DUP6 0x21 0xC0 SELFBALANCE CALLER 0xAE 0xA6 0xCD GAS SWAP1 MLOAD SWAP1 0xEC PUSH3 0x82906F 0xC3 SLT 0x27 LOG0 0xE0 SIGNEXTEND 0x5C 0xD8 0xC1 STOP GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18982:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b6430a439b9b4e987aa553ab547fd94efb3542f6090bf03998f9e23959cbd92364736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NUMBER EXP NUMBER SWAP12 SWAP12 0x4E SWAP9 PUSH27 0xA553AB547FD94EFB3542F6090BF03998F9E23959CBD92364736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"344:7470:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b6430a439b9b4e987aa553ab547fd94efb3542f6090bf03998f9e23959cbd92364736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NUMBER EXP NUMBER SWAP12 SWAP12 0x4E SWAP9 PUSH27 0xA553AB547FD94EFB3542F6090BF03998F9E23959CBD92364736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"344:7470:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220baf705fc408d63affb9f61ebc30e25556cfc387a72308dfc650c66f9787bf9e564736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xF7 SDIV 0xFC BLOCKHASH DUP14 PUSH4 0xAFFB9F61 0xEB 0xC3 0xE 0x25 SSTORE PUSH13 0xFC387A72308DFC650C66F9787B 0xF9 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"521:3729:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220baf705fc408d63affb9f61ebc30e25556cfc387a72308dfc650c66f9787bf9e564736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xF7 SDIV 0xFC BLOCKHASH DUP14 PUSH4 0xAFFB9F61 0xEB 0xC3 0xE 0x25 SSTORE PUSH13 0xFC387A72308DFC650C66F9787B 0xF9 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"521:3729:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122018e2939ca450822b030e9a2d6e56859435919024c3f3454b5617cdacb3e3ee2664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xE2 SWAP4 SWAP13 LOG4 POP DUP3 0x2B SUB 0xE SWAP11 0x2D PUSH15 0x56859435919024C3F3454B5617CDAC 0xB3 0xE3 0xEE 0x26 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:31863:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122018e2939ca450822b030e9a2d6e56859435919024c3f3454b5617cdacb3e3ee2664736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xE2 SWAP4 SWAP13 LOG4 POP DUP3 0x2B SUB 0xE SWAP11 0x2D PUSH15 0x56859435919024C3F3454B5617CDAC 0xB3 0xE3 0xEE 0x26 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:31863:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220746c3da3782bc9d3b1a9b0dec1d58f068b605c554803a694737015b1c1e5677564736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x6C3DA3782BC9D3B1A9B0DEC1D58F068B605C554803 0xA6 SWAP5 PUSH20 0x7015B1C1E5677564736F6C634300081600330000 ","sourceMap":"769:34173:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220746c3da3782bc9d3b1a9b0dec1d58f068b605c554803a694737015b1c1e5677564736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x6C3DA3782BC9D3B1A9B0DEC1D58F068B605C554803 0xA6 SWAP5 PUSH20 0x7015B1C1E5677564736F6C634300081600330000 ","sourceMap":"769:34173:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220afd9a1ae4b1f0b42f8695875bf634730c794b06386327b842c795d5d363a2cdf64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xD9 LOG1 0xAE 0x4B 0x1F SIGNEXTEND TIMESTAMP 0xF8 PUSH10 0x5875BF634730C794B063 DUP7 ORIGIN PUSH28 0x842C795D5D363A2CDF64736F6C634300081600330000000000000000 ","sourceMap":"258:2354:32:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220afd9a1ae4b1f0b42f8695875bf634730c794b06386327b842c795d5d363a2cdf64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xD9 LOG1 0xAE 0x4B 0x1F SIGNEXTEND TIMESTAMP 0xF8 PUSH10 0x5875BF634730C794B063 DUP7 ORIGIN PUSH28 0x842C795D5D363A2CDF64736F6C634300081600330000000000000000 ","sourceMap":"258:2354:32:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/CircuitBreaker.sol":{"CircuitBreaker":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"CircuitBreakerActive","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedAttemptsExceeded","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidParameters","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UnauthorizedCaller","type":"error"},{"inputs":[],"name":"VelocityLimitExceeded","type":"error"},{"inputs":[],"name":"VolumeLimitExceeded","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AutoResetTriggered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CircuitBreakerActivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CircuitBreakerDeactivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"attempts","type":"uint256"}],"name":"FailedAttemptsExceededEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"limit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actual","type":"uint256"},{"indexed":false,"internalType":"string","name":"period","type":"string"}],"name":"VelocityLimitExceededEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"limit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actual","type":"uint256"},{"indexed":false,"internalType":"string","name":"period","type":"string"}],"name":"VolumeLimitExceededEvent","type":"event"},{"inputs":[],"name":"CIRCUIT_BREAKER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"name":"activateCircuitBreaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"activationReason","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activationTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"autoReset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"autoResetInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"checkTransfer","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"dailyTransferCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"dailyVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deactivateCircuitBreaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"failedAttemptWindow","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"failedAttempts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActivationReason","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentDailyTransferCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentDailyVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentHourlyTransferCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentHourlyVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"hourlyTransferCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"hourlyVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint256","name":"_maxDailyVolume","type":"uint256"},{"internalType":"uint256","name":"_maxHourlyVolume","type":"uint256"},{"internalType":"uint256","name":"_maxSingleTransfer","type":"uint256"},{"internalType":"uint256","name":"_maxTransfersPerHour","type":"uint256"},{"internalType":"uint256","name":"_maxTransfersPerDay","type":"uint256"},{"internalType":"uint256","name":"_maxFailedAttempts","type":"uint256"},{"internalType":"uint256","name":"_failedAttemptWindow","type":"uint256"},{"internalType":"uint256","name":"_autoResetInterval","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isCircuitBreakerActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastFailedAttempt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastResetTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxDailyVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxFailedAttempts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxHourlyVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSingleTransfer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransfersPerDay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransfersPerHour","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"recordFailedAttempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"recordTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxDailyVolume","type":"uint256"},{"internalType":"uint256","name":"_maxHourlyVolume","type":"uint256"},{"internalType":"uint256","name":"_maxSingleTransfer","type":"uint256"},{"internalType":"uint256","name":"_maxTransfersPerHour","type":"uint256"},{"internalType":"uint256","name":"_maxTransfersPerDay","type":"uint256"},{"internalType":"uint256","name":"_maxFailedAttempts","type":"uint256"},{"internalType":"uint256","name":"_failedAttemptWindow","type":"uint256"},{"internalType":"uint256","name":"_autoResetInterval","type":"uint256"}],"name":"updateLimits","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657611715908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c806206d1c514610e9e5783816301e3a90314610e0a5750806301ffc9a714610db457806307df2f1814610d9557806312da5d1e14610d765780631393585714610d4b57806322f3e2d414610c72578063248a9ca314610d13578063258061aa14610cf45780632f2ff15d14610ccc57806332627ec714610c9457806332941ecb14610c7257806336568abe14610c2b57806336b089d814610c0c57806342200b9e14610ba257806344baa6c2146109005780635c975abb14610b5f5780635feb1f7114610b4057806363236f4914610b18578063668fb1be146109d75780636b5a0d8c146109545780636c58ab8314610935578063789b6315146109005780637b969e1d146108c85780637c5cf1691461089e5780638fbf59291461087657806391d1485414610822578063943ca3b9146107fa578063a2177124146107db578063a217fddf146107c0578063a7e02d7514610796578063ae6e01451461076b578063cc1dd94f146104f8578063d114e6fc14610380578063d547741f14610335578063da4493f614610316578063da4a64bc146102f7578063df18315b146102d9578063e54e55ae1461029a578063e6b64fdb146102725763fd270b8d146101e457600080fd5b3461026e5761010036600319011261026e578280526000805160206116a083398151915260205280832033845260205260ff81842054161561025257508035600355602435905560443560055560643560065560843560075560a43560085560c43560095560e435600a5580f35b91604492519163e2517d3f60e01b835233908301526024820152fd5b8280fd5b50903461026e57602036600319011261026e576020928291358152600f845220549051908152f35b8382346102d557816003193601126102d557602090517f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654928152f35b5080fd5b50903461026e578260031936011261026e5760209250549051908152f35b8382346102d557816003193601126102d5576020906007549051908152f35b8382346102d557816003193601126102d5576020906002549051908152f35b503461026e578060031936011261026e5761037c91356103776001610358610f4f565b938387526000805160206116a08339815191526020528620015461120d565b611429565b5080f35b50903461026e5761012036600319011261026e5761039c610f6a565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009182549160ff83861c16159267ffffffffffffffff8116801590816104f0575b60011490816104e6575b1590816104dd575b506104cd5767ffffffffffffffff19811660011785556104309190846104ae575b5061041961165e565b61042161165e565b61042a81611240565b506112e0565b50602435600355604435905560643560055560843560065560a43560075560c43560085560e43560095561010435600a5542600b5561046d578280f35b805468ff00000000000000001916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808280f35b68ffffffffffffffffff19166801000000000000000117855538610410565b855163f92ee8a960e01b81528390fd5b905015386103ef565b303b1591506103e7565b8591506103dd565b503461026e5761050736610f80565b9291505060ff8454166107295760055482116106d157620151804204610e10420490808652602093600c8552610540818589205461111b565b6003541061067d5761055c90838852600d86528488205461111b565b855410610628578552600f83528185205460075411156105da578452600e825280842054600654111561058d578380f35b5162461bcd60e51b8152918201526024808201527f486f75726c79207472616e7366657220636f756e74206c696d697420657863656044820152631959195960e21b606482015260849150fd5b505162461bcd60e51b815291820152602360248201527f4461696c79207472616e7366657220636f756e74206c696d697420657863656560448201526219195960ea1b606482015260849150fd5b50505162461bcd60e51b815291820152602960248201527f5472616e7366657220776f756c642065786365656420686f75726c7920766f6c6044820152681d5b59481b1a5b5a5d60ba1b606482015260849150fd5b835162461bcd60e51b8152808701869052602860248201527f5472616e7366657220776f756c6420657863656564206461696c7920766f6c756044820152671b59481b1a5b5a5d60c21b6064820152608490fd5b5162461bcd60e51b8152602081840152602d60248201527f5472616e7366657220616d6f756e7420657863656564732073696e676c65207460448201526c1c985b9cd9995c881b1a5b5a5d609a1b6064820152608490fd5b5162461bcd60e51b8152602081840152601960248201527f4369726375697420627265616b657220697320616374697665000000000000006044820152606490fd5b8382346102d557816003193601126102d557806020926201518042048152600c845220549051908152f35b8382346102d557816003193601126102d55780602092610e1042048152600d845220549051908152f35b8382346102d557816003193601126102d55751908152602090f35b8382346102d557816003193601126102d557602090600b549051908152f35b50903461026e57602036600319011261026e576020928291358152600c845220549051908152f35b50903461026e578160031936011261026e578160209360ff92610843610f4f565b903582526000805160206116a083398151915286528282206001600160a01b039091168252855220549151911615158152f35b50903461026e57602036600319011261026e576020928291358152600d845220549051908152f35b8382346102d557816003193601126102d55780602092610e1042048152600e845220549051908152f35b8382346102d55760203660031901126102d55760209181906001600160a01b036108f0610f6a565b1681526011845220549051908152f35b8382346102d557816003193601126102d5576109319061091e611027565b90519182916020835260208301906110db565b0390f35b8382346102d557816003193601126102d5576020906006549051908152f35b503461026e57602036600319011261026e578282359167ffffffffffffffff9384841161026e573660238501121561026e578301359384116102d55736602485850101116102d557836109d49460246020936109ae611193565b51956109c3601f8401601f1916860188610fef565b8287520183860137830101526114ac565b80f35b508290346102d55760208060031936011261026e576001600160a01b036109fc610f6a565b169081845260118152828420544203428111610b055760095411610aea57818452601081526001838520555b81845260118152428385205560108152828420546008541115610a49578380f35b825183810181811067ffffffffffffffff821117610ad7577fcef34426b92fd7c1a4dacfb9e7b9625a61226ac4a0e6750a048ad536f84fa87f95965090610aba918552601881527f4661696c656420617474656d7074732065786365656465640000000000000000838201526114ac565b8185526010815282852054908351928352820152a1808280808380f35b634e487b7160e01b865260418752602486fd5b81845260108152828420610afe8154611184565b9055610a28565b634e487b7160e01b855260118652602485fd5b50903461026e57602036600319011261026e576020928291358152600e845220549051908152f35b8382346102d557816003193601126102d557602090600a549051908152f35b8382346102d557816003193601126102d55760209060ff7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300541690519015158152f35b8382346102d557816003193601126102d55760207f4658f69373abd2ae36994b6398ba682f149ae01805feb8227244965d9f32090991610be0611193565b60ff198454168455610bfb610bf6600154610fb5565b61113e565b60006001558360025551428152a180f35b8382346102d557816003193601126102d5576020906005549051908152f35b508290346102d557806003193601126102d557610c46610f4f565b90336001600160a01b03831603610c63575061037c919235611429565b5163334bd91960e11b81528390fd5b8382346102d557816003193601126102d55760ff602092541690519015158152f35b8382346102d55760203660031901126102d55760209181906001600160a01b03610cbc610f6a565b1681526010845220549051908152f35b503461026e578060031936011261026e5761037c9135610cef6001610358610f4f565b6113a2565b8382346102d557816003193601126102d5576020906009549051908152f35b50903461026e57602036600319011261026e57816020936001923581526000805160206116a083398151915285522001549051908152f35b8382346102d557816003193601126102d557806020926201518042048152600f845220549051908152f35b8382346102d557816003193601126102d5576020906008549051908152f35b8382346102d557816003193601126102d5576020906003549051908152f35b50903461026e57602036600319011261026e57359063ffffffff60e01b821680920361026e5760209250637965db0b60e01b8214918215610df9575b50519015158152f35b6301ffc9a760e01b14915038610df0565b808334610e9b57610e1a36610f80565b905062015180420490610e10420490828652600c602052848620610e3f82825461111b565b9055818652600d602052610e5785872091825461111b565b90558452600e602052828420610e6d8154611184565b90558352600f602052818320610e838154611184565b90556001600160a01b03168252601060205281205580f35b50fd5b8382346102d557816003193601126102d557610ebf600b54600a549061111b565b421015610eca575080f35b60207ff1b43c2e52a9e846469baaebdb63ecfd00023cf4e2b651237f6068f2467d20939160ff198454168455610f04610bf6600154610fb5565b60006001558360025542600b55620151804204808552600c83528482812055610e1042048552600d83528482812055600e835284828120558452600f8252838181205551428152a180f35b602435906001600160a01b0382168203610f6557565b600080fd5b600435906001600160a01b0382168203610f6557565b6060906003190112610f65576001600160a01b03906004358281168103610f6557916024359081168103610f65579060443590565b90600182811c92168015610fe5575b6020831014610fcf57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fc4565b90601f8019910116810190811067ffffffffffffffff82111761101157604052565b634e487b7160e01b600052604160045260246000fd5b6040519060008260019160015461103d81610fb5565b80845293602091600181169081156110b75750600114611068575b505061106692500383610fef565b565b91509260016000526000805160206116c0833981519152936000925b82841061109f57506110669450505081016020013880611058565b85548885018301529485019487945092810192611084565b9150506020925061106694915060ff191682840152151560051b8201013880611058565b919082519283825260005b848110611107575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016110e6565b9190820180921161112857565b634e487b7160e01b600052601160045260246000fd5b601f81116111495750565b60019060006001600052601f6000805160206116c0833981519152920160051c8201915b82811061117a5750505050565b818155830161116d565b60001981146111285760010190565b3360009081527f4d7367b4c45c93361c07a01249cc1ef90933a8773f26df2dabd0fb4074504d1160205260409020547f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654929060ff16156111ef5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b806000526000805160206116a083398151915260205260406000203360005260205260ff60406000205416156111ef5750565b6001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120549091906000805160206116a08339815191529060ff166112db578280526020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505090565b6001600160a01b031660008181527f4d7367b4c45c93361c07a01249cc1ef90933a8773f26df2dabd0fb4074504d1160205260408120549091907f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a265492906000805160206116a08339815191529060ff1661139c578184526020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b50505090565b906000918083526000805160206116a083398151915280602052604084209260018060a01b03169283855260205260ff6040852054161560001461139c578184526020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b906000918083526000805160206116a083398151915280602052604084209260018060a01b03169283855260205260ff60408520541660001461139c57818452602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6000805460ff191660019081178255825193929167ffffffffffffffff851161164a576114d98254610fb5565b601f81116115f7575b50602090816001601f881114611564575093947f11803daffb8bd292f79dc0d607f5a1c30184b28e74ca55f6352d0d874d2107279461154e94939282611559575b50600019600383901b1c191690821b1790555b426002556040519182916040835260408301906110db565b4260208301520390a1565b905083015138611523565b8382526000805160206116c08339815191529291601f198816915b8282106115e057505095839261154e959492827f11803daffb8bd292f79dc0d607f5a1c30184b28e74ca55f6352d0d874d2107279899106115c7575b5050811b019055611536565b85015160001960f88460031b161c1916905538806115bb565b808685968294968a0151815501950193019061157f565b8282526000805160206116c0833981519152601f870160051c81019160208810611640575b601f0160051c019083905b8281106116355750506114e2565b838155018390611627565b909150819061161c565b634e487b7160e01b81526041600452602490fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561168d57565b604051631afcd79f60e31b8152600490fdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6a264697066735822122061f18665effe1162fa9f4b5b5a163110ef54f774aaec0d11793c6fbb72ee2c4d64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x1715 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x6D1C5 EQ PUSH2 0xE9E JUMPI DUP4 DUP2 PUSH4 0x1E3A903 EQ PUSH2 0xE0A JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDB4 JUMPI DUP1 PUSH4 0x7DF2F18 EQ PUSH2 0xD95 JUMPI DUP1 PUSH4 0x12DA5D1E EQ PUSH2 0xD76 JUMPI DUP1 PUSH4 0x13935857 EQ PUSH2 0xD4B JUMPI DUP1 PUSH4 0x22F3E2D4 EQ PUSH2 0xC72 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD13 JUMPI DUP1 PUSH4 0x258061AA EQ PUSH2 0xCF4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xCCC JUMPI DUP1 PUSH4 0x32627EC7 EQ PUSH2 0xC94 JUMPI DUP1 PUSH4 0x32941ECB EQ PUSH2 0xC72 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xC2B JUMPI DUP1 PUSH4 0x36B089D8 EQ PUSH2 0xC0C JUMPI DUP1 PUSH4 0x42200B9E EQ PUSH2 0xBA2 JUMPI DUP1 PUSH4 0x44BAA6C2 EQ PUSH2 0x900 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xB5F JUMPI DUP1 PUSH4 0x5FEB1F71 EQ PUSH2 0xB40 JUMPI DUP1 PUSH4 0x63236F49 EQ PUSH2 0xB18 JUMPI DUP1 PUSH4 0x668FB1BE EQ PUSH2 0x9D7 JUMPI DUP1 PUSH4 0x6B5A0D8C EQ PUSH2 0x954 JUMPI DUP1 PUSH4 0x6C58AB83 EQ PUSH2 0x935 JUMPI DUP1 PUSH4 0x789B6315 EQ PUSH2 0x900 JUMPI DUP1 PUSH4 0x7B969E1D EQ PUSH2 0x8C8 JUMPI DUP1 PUSH4 0x7C5CF169 EQ PUSH2 0x89E JUMPI DUP1 PUSH4 0x8FBF5929 EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0x943CA3B9 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xA2177124 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7C0 JUMPI DUP1 PUSH4 0xA7E02D75 EQ PUSH2 0x796 JUMPI DUP1 PUSH4 0xAE6E0145 EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0xCC1DD94F EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xD114E6FC EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDA4493F6 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xDA4A64BC EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xDF18315B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE54E55AE EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xE6B64FDB EQ PUSH2 0x272 JUMPI PUSH4 0xFD270B8D EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI DUP3 DUP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x252 JUMPI POP DUP1 CALLDATALOAD PUSH1 0x3 SSTORE PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x7 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x9 SSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST SWAP2 PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH2 0x37C SWAP2 CALLDATALOAD PUSH2 0x377 PUSH1 0x1 PUSH2 0x358 PUSH2 0xF4F JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x120D JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH2 0x39C PUSH2 0xF6A JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0xFF DUP4 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x4F0 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x4E6 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x4DD JUMPI JUMPDEST POP PUSH2 0x4CD JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE PUSH2 0x430 SWAP2 SWAP1 DUP5 PUSH2 0x4AE JUMPI JUMPDEST POP PUSH2 0x419 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x421 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x42A DUP2 PUSH2 0x1240 JUMP JUMPDEST POP PUSH2 0x12E0 JUMP JUMPDEST POP PUSH1 0x24 CALLDATALOAD PUSH1 0x3 SSTORE PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x7 SSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x9 SSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0xA SSTORE TIMESTAMP PUSH1 0xB SSTORE PUSH2 0x46D JUMPI DUP3 DUP1 RETURN JUMPDEST DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP6 SSTORE CODESIZE PUSH2 0x410 JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x3EF JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x3E7 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x3DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x507 CALLDATASIZE PUSH2 0xF80 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH1 0xFF DUP5 SLOAD AND PUSH2 0x729 JUMPI PUSH1 0x5 SLOAD DUP3 GT PUSH2 0x6D1 JUMPI PUSH3 0x15180 TIMESTAMP DIV PUSH2 0xE10 TIMESTAMP DIV SWAP1 DUP1 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0xC DUP6 MSTORE PUSH2 0x540 DUP2 DUP6 DUP10 KECCAK256 SLOAD PUSH2 0x111B JUMP JUMPDEST PUSH1 0x3 SLOAD LT PUSH2 0x67D JUMPI PUSH2 0x55C SWAP1 DUP4 DUP9 MSTORE PUSH1 0xD DUP7 MSTORE DUP5 DUP9 KECCAK256 SLOAD PUSH2 0x111B JUMP JUMPDEST DUP6 SLOAD LT PUSH2 0x628 JUMPI DUP6 MSTORE PUSH1 0xF DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x5DA JUMPI DUP5 MSTORE PUSH1 0xE DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x58D JUMPI DUP4 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x486F75726C79207472616E7366657220636F756E74206C696D69742065786365 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x19591959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST POP MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207472616E7366657220636F756E74206C696D6974206578636565 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x191959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST POP POP MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220776F756C642065786365656420686F75726C7920766F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1D5B59481B1A5B5A5D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220776F756C6420657863656564206461696C7920766F6C75 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1B59481B1A5B5A5D PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420657863656564732073696E676C652074 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C985B9CD9995C881B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4369726375697420627265616B65722069732061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xE10 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xD DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x843 PUSH2 0xF4F JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xD DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xE10 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8F0 PUSH2 0xF6A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH2 0x931 SWAP1 PUSH2 0x91E PUSH2 0x1027 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x10DB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI DUP3 DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP5 GT PUSH2 0x26E JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x2D5 JUMPI CALLDATASIZE PUSH1 0x24 DUP6 DUP6 ADD ADD GT PUSH2 0x2D5 JUMPI DUP4 PUSH2 0x9D4 SWAP5 PUSH1 0x24 PUSH1 0x20 SWAP4 PUSH2 0x9AE PUSH2 0x1193 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x9C3 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP7 ADD DUP9 PUSH2 0xFEF JUMP JUMPDEST DUP3 DUP8 MSTORE ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x14AC JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2D5 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9FC PUSH2 0xF6A JUMP JUMPDEST AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x11 DUP2 MSTORE DUP3 DUP5 KECCAK256 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0xB05 JUMPI PUSH1 0x9 SLOAD GT PUSH2 0xAEA JUMPI DUP2 DUP5 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 SSTORE JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x11 DUP2 MSTORE TIMESTAMP DUP4 DUP6 KECCAK256 SSTORE PUSH1 0x10 DUP2 MSTORE DUP3 DUP5 KECCAK256 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0xA49 JUMPI DUP4 DUP1 RETURN JUMPDEST DUP3 MLOAD DUP4 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xAD7 JUMPI PUSH32 0xCEF34426B92FD7C1A4DACFB9E7B9625A61226AC4A0E6750A048AD536F84FA87F SWAP6 SWAP7 POP SWAP1 PUSH2 0xABA SWAP2 DUP6 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x4661696C656420617474656D7074732065786365656465640000000000000000 DUP4 DUP3 ADD MSTORE PUSH2 0x14AC JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x10 DUP2 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP1 DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG1 DUP1 DUP3 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x10 DUP2 MSTORE DUP3 DUP5 KECCAK256 PUSH2 0xAFE DUP2 SLOAD PUSH2 0x1184 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xA28 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 PUSH32 0x4658F69373ABD2AE36994B6398BA682F149AE01805FEB8227244965D9F320909 SWAP2 PUSH2 0xBE0 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 SLOAD AND DUP5 SSTORE PUSH2 0xBFB PUSH2 0xBF6 PUSH1 0x1 SLOAD PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SSTORE DUP4 PUSH1 0x2 SSTORE MLOAD TIMESTAMP DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH2 0xC46 PUSH2 0xF4F JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xC63 JUMPI POP PUSH2 0x37C SWAP2 SWAP3 CALLDATALOAD PUSH2 0x1429 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCBC PUSH2 0xF6A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH2 0x37C SWAP2 CALLDATALOAD PUSH2 0xCEF PUSH1 0x1 PUSH2 0x358 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x13A2 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xDF9 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0xDF0 JUMP JUMPDEST DUP1 DUP4 CALLVALUE PUSH2 0xE9B JUMPI PUSH2 0xE1A CALLDATASIZE PUSH2 0xF80 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 TIMESTAMP DIV SWAP1 PUSH2 0xE10 TIMESTAMP DIV SWAP1 DUP3 DUP7 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 PUSH2 0xE3F DUP3 DUP3 SLOAD PUSH2 0x111B JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP7 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0xE57 DUP6 DUP8 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x111B JUMP JUMPDEST SWAP1 SSTORE DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP3 DUP5 KECCAK256 PUSH2 0xE6D DUP2 SLOAD PUSH2 0x1184 JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE DUP2 DUP4 KECCAK256 PUSH2 0xE83 DUP2 SLOAD PUSH2 0x1184 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 KECCAK256 SSTORE DUP1 RETURN JUMPDEST POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH2 0xEBF PUSH1 0xB SLOAD PUSH1 0xA SLOAD SWAP1 PUSH2 0x111B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xECA JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH32 0xF1B43C2E52A9E846469BAAEBDB63ECFD00023CF4E2B651237F6068F2467D2093 SWAP2 PUSH1 0xFF NOT DUP5 SLOAD AND DUP5 SSTORE PUSH2 0xF04 PUSH2 0xBF6 PUSH1 0x1 SLOAD PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SSTORE DUP4 PUSH1 0x2 SSTORE TIMESTAMP PUSH1 0xB SSTORE PUSH3 0x15180 TIMESTAMP DIV DUP1 DUP6 MSTORE PUSH1 0xC DUP4 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE PUSH2 0xE10 TIMESTAMP DIV DUP6 MSTORE PUSH1 0xD DUP4 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE DUP5 MSTORE PUSH1 0xF DUP3 MSTORE DUP4 DUP2 DUP2 KECCAK256 SSTORE MLOAD TIMESTAMP DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF65 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF65 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xF65 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xF65 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xF65 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xFE5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xFCF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1011 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x1 SWAP2 PUSH1 0x1 SLOAD PUSH2 0x103D DUP2 PUSH2 0xFB5 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x10B7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1068 JUMPI JUMPDEST POP POP PUSH2 0x1066 SWAP3 POP SUB DUP4 PUSH2 0xFEF JUMP JUMPDEST JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x109F JUMPI POP PUSH2 0x1066 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1058 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1084 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x1066 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1058 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1107 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x10E6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1128 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1149 JUMPI POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x117A JUMPI POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE DUP4 ADD PUSH2 0x116D JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1128 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x11EF JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EF JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x12DB JUMPI DUP3 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x139C JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x139C JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x139C JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP3 MLOAD SWAP4 SWAP3 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x164A JUMPI PUSH2 0x14D9 DUP3 SLOAD PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15F7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1F DUP9 GT EQ PUSH2 0x1564 JUMPI POP SWAP4 SWAP5 PUSH32 0x11803DAFFB8BD292F79DC0D607F5A1C30184B28E74CA55F6352D0D874D210727 SWAP5 PUSH2 0x154E SWAP5 SWAP4 SWAP3 DUP3 PUSH2 0x1559 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x10DB JUMP JUMPDEST TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0x1523 JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 PUSH1 0x1F NOT DUP9 AND SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x15E0 JUMPI POP POP SWAP6 DUP4 SWAP3 PUSH2 0x154E SWAP6 SWAP5 SWAP3 DUP3 PUSH32 0x11803DAFFB8BD292F79DC0D607F5A1C30184B28E74CA55F6352D0D874D210727 SWAP9 SWAP10 LT PUSH2 0x15C7 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1536 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x15BB JUMP JUMPDEST DUP1 DUP7 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x157F JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP9 LT PUSH2 0x1640 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1635 JUMPI POP POP PUSH2 0x14E2 JUMP JUMPDEST DUP4 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0x1627 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x168D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP 0xB1 0xE 0x2D MSTORE PUSH23 0x12073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2 0xB7 STATICCALL 0xC 0xF6 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF186 PUSH6 0xEFFE1162FA9F 0x4B JUMPDEST GAS AND BALANCE LT 0xEF SLOAD 0xF7 PUSH21 0xAAEC0D11793C6FBB72EE2C4D64736F6C6343000816 STOP CALLER ","sourceMap":"461:9397:33:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3919,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_15836":{"entryPoint":3946,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":3968,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_string":{"entryPoint":4315,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":4379,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage_ptr":{"entryPoint":4414,"id":null,"parameterSlots":1,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":4135,"id":null,"parameterSlots":0,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4021,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4079,"id":null,"parameterSlots":2,"returnSlots":0},"fun_activateCircuitBreaker":{"entryPoint":5292,"id":9470,"parameterSlots":1,"returnSlots":0},"fun_checkInitializing":{"entryPoint":5726,"id":540,"parameterSlots":0,"returnSlots":0},"fun_checkRole":{"entryPoint":4621,"id":131,"parameterSlots":1,"returnSlots":0},"fun_checkRole_15838":{"entryPoint":4499,"id":131,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":5026,"id":317,"parameterSlots":2,"returnSlots":1},"fun_grantRole_15849":{"entryPoint":4672,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_15850":{"entryPoint":4832,"id":317,"parameterSlots":1,"returnSlots":1},"fun_revokeRole":{"entryPoint":5161,"id":363,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":4484,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x6D1C5 EQ PUSH2 0xE9E JUMPI DUP4 DUP2 PUSH4 0x1E3A903 EQ PUSH2 0xE0A JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDB4 JUMPI DUP1 PUSH4 0x7DF2F18 EQ PUSH2 0xD95 JUMPI DUP1 PUSH4 0x12DA5D1E EQ PUSH2 0xD76 JUMPI DUP1 PUSH4 0x13935857 EQ PUSH2 0xD4B JUMPI DUP1 PUSH4 0x22F3E2D4 EQ PUSH2 0xC72 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD13 JUMPI DUP1 PUSH4 0x258061AA EQ PUSH2 0xCF4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xCCC JUMPI DUP1 PUSH4 0x32627EC7 EQ PUSH2 0xC94 JUMPI DUP1 PUSH4 0x32941ECB EQ PUSH2 0xC72 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xC2B JUMPI DUP1 PUSH4 0x36B089D8 EQ PUSH2 0xC0C JUMPI DUP1 PUSH4 0x42200B9E EQ PUSH2 0xBA2 JUMPI DUP1 PUSH4 0x44BAA6C2 EQ PUSH2 0x900 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xB5F JUMPI DUP1 PUSH4 0x5FEB1F71 EQ PUSH2 0xB40 JUMPI DUP1 PUSH4 0x63236F49 EQ PUSH2 0xB18 JUMPI DUP1 PUSH4 0x668FB1BE EQ PUSH2 0x9D7 JUMPI DUP1 PUSH4 0x6B5A0D8C EQ PUSH2 0x954 JUMPI DUP1 PUSH4 0x6C58AB83 EQ PUSH2 0x935 JUMPI DUP1 PUSH4 0x789B6315 EQ PUSH2 0x900 JUMPI DUP1 PUSH4 0x7B969E1D EQ PUSH2 0x8C8 JUMPI DUP1 PUSH4 0x7C5CF169 EQ PUSH2 0x89E JUMPI DUP1 PUSH4 0x8FBF5929 EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0x943CA3B9 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xA2177124 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7C0 JUMPI DUP1 PUSH4 0xA7E02D75 EQ PUSH2 0x796 JUMPI DUP1 PUSH4 0xAE6E0145 EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0xCC1DD94F EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xD114E6FC EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDA4493F6 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xDA4A64BC EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xDF18315B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE54E55AE EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xE6B64FDB EQ PUSH2 0x272 JUMPI PUSH4 0xFD270B8D EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI DUP3 DUP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x252 JUMPI POP DUP1 CALLDATALOAD PUSH1 0x3 SSTORE PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x7 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x9 SSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST SWAP2 PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH2 0x37C SWAP2 CALLDATALOAD PUSH2 0x377 PUSH1 0x1 PUSH2 0x358 PUSH2 0xF4F JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x120D JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH2 0x39C PUSH2 0xF6A JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0xFF DUP4 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x4F0 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x4E6 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x4DD JUMPI JUMPDEST POP PUSH2 0x4CD JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE PUSH2 0x430 SWAP2 SWAP1 DUP5 PUSH2 0x4AE JUMPI JUMPDEST POP PUSH2 0x419 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x421 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x42A DUP2 PUSH2 0x1240 JUMP JUMPDEST POP PUSH2 0x12E0 JUMP JUMPDEST POP PUSH1 0x24 CALLDATALOAD PUSH1 0x3 SSTORE PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x7 SSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x9 SSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0xA SSTORE TIMESTAMP PUSH1 0xB SSTORE PUSH2 0x46D JUMPI DUP3 DUP1 RETURN JUMPDEST DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP6 SSTORE CODESIZE PUSH2 0x410 JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x3EF JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x3E7 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x3DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x507 CALLDATASIZE PUSH2 0xF80 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH1 0xFF DUP5 SLOAD AND PUSH2 0x729 JUMPI PUSH1 0x5 SLOAD DUP3 GT PUSH2 0x6D1 JUMPI PUSH3 0x15180 TIMESTAMP DIV PUSH2 0xE10 TIMESTAMP DIV SWAP1 DUP1 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0xC DUP6 MSTORE PUSH2 0x540 DUP2 DUP6 DUP10 KECCAK256 SLOAD PUSH2 0x111B JUMP JUMPDEST PUSH1 0x3 SLOAD LT PUSH2 0x67D JUMPI PUSH2 0x55C SWAP1 DUP4 DUP9 MSTORE PUSH1 0xD DUP7 MSTORE DUP5 DUP9 KECCAK256 SLOAD PUSH2 0x111B JUMP JUMPDEST DUP6 SLOAD LT PUSH2 0x628 JUMPI DUP6 MSTORE PUSH1 0xF DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x5DA JUMPI DUP5 MSTORE PUSH1 0xE DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x58D JUMPI DUP4 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x486F75726C79207472616E7366657220636F756E74206C696D69742065786365 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x19591959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST POP MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207472616E7366657220636F756E74206C696D6974206578636565 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x191959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST POP POP MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220776F756C642065786365656420686F75726C7920766F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1D5B59481B1A5B5A5D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220776F756C6420657863656564206461696C7920766F6C75 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1B59481B1A5B5A5D PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420657863656564732073696E676C652074 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C985B9CD9995C881B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4369726375697420627265616B65722069732061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xE10 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xD DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x843 PUSH2 0xF4F JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xD DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xE10 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8F0 PUSH2 0xF6A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH2 0x931 SWAP1 PUSH2 0x91E PUSH2 0x1027 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x10DB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI DUP3 DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP5 GT PUSH2 0x26E JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x2D5 JUMPI CALLDATASIZE PUSH1 0x24 DUP6 DUP6 ADD ADD GT PUSH2 0x2D5 JUMPI DUP4 PUSH2 0x9D4 SWAP5 PUSH1 0x24 PUSH1 0x20 SWAP4 PUSH2 0x9AE PUSH2 0x1193 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x9C3 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP7 ADD DUP9 PUSH2 0xFEF JUMP JUMPDEST DUP3 DUP8 MSTORE ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x14AC JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2D5 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9FC PUSH2 0xF6A JUMP JUMPDEST AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x11 DUP2 MSTORE DUP3 DUP5 KECCAK256 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0xB05 JUMPI PUSH1 0x9 SLOAD GT PUSH2 0xAEA JUMPI DUP2 DUP5 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 SSTORE JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x11 DUP2 MSTORE TIMESTAMP DUP4 DUP6 KECCAK256 SSTORE PUSH1 0x10 DUP2 MSTORE DUP3 DUP5 KECCAK256 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0xA49 JUMPI DUP4 DUP1 RETURN JUMPDEST DUP3 MLOAD DUP4 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xAD7 JUMPI PUSH32 0xCEF34426B92FD7C1A4DACFB9E7B9625A61226AC4A0E6750A048AD536F84FA87F SWAP6 SWAP7 POP SWAP1 PUSH2 0xABA SWAP2 DUP6 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x4661696C656420617474656D7074732065786365656465640000000000000000 DUP4 DUP3 ADD MSTORE PUSH2 0x14AC JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x10 DUP2 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP1 DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG1 DUP1 DUP3 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x10 DUP2 MSTORE DUP3 DUP5 KECCAK256 PUSH2 0xAFE DUP2 SLOAD PUSH2 0x1184 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xA28 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0xE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 PUSH32 0x4658F69373ABD2AE36994B6398BA682F149AE01805FEB8227244965D9F320909 SWAP2 PUSH2 0xBE0 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 SLOAD AND DUP5 SSTORE PUSH2 0xBFB PUSH2 0xBF6 PUSH1 0x1 SLOAD PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SSTORE DUP4 PUSH1 0x2 SSTORE MLOAD TIMESTAMP DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH2 0xC46 PUSH2 0xF4F JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xC63 JUMPI POP PUSH2 0x37C SWAP2 SWAP3 CALLDATALOAD PUSH2 0x1429 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCBC PUSH2 0xF6A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x26E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH2 0x37C SWAP2 CALLDATALOAD PUSH2 0xCEF PUSH1 0x1 PUSH2 0x358 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x13A2 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26E JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x26E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xDF9 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0xDF0 JUMP JUMPDEST DUP1 DUP4 CALLVALUE PUSH2 0xE9B JUMPI PUSH2 0xE1A CALLDATASIZE PUSH2 0xF80 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 TIMESTAMP DIV SWAP1 PUSH2 0xE10 TIMESTAMP DIV SWAP1 DUP3 DUP7 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 PUSH2 0xE3F DUP3 DUP3 SLOAD PUSH2 0x111B JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP7 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0xE57 DUP6 DUP8 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x111B JUMP JUMPDEST SWAP1 SSTORE DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP3 DUP5 KECCAK256 PUSH2 0xE6D DUP2 SLOAD PUSH2 0x1184 JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE DUP2 DUP4 KECCAK256 PUSH2 0xE83 DUP2 SLOAD PUSH2 0x1184 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 KECCAK256 SSTORE DUP1 RETURN JUMPDEST POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D5 JUMPI PUSH2 0xEBF PUSH1 0xB SLOAD PUSH1 0xA SLOAD SWAP1 PUSH2 0x111B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xECA JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH32 0xF1B43C2E52A9E846469BAAEBDB63ECFD00023CF4E2B651237F6068F2467D2093 SWAP2 PUSH1 0xFF NOT DUP5 SLOAD AND DUP5 SSTORE PUSH2 0xF04 PUSH2 0xBF6 PUSH1 0x1 SLOAD PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SSTORE DUP4 PUSH1 0x2 SSTORE TIMESTAMP PUSH1 0xB SSTORE PUSH3 0x15180 TIMESTAMP DIV DUP1 DUP6 MSTORE PUSH1 0xC DUP4 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE PUSH2 0xE10 TIMESTAMP DIV DUP6 MSTORE PUSH1 0xD DUP4 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE DUP5 MSTORE PUSH1 0xF DUP3 MSTORE DUP4 DUP2 DUP2 KECCAK256 SSTORE MLOAD TIMESTAMP DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF65 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF65 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xF65 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xF65 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xF65 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xFE5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xFCF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1011 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x1 SWAP2 PUSH1 0x1 SLOAD PUSH2 0x103D DUP2 PUSH2 0xFB5 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x10B7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1068 JUMPI JUMPDEST POP POP PUSH2 0x1066 SWAP3 POP SUB DUP4 PUSH2 0xFEF JUMP JUMPDEST JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x109F JUMPI POP PUSH2 0x1066 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1058 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1084 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x1066 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1058 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1107 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x10E6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1128 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1149 JUMPI POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x117A JUMPI POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE DUP4 ADD PUSH2 0x116D JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1128 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x11EF JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EF JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x12DB JUMPI DUP3 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x139C JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x139C JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x139C JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP3 MLOAD SWAP4 SWAP3 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x164A JUMPI PUSH2 0x14D9 DUP3 SLOAD PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15F7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1F DUP9 GT EQ PUSH2 0x1564 JUMPI POP SWAP4 SWAP5 PUSH32 0x11803DAFFB8BD292F79DC0D607F5A1C30184B28E74CA55F6352D0D874D210727 SWAP5 PUSH2 0x154E SWAP5 SWAP4 SWAP3 DUP3 PUSH2 0x1559 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x10DB JUMP JUMPDEST TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0x1523 JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 PUSH1 0x1F NOT DUP9 AND SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x15E0 JUMPI POP POP SWAP6 DUP4 SWAP3 PUSH2 0x154E SWAP6 SWAP5 SWAP3 DUP3 PUSH32 0x11803DAFFB8BD292F79DC0D607F5A1C30184B28E74CA55F6352D0D874D210727 SWAP9 SWAP10 LT PUSH2 0x15C7 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1536 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x15BB JUMP JUMPDEST DUP1 DUP7 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x157F JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP9 LT PUSH2 0x1640 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1635 JUMPI POP POP PUSH2 0x14E2 JUMP JUMPDEST DUP4 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0x1627 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x168D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP 0xB1 0xE 0x2D MSTORE PUSH23 0x12073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2 0xB7 STATICCALL 0xC 0xF6 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF186 PUSH6 0xEFFE1162FA9F 0x4B JUMPDEST GAS AND BALANCE LT 0xEF SLOAD 0xF7 PUSH21 0xAAEC0D11793C6FBB72EE2C4D64736F6C6343000816 STOP CALLER ","sourceMap":"461:9397:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;;;966:10:6;461:9397:33;;;;;;;;;;4516:23:0;4512:108;;461:9397:33;;;9466:32;461:9397;;;;;;;9554:38;461:9397;;;9603:42;461:9397;;;9656:40;461:9397;;;9707:38;461:9397;;;9756:42;461:9397;;;9809:38;461:9397;;;4512:108:0;461:9397:33;;;;4562:47:0;;;;;;966:10:6;4562:47:0;;;461:9397:33;;;;;4562:47:0;461:9397:33;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;;;;1581:53;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;;661:33;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:33;461:9397;;;;;;;;;;;;;;;;;;;;;;;841:29;461:9397;;;;;;;;;;;;;;;;;;;;5815:26:0;461:9397:33;;3283:4:0;461:9397:33;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;;4967:24:0;461:9397:33;3283:4:0;:::i;:::-;5815:26;:::i;:::-;;461:9397:33;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;:::i;:::-;3147:66:1;461:9397:33;;;;;;;;;4301:16:1;461:9397:33;;;;4724:16:1;;:34;;;;461:9397:33;;4788:16:1;:50;;;;461:9397:33;4853:13:1;:30;;;;461:9397:33;4849:91:1;;;-1:-1:-1;;461:9397:33;;;;;;3046:39;;461:9397;;4977:67:1;;461:9397:33;6891:76:1;;;:::i;:::-;;;:::i;:::-;2998:37:33;;;:::i;:::-;;3046:39;:::i;:::-;;461:9397;;3106:32;461:9397;;;;;;;3194:38;461:9397;;;3243:42;461:9397;;;3296:40;461:9397;;;3347:38;461:9397;;;3396:42;461:9397;;;3449:38;461:9397;3524:15;3508:31;461:9397;5064:101:1;;461:9397:33;;;5064:101:1;461:9397:33;;-1:-1:-1;;461:9397:33;;;;-1:-1:-1;461:9397:33;;5140:14:1;;461:9397:33;;5140:14:1;5064:101;;461:9397:33;;;4977:67:1;-1:-1:-1;;461:9397:33;;;;;4977:67:1;;;4849:91;461:9397:33;;-1:-1:-1;;;4906:23:1;;461:9397:33;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;;;-1:-1:-1;4724:34:1;;461:9397:33;;;;;;;;:::i;:::-;;;;;;;;;6835:90;;6998:17;461:9397;6989:26;;6985:114;;7158:6;7140:15;461:9397;7215:7;7140:15;461:9397;;;;;;;7284:11;461:9397;;7284:32;461:9397;;;;;7284:32;:::i;:::-;7319:14;461:9397;-1:-1:-1;7280:132:33;;7474:34;461:9397;;;;7474:12;461:9397;;;;;;7474:34;:::i;:::-;461:9397;;-1:-1:-1;7470:136:33;;461:9397;;7675:18;461:9397;;;;;;7709:18;461:9397;-1:-1:-1;7675:52:33;7671:130;;461:9397;;7871:19;461:9397;;;;;;7907:19;461:9397;-1:-1:-1;7871:55:33;7867:134;;461:9397;;;7867:134;461:9397;-1:-1:-1;;;7943:46:33;;;;;461:9397;;;;;;;;;;;-1:-1:-1;;;461:9397:33;;;;;;-1:-1:-1;7943:46:33;7671:130;-1:-1:-1;461:9397:33;-1:-1:-1;;;7744:45:33;;;;;461:9397;;;;;;;;;;;-1:-1:-1;;;461:9397:33;;;;;;-1:-1:-1;7744:45:33;7470:136;-1:-1:-1;;461:9397:33;-1:-1:-1;;;7543:51:33;;;;;461:9397;;;;;;;;;;;-1:-1:-1;;;461:9397:33;;;;;;-1:-1:-1;7543:51:33;7280:132;461:9397;;-1:-1:-1;;;7350:50:33;;;;;461:9397;;;;;;;;;;;;;-1:-1:-1;;;461:9397:33;;;;;;7350:50;6985:114;461:9397;-1:-1:-1;;;7032:55:33;;461:9397;7032:55;;;461:9397;;;;;;;;;;;-1:-1:-1;;;461:9397:33;;;;;;7032:55;6835:90;461:9397;-1:-1:-1;;;6878:35:33;;461:9397;6878:35;;;461:9397;;;;;;;;;;;;;6878:35;461:9397;;;;;;;;;;;;;;8367:15;461:9397;8367:15;8385:6;8367:15;461:9397;;;8409:11;461:9397;;;;;;;;;;;;;;;;;;;;;;;;8551:15;461:9397;8551:15;8569:7;8551:15;461:9397;;;8594:12;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:28;461:9397;;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;;;;1413:46;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;;;-1:-1:-1;;;;;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;;;;1466:47;461:9397;;;;;;;;;;;;;;;;;;;;;;;;8745:15;461:9397;8745:15;8763:7;8745:15;461:9397;;;8788:19;461:9397;;;;;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;-1:-1:-1;;;;;461:9397:33;;:::i;:::-;;;;1697:52;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1077:34;461:9397;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:4:0;4992:31:33;3283:4:0;461:9397:33;;3283:4:0;;;:::i;:::-;461:9397:33;;;;;;-1:-1:-1;;461:9397:33;;;;;:::i;:::-;;;;;;;;;;;;;4992:31;:::i;:::-;461:9397;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;461:9397:33;;:::i;:::-;;;;;;4350:17;461:9397;;;;;;4332:15;461:9397;4332:15;461:9397;;;;4380:19;461:9397;-1:-1:-1;4380:19:33;;461:9397;;;4416:14;461:9397;;4442:1;461:9397;;;;4328:185;461:9397;;;4350:17;461:9397;;4332:15;461:9397;;;;4602:14;461:9397;;;;;;4629:17;461:9397;-1:-1:-1;4602:44:33;4598:209;;461:9397;;;4598:209;461:9397;;;;;;;;;;;;;;4734:61;461:9397;;;;4663:51;461:9397;;;;;;;;;;;4663:51;:::i;:::-;461:9397;;;4602:14;461:9397;;;;;;;;;;;;;;;4734:61;4598:209;;;;461:9397;;;;-1:-1:-1;;;461:9397:33;;;;;;;;4328:185;461:9397;;;4476:14;461:9397;;;;;4476:25;461:9397;;4476:25;:::i;:::-;461:9397;;4328:185;;461:9397;-1:-1:-1;;;461:9397:33;;4350:17;461:9397;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;;;;1520:54;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;1306:32;461:9397;;;;;;;;;;;;;;;;;;;;;;;;1237:66:8;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;5298:42;3283:4:0;;;:::i;:::-;461:9397:33;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;5264:18;461:9397;;5324:15;461:9397;;5298:42;461:9397;;;;;;;;;;;;;;;;;;993:32;461:9397;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;966:10:6;;-1:-1:-1;;;;;461:9397:33;;6489:34:0;6485:102;;461:9397:33;6597:37:0;461:9397:33;;;6597:37:0;:::i;6485:102::-;461:9397:33;-1:-1:-1;;;6546:30:0;;461:9397:33;;6546:30:0;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;-1:-1:-1;;;;;461:9397:33;;:::i;:::-;;;;1641:49;461:9397;;;;;;;;;;;;;;;;;;;;;;;5398:25:0;461:9397:33;;3283:4:0;461:9397:33;;;:::i;3283:4:0:-;5398:25;:::i;461:9397:33:-;;;;;;;;;;;;;;;;1229:34;461:9397;;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;4967:24:0;461:9397:33;;;;;;;;;;;;;;;;;;;;;8944:15;461:9397;8944:15;8962:6;8944:15;461:9397;;;8986:18;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;1190:32;461:9397;;;;;;;;;;;;;;;;;;;;;;;920:29;461:9397;;;;;;;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3599:47:0;;;:87;;;;461:9397:33;;;;;;;;;3599:87:0;-1:-1:-1;;;1101:40:11;;-1:-1:-1;3599:87:0;;;461:9397:33;;;;;;;;;:::i;:::-;3803:15;;3821:6;3803:15;461:9397;3803:15;3878:7;3803:15;461:9397;;;;;3906:11;461:9397;;;;;3906:33;461:9397;;;3906:33;:::i;:::-;461:9397;;;;;3950:12;461:9397;;3950:35;461:9397;;;;;;3950:35;:::i;:::-;461:9397;;;;3996:19;461:9397;;;;;3996:34;461:9397;;3996:34;:::i;:::-;461:9397;;;;4041:18;461:9397;;;;;4041:32;461:9397;;4041:32;:::i;:::-;461:9397;;-1:-1:-1;;;;;461:9397:33;;;4151:14;461:9397;;;;;;;;;;;;;;;;;;;;;;;;5508:33;:13;461:9397;5524:17;461:9397;5508:33;;:::i;:::-;5489:15;:52;;5485:676;;461:9397;;;5485:676;461:9397;6114:35;461:9397;;;;;;;;;;;;;:::i;:::-;;;;;5639:18;461:9397;5489:15;5508:13;461:9397;5812:6;5489:15;461:9397;;;;5909:11;461:9397;;;;;;;5873:7;5489:15;461:9397;;;5951:12;461:9397;;;;;;;5995:19;461:9397;;;;;;;;;6046:18;461:9397;;;;;;;;5489:15;461:9397;;6114:35;461:9397;;;;;;-1:-1:-1;;;;;461:9397:33;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;461:9397:33;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;804:30:33;;461:9397;804:30;461:9397;;;;:::i;:::-;;;;;;;804:30;461:9397;;;804:30;;;;461:9397;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;804:30;-1:-1:-1;461:9397:33;-1:-1:-1;;;;;;;;;;;461:9397:33;-1:-1:-1;461:9397:33;;;;;;;-1:-1:-1;461:9397:33;;-1:-1:-1;;;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;461:9397:33;;;;;;;;;-1:-1:-1;461:9397:33;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;5603:21;461:9397;;5603:21;461:9397;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;461:9397:33;;;;;;;:::o;4196:103:0:-;966:10:6;-1:-1:-1;461:9397:33;;;;;;;;;;661:33;;461:9397;;4516:23:0;4512:108;;4196:103;:::o;4512:108::-;461:9397:33;;;;4562:47:0;;;;;;966:10:6;4562:47:0;;;461:9397:33;;;;;4562:47:0;4196:103;461:9397:33;-1:-1:-1;461:9397:33;-1:-1:-1;;;;;;;;;;;461:9397:33;;;-1:-1:-1;461:9397:33;966:10:6;-1:-1:-1;461:9397:33;;;;;-1:-1:-1;461:9397:33;;;4516:23:0;4512:108;;4196:103;:::o;7318:387::-;-1:-1:-1;;;;;461:9397:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2968:71:0;461:9397:33;;;;;;;;;;;;;;;;;;;;7557:4:0;461:9397:33;;;;;;;;966:10:6;7580:40:0;;;;;7557:4;7634:11;:::o;7480:219::-;7676:12;;;:::o;7318:387::-;-1:-1:-1;;;;;461:9397:33;-1:-1:-1;461:9397:33;;;;;;;;;;-1:-1:-1;;461:9397:33;661:33;;-1:-1:-1;;;;;;;;;;;2968:71:0;461:9397:33;;;;;;;;;;;;;;;;;;;;7557:4:0;461:9397:33;;;;;;;;7580:40:0;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7480:219::-;7676:12;;;;:::o;7318:387::-;;-1:-1:-1;461:9397:33;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;7484:23:0;7480:219;461:9397:33;;;;;;;;;;;;;;;;;;;7557:4:0;461:9397:33;;;;;;;;7580:40:0;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7942:388::-;;-1:-1:-1;461:9397:33;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;8105:219:0;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;;8205:40:0;966:10:6;8205:40:0;;;461:9397:33;8259:11:0;:::o;6239:255:33:-;6314:29;461:9397;;-1:-1:-1;;461:9397:33;6339:4;461:9397;;;;;;;;6239:255;;461:9397;;;;;;;;;:::i;:::-;;;;;;6239:255;-1:-1:-1;461:9397:33;;;;;;;;;;-1:-1:-1;461:9397:33;;6438:48;;461:9397;;;;;;;;-1:-1:-1;;;461:9397:33;;;;;;;;;;;;;;6407:15;6390:32;461:9397;;;;;;;;;;;;;;:::i;:::-;6407:15;461:9397;;;;6438:48;;;6239:255::o;461:9397::-;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;-1:-1:-1;;461:9397:33;;;;;;;;;;;;;;;;;;;6438:48;461:9397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;461:9397:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;461:9397:33;;;;;-1:-1:-1;;;461:9397:33;;;;;;;;7082:141:1;461:9397:33;3147:66:1;461:9397:33;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;461:9397:33;;-1:-1:-1;;;7189:17:1;;;;"},"methodIdentifiers":{"CIRCUIT_BREAKER_ROLE()":"e54e55ae","DEFAULT_ADMIN_ROLE()":"a217fddf","activateCircuitBreaker(string)":"6b5a0d8c","activationReason()":"44baa6c2","activationTime()":"da4493f6","autoReset()":"0006d1c5","autoResetInterval()":"5feb1f71","checkTransfer(address,address,uint256)":"cc1dd94f","dailyTransferCount(uint256)":"e6b64fdb","dailyVolume(uint256)":"943ca3b9","deactivateCircuitBreaker()":"42200b9e","failedAttemptWindow()":"258061aa","failedAttempts(address)":"32627ec7","getActivationReason()":"789b6315","getCurrentDailyTransferCount()":"13935857","getCurrentDailyVolume()":"ae6e0145","getCurrentHourlyTransferCount()":"7c5cf169","getCurrentHourlyVolume()":"a7e02d75","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","hourlyTransferCount(uint256)":"63236f49","hourlyVolume(uint256)":"8fbf5929","initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":"d114e6fc","isActive()":"22f3e2d4","isCircuitBreakerActive()":"32941ecb","lastFailedAttempt(address)":"7b969e1d","lastResetTime()":"a2177124","maxDailyVolume()":"07df2f18","maxFailedAttempts()":"12da5d1e","maxHourlyVolume()":"df18315b","maxSingleTransfer()":"36b089d8","maxTransfersPerDay()":"da4a64bc","maxTransfersPerHour()":"6c58ab83","paused()":"5c975abb","recordFailedAttempt(address)":"668fb1be","recordTransfer(address,address,uint256)":"01e3a903","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","updateLimits(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":"fd270b8d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CircuitBreakerActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedAttemptsExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VelocityLimitExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VolumeLimitExceeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AutoResetTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CircuitBreakerActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CircuitBreakerDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"attempts\",\"type\":\"uint256\"}],\"name\":\"FailedAttemptsExceededEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"period\",\"type\":\"string\"}],\"name\":\"VelocityLimitExceededEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"period\",\"type\":\"string\"}],\"name\":\"VolumeLimitExceededEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CIRCUIT_BREAKER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"activateCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationReason\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoReset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoResetInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkTransfer\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyTransferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivateCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failedAttemptWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"failedAttempts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivationReason\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDailyTransferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDailyVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHourlyTransferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHourlyVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hourlyTransferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hourlyVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxDailyVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxHourlyVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSingleTransfer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTransfersPerHour\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTransfersPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxFailedAttempts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_failedAttemptWindow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_autoResetInterval\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCircuitBreakerActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastFailedAttempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastResetTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDailyVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFailedAttempts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxHourlyVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSingleTransfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransfersPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransfersPerHour\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"recordFailedAttempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recordTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDailyVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxHourlyVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSingleTransfer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTransfersPerHour\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTransfersPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxFailedAttempts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_failedAttemptWindow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_autoResetInterval\",\"type\":\"uint256\"}],\"name\":\"updateLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Advanced circuit breaker implementation with anomaly detection\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"checkTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer\"}},\"getActivationReason()\":{\"returns\":{\"_0\":\"The reason the circuit breaker was activated\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isActive()\":{\"returns\":{\"_0\":\"Whether the circuit breaker is currently active\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"CircuitBreaker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateCircuitBreaker(string)\":{\"notice\":\"Activate circuit breaker\"},\"autoReset()\":{\"notice\":\"Auto-reset circuit breaker if interval has passed\"},\"checkTransfer(address,address,uint256)\":{\"notice\":\"Check if a transfer should be allowed based on circuit breaker rules\"},\"deactivateCircuitBreaker()\":{\"notice\":\"Deactivate circuit breaker\"},\"getActivationReason()\":{\"notice\":\"Get the reason for circuit breaker activation\"},\"isActive()\":{\"notice\":\"Get the current circuit breaker state\"},\"recordFailedAttempt(address)\":{\"notice\":\"Record a failed transfer attempt\"},\"recordTransfer(address,address,uint256)\":{\"notice\":\"Record a successful transfer\"}},\"notice\":\"This contract monitors transfer patterns and can trigger circuit breakers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CircuitBreaker.sol\":\"CircuitBreaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/CircuitBreaker.sol\":{\"keccak256\":\"0x31332a6c8a31d81fd7093dc85ac3378d83db3bc6025ddcfff18ee91a7283a3b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2994ab120b8f77d466086685f4e75e3efaf3fd7e9c40cde561fd9e307ca57387\",\"dweb:/ipfs/QmZvgJykpimiPUL5UYY2Vq3gjwqJMuzA9w3wQQF4vi4sa7\"]},\"contracts/interfaces/ICircuitBreaker.sol\":{\"keccak256\":\"0x076696fa218ef87fcfc4b27066ce5df11907154b4818f0127d8ea57021c3c5d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82eb895fd30e91c642f2e5830a8563a12c83632e292f764a3e2a71bef950c636\",\"dweb:/ipfs/QmdMSDNQ3Cb8xacHEaTXUPMimFs38W8NCKP8dFtTC7s5sX\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":9055,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"isCircuitBreakerActive","offset":0,"slot":"0","type":"t_bool"},{"astId":9057,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"activationReason","offset":0,"slot":"1","type":"t_string_storage"},{"astId":9059,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"activationTime","offset":0,"slot":"2","type":"t_uint256"},{"astId":9061,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"maxDailyVolume","offset":0,"slot":"3","type":"t_uint256"},{"astId":9063,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"maxHourlyVolume","offset":0,"slot":"4","type":"t_uint256"},{"astId":9065,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"maxSingleTransfer","offset":0,"slot":"5","type":"t_uint256"},{"astId":9067,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"maxTransfersPerHour","offset":0,"slot":"6","type":"t_uint256"},{"astId":9069,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"maxTransfersPerDay","offset":0,"slot":"7","type":"t_uint256"},{"astId":9071,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"maxFailedAttempts","offset":0,"slot":"8","type":"t_uint256"},{"astId":9073,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"failedAttemptWindow","offset":0,"slot":"9","type":"t_uint256"},{"astId":9075,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"autoResetInterval","offset":0,"slot":"10","type":"t_uint256"},{"astId":9077,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"lastResetTime","offset":0,"slot":"11","type":"t_uint256"},{"astId":9081,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"dailyVolume","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_uint256)"},{"astId":9085,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"hourlyVolume","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_uint256)"},{"astId":9089,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"hourlyTransferCount","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_uint256)"},{"astId":9093,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"dailyTransferCount","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_uint256)"},{"astId":9097,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"failedAttempts","offset":0,"slot":"16","type":"t_mapping(t_address,t_uint256)"},{"astId":9101,"contract":"contracts/CircuitBreaker.sol:CircuitBreaker","label":"lastFailedAttempt","offset":0,"slot":"17","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/NEBA.sol":{"NEBA":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"BlockedAddress","type":"error"},{"inputs":[],"name":"CircuitBreakerActive","type":"error"},{"inputs":[],"name":"CommitAlreadyRevealed","type":"error"},{"inputs":[],"name":"CommitExpired","type":"error"},{"inputs":[],"name":"CommitNotFound","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidCommit","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"ParamCommitExpired","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SnapshotNotFound","type":"error"},{"inputs":[],"name":"TradingNotEnabled","type":"error"},{"inputs":[],"name":"TransferRestrictionsActive","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"inputs":[],"name":"UnauthorizedUpgrade","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"blocked","type":"bool"}],"name":"BlocklistUpdated","type":"event"},{"anonymous":false,"inputs":[],"name":"CircuitBreakerReset","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"triggerer","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"CircuitBreakerTriggered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldBreaker","type":"address"},{"indexed":true,"internalType":"address","name":"newBreaker","type":"address"}],"name":"CircuitBreakerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"commit","type":"bytes32"},{"indexed":true,"internalType":"address","name":"committer","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CommitCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"commit","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CommitRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pauser","type":"address"},{"indexed":true,"internalType":"string","name":"pauseType","type":"string"}],"name":"ContractPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"unpauser","type":"address"}],"name":"ContractUnpaused","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"snapshotId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"SnapshotCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TradingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldHook","type":"address"},{"indexed":true,"internalType":"address","name":"newHook","type":"address"}],"name":"TransferHookUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"TransferRestrictionsToggled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldTreasury","type":"address"},{"indexed":true,"internalType":"address","name":"newTreasury","type":"address"}],"name":"TreasuryUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"WhitelistUpdated","type":"event"},{"inputs":[],"name":"ADMIN_PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BLOCKLIST_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BOT_PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CIRCUIT_BREAKER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_GUARDIAN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FINANCE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERNANCE_UNPAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PARAM_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SNAPSHOT_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_SYMBOL","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WHITELIST_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"autoResetCircuitBreaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"blocklist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"circuitBreaker","outputs":[{"internalType":"contract ICircuitBreaker","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"circuitBreakerResetInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"circuitBreakerTriggered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"commitTimeout","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"commits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"commit","type":"bytes32"}],"name":"createCommit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSnapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentSnapshotId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enableTrading","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getLatestSnapshotId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"getSnapshot","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct NEBA.SnapshotData","name":"snapshot","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"botAddress","type":"address"}],"name":"grantBotPauserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"guardianAddress","type":"address"}],"name":"grantEmergencyGuardianRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"governanceAddress","type":"address"}],"name":"grantGovernanceUnpauserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_admin","type":"address"},{"internalType":"uint256","name":"_commitTimeout","type":"uint256"},{"internalType":"uint256","name":"_circuitBreakerResetInterval","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"isTransferAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastCircuitBreakerReset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resetCircuitBreaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"commit","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"revealCommit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"botAddress","type":"address"}],"name":"revokeBotPauserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"snapshotExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"snapshots","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleTransferRestrictions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferHook","outputs":[{"internalType":"contract ITransferHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transferRestrictionsEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"name":"triggerCircuitBreaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"blocked","type":"bool"}],"name":"updateBlocklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_circuitBreaker","type":"address"}],"name":"updateCircuitBreaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_transferHook","type":"address"}],"name":"updateTransferHook","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"updateTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"updateWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a08060405234620000d157306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c16620000c257506001600160401b036002600160401b0319828216016200007c575b6040516147a19081620000d782396080518181816122ef01526124560152f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a13880806200005c565b63f92ee8a960e01b8152600490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a7146131c85750806306fdde03146130fa578063095ea7b3146130c85780630b06806a1461309f5780630d392cd914612ff15780631504d8f014612eb05780631592625714612e9257806316efd94114612e6557806318160ddd14612e285780631872223f14612ded5780631882140014612dd15780631fc4b85714612d7657806323b872dd14612a53578063248a9ca314612a195780632a905318146129e95780632f2ff15d1461299e5780632fbf02d414612980578063313ce567146122c057806332cb6b0c14612959578063349b59541461291e5780633644e515146128fb57806336568abe146128b35780633db11d6a146128875780633f4ba83a1461273357806342275c591461270a57806345cb1258146126e757806347885781146126bd5780634ada218b146126975780634f1ef286146123db57806351108cac146123b8578063512fede11461235957806352d1902d146122dc5780635b7f415c146122c05780635c975abb146122905780635d75b8891461226657806361b242c5146121b057806361d027b3146121895780636d1fa35b146120925780637028e2cd1461205757806370a0823114611fff5780637295ed9314611fc457806376f10ad014611f095780637ecebe0014611eb15780637f51bb1f14611e4457806382bc7bc914611e1b5780638456cb5914611b7957806384b0196e14611a1b5780638a5d4869146117e25780638a8c523c1461197557806391d148541461191c57806395d89b411461183b5780639632874b14611800578063970875ce146117e257806397e2b9af146117ab5780639b19251a1461176c578063a1bdba4414611742578063a217fddf14611726578063a9059cbb1461146d578063ad3cb1cc14611423578063b45a1eb514611341578063b60095a514611323578063b941d774146112e9578063c1d6cb4f146112af578063d505accf1461111c578063d547741f146110d1578063d6565a2d1461107f578063dc62caf514611044578063dd62ed3e14610ffa578063de5f8d9314610fac578063df8bcac714610f6e578063e1eb739914610eee578063e4d1155e14610e83578063e54e55ae14610e48578063e5c7160b14610e09578063ea4b7dcd14610de0578063eb990c59146103ad5763f72c0d8b1461037057600080fd5b346103aa57806003193601126103aa5760206040517f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38152f35b80fd5b50346103aa5760803660031901126103aa576103c7613265565b6103cf613280565b60008051602061470c83398151915254906001600160401b03821680159081610dd0575b6001149081610dc6575b159081610dbd575b50610dab5760016001600160401b031983161760008051602061470c8339815191525560ff8260401c1615610d7e575b6001600160a01b038316158015610d6d575b610d5b5761045361334a565b61045b613370565b9061046461442a565b61046c61442a565b8051906001600160401b038211610b105781906104976000805160206145ac833981519152546133ca565b601f8111610cdc575b50602090601f8311600114610c4c578892610c41575b50508160011b916000199060031b1c1916176000805160206145ac833981519152555b8051906001600160401b0382116109e257819061050460008051602061460c833981519152546133ca565b601f8111610bbf575b50602090601f8311600114610b2f578792610b24575b50508160011b916000199060031b1c19161760008051602061460c833981519152555b61054e61442a565b61055661442a565b61055e61334a565b61056661442a565b60405190610573826132f3565b60018252603160f81b602083015261058961442a565b8051906001600160401b038211610b105781906105b46000805160206145ec833981519152546133ca565b601f8111610a91575b50602090601f8311600114610a015788926109f6575b50508160011b916000199060031b1c1916176000805160206145ec833981519152555b8051906001600160401b0382116109e25761061f60008051602061462c833981519152546133ca565b601f811161096a575b50602090601f83116001146108db576107529392918791836108d0575b50508160011b916000199060031b1c19161760008051602061462c833981519152555b847fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10055847fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101556106b661442a565b6106be61442a565b6106c661442a565b60016000805160206146ec8339815191525584546001600160a01b0319166001600160a01b038516178555604435600655606435600b55610706816139a2565b5061071081613a30565b5061071a81613ada565b5061072481613b72565b5061072e81613c1c565b5061073881613cc6565b5061074281613d70565b5061074c81613e1a565b50613ec4565b5082546001600160a01b03169081156108b75761076d613767565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace029182546b033b2e3c9fd0803ce8000000908181018091116108a157602087927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260ff97558484527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00825260408420818154019055604051908152a3604051926001600160a01b0316847f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a8180a360401c1615610849575080f35b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff00000000000000001960008051602061470c833981519152541660008051602061470c8339815191525560018152a180f35b634e487b7160e01b600052601160045260246000fd5b60405163ec442f0560e01b815260048101859052602490fd5b015190503880610645565b60008051602061462c833981519152875260008051602061474c8339815191529190601f198416885b818110610952575091600193918561075297969410610939575b505050811b0160008051602061462c83398151915255610668565b015160001960f88460031b161c1916905538808061091e565b92936020600181928786015181550195019301610904565b60008051602061462c8339815191528752601f830160051c60008051602061474c8339815191520190602084106109cc575b601f0160051c60008051602061474c83398151915201905b8181106109c15750610628565b8781556001016109b4565b60008051602061474c833981519152915061099c565b634e487b7160e01b86526041600452602486fd5b0151905038806105d3565b92506000805160206145ec833981519152885260008051602061466c8339815191529088935b601f1984168510610a76576001945083601f19811610610a5d575b505050811b016000805160206145ec833981519152556105f6565b015160001960f88460031b161c19169055388080610a42565b81810151835560209485019460019093019290910190610a27565b9091506000805160206145ec8339815191528852601f830160051c60008051602061466c8339815191520160208410610afb575b908392915b601f820160051c60008051602061466c833981519152018110610aed57506105bd565b898155849350600101610aca565b5060008051602061466c833981519152610ac5565b634e487b7160e01b87526041600452602487fd5b015190503880610523565b925060008051602061460c83398151915287526000805160206146cc8339815191529087935b601f1984168510610ba4576001945083601f19811610610b8b575b505050811b0160008051602061460c83398151915255610546565b015160001960f88460031b161c19169055388080610b70565b81810151835560209485019460019093019290910190610b55565b90915060008051602061460c8339815191528752601f830160051c6000805160206146cc833981519152019060208410610c2b575b90601f8493920160051c6000805160206146cc83398151915201905b818110610c1d575061050d565b888155849350600101610c10565b6000805160206146cc8339815191529150610bf4565b0151905038806104b6565b92506000805160206145ac833981519152885260008051602061458c8339815191529088935b601f1984168510610cc1576001945083601f19811610610ca8575b505050811b016000805160206145ac833981519152556104d9565b015160001960f88460031b161c19169055388080610c8d565b81810151835560209485019460019093019290910190610c72565b9091506000805160206145ac8339815191528852601f830160051c60008051602061458c8339815191520160208410610d46575b908392915b601f820160051c60008051602061458c833981519152018110610d3857506104a0565b898155849350600101610d15565b5060008051602061458c833981519152610d10565b60405163e6c4247b60e01b8152600490fd5b506001600160a01b03811615610447565b68ffffffffffffffffff198216680100000000000000011760008051602061470c83398151915255610435565b60405163f92ee8a960e01b8152600490fd5b90501538610405565b303b1591506103fd565b604084901c60ff161591506103f3565b50346103aa57806003193601126103aa57602060405160008051602061464c8339815191528152f35b50346103aa5760203660031901126103aa5760209060ff906040906001600160a01b03610e34613265565b168152600184522054166040519015158152f35b50346103aa57806003193601126103aa5760206040517f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654928152f35b50346103aa5760203660031901126103aa57610e9d613265565b610ea561369e565b600480546001600160a01b039283166001600160a01b0319821681179092559091167fc370610a8c5f2daecdb3a2566e9a30f7969dc29704bf228fcc9a1a64ccd671388380a380f35b50346103aa5760203660031901126103aa57610f08613265565b610f106136d8565b6003805462010000600160b01b03198116601084811b62010000600160b01b0316919091179092556001600160a01b0392831692911c167fad6ede2bab15d4cc29f9aa4e11f38e7bffe6fe0296e8928492a62d29a8ab11d68380a380f35b50346103aa5760203660031901126103aa57610f88613265565b610f9061369e565b6001600160a01b03811615610d5b57610fa8906138f8565b5080f35b50346103aa57806003193601126103aa57610fc56136d8565b60ff196009541660095542600a557f749ce304ab81145be90b787a7777d030c801b4cfd19e6b30df21973a54ec004c8180a180f35b50346103aa5760403660031901126103aa57611014613265565b61102561101f613280565b91613391565b9060018060a01b03166000526020526020604060002054604051908152f35b50346103aa57806003193601126103aa5760206040517fe9dc316fa34ae880f78d85d5ce397feb0c9fbe2fc8ebf721a7d1646cabaf7f8c8152f35b50346103aa5760203660031901126103aa576040608091600435815260076020522080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b50346103aa5760403660031901126103aa57610fa86004356110f1613280565b9080845260008051602061468c8339815191526020526111176001604086200154613734565b61408b565b50346103aa5760e03660031901126103aa57611136613265565b9061113f613280565b60443590606435936084359460ff861686036112ab578042116112935760018060a01b0390818316968787527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260408720908154916001830190556040519260208401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a6040860152858816606086015288608086015260a085015260c084015260c0835260e08301918383106001600160401b0384111761127d576112489361123f936040525190206112186142a0565b906040519161190160f01b83526002830152602282015260c43591604260a4359220614315565b909291926143a5565b1685810361125f575061125c93945061413a565b80f35b60449086604051916325c0072360e11b835260048301526024820152fd5b634e487b7160e01b600052604160045260246000fd5b6024906040519063313c898160e11b82526004820152fd5b8480fd5b50346103aa5760203660031901126103aa576112c9613265565b6112d161369e565b6001600160a01b03811615610d5b57610fa890613860565b50346103aa5760203660031901126103aa57611303613265565b61130b61369e565b6001600160a01b03811615610d5b57610fa8906137c2565b50346103aa57806003193601126103aa576020600654604051908152f35b50346103aa5761135036613296565b3360009081527f784cd7277279da66f514c343def5ae4d754633326a69df9e3246cf541f59dae660205260409020549091907f4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d9171619060ff161561140557506001600160a01b03168083526001602090815260408420805460ff191660ff8515151617905590917f2df5e71bacf8a1a1d232ad715b36ae4617b1f75e7c6283373a54c96556cae75491905b6040519015158152a280f35b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b50346103aa57806003193601126103aa57611469604051611443816132f3565b60058152640352e302e360dc1b6020820152604051918291602083526020830190613240565b0390f35b50346103aa5760403660031901126103aa57611487613265565b602435611492613767565b338352600160205260ff80604085205416611714576001600160a01b0383811680865260016020526040862054919291821661171457600354908282166116ae575b5081600954166116995760081c16158061168c575b61167a576114f5613792565b838160035460101c168061161f575b508160045416806115ba575b505061151d828433614198565b600454169081611545575b60016000805160206146ec83398151915255602060405160018152f35b8184923b156115b657604051637a48316560e11b81523360048201526001600160a01b0394909416602485015260448401919091528290606490829084905af180156115ab57611597575b8080611528565b6115a182916132e0565b6103aa5780611590565b6040513d84823e3d90fd5b8280fd5b803b1561161b57604051631ffb811f60e01b81523360048201526001600160a01b0386166024820152604481018590529082908290606490829084905af180156115ab57156115105761160c906132e0565b611617578338611510565b8380fd5b5080fd5b803b1561161b5760405163cc1dd94f60e01b81523360048201526001600160a01b038616602482015260448101859052908290829060649082905afa80156115ab57156115045761166f906132e0565b611617578338611504565b6040516312f1f92360e01b8152600490fd5b50808454163314156114e9565b604051600162fc891960e01b03198152600490fd5b83875416803314159081611709575b50156114d457338752600260205282604088205416159081156116f8575b506116e657386114d4565b604051630b094f2760e31b8152600490fd5b8752506040862054821615386116db565b9050811415386116bd565b604051635e01436760e11b8152600490fd5b50346103aa57806003193601126103aa57602090604051908152f35b50346103aa57806003193601126103aa57611762600a54600b5490613567565b421015610fc55780f35b50346103aa5760203660031901126103aa5760209060ff906040906001600160a01b03611797613265565b168152600284522054166040519015158152f35b50346103aa5760403660031901126103aa5760206117d86117ca613265565b6117d2613280565b90613574565b6040519015158152f35b50346103aa57806003193601126103aa576020600854604051908152f35b50346103aa57806003193601126103aa5760206040517f14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b8152f35b50346103aa57806003193601126103aa5760405160008051602061460c833981519152805482600061186c836133ca565b92838352602094600191866001821691826000146118fa5750506001146118b0575b505061189c9250038361330e565b611469604051928284938452830190613240565b8592506000526000805160206146cc833981519152906000915b8583106118e257505061189c9350820101858061188e565b805483890185015287945086939092019181016118ca565b925093505061189c94915060ff191682840152151560051b820101858061188e565b50346103aa5760403660031901126103aa576040611938613280565b91600435815260008051602061468c833981519152602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346103aa57806003193601126103aa5761198e61369e565b60035460ff8160081c166119d6576101009061ff001916176003557fb3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e9236020604051428152a180f35b60405162461bcd60e51b815260206004820152601760248201527f54726164696e6720616c726561647920656e61626c65640000000000000000006044820152606490fd5b50346103aa57806003193601126103aa577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580611b50575b15611b1357611a62613404565b90611a6b6134ca565b906040519060209060208301938385106001600160401b0386111761127d579284926020611ac98896611abb98604052858552604051988998600f60f81b8a5260e0858b015260e08a0190613240565b9088820360408a0152613240565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110611afc57505050500390f35b835185528695509381019392810192600101611aed565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415611a55565b50346103aa57806003193601126103aa57611b92613767565b60008051602061472c8339815191529081815260008051602061468c8339815191529160208381526040832033600052815260ff80604060002054168015611def575b8015611dc3575b15611d7e57611ca49394604051611bf2816132f3565b60078152662aa725a727aba760c91b84820152938652808352604086203360005283528160406000205416600014611cd15750509050604051611c34816132f3565b600581526420a226a4a760d91b82820152905b611c4f613767565b6000805160206146ac833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25881604051338152a16040519282848094519384920161321d565b8101039020337fa45b854309f0bbcd0b5fe966bcc16c83a563411377ca9b86644a9aff98723a138380a380f35b6000805160206145cc8339815191528652808352604086203360005283528160406000205416600014611d235750509050604051611d0e816132f3565b60038152621093d560ea1b8282015290611c47565b60008051602061464c83398151915286528252604085203360005282526040600020541615611c47579050604051611d5a816132f3565b601281527122a6a2a923a2a721acafa3aaa0a92224a0a760711b8282015290611c47565b60405162461bcd60e51b815260048101839052601c60248201527f43616c6c6572206d75737420686176652070617573657220726f6c65000000006044820152606490fd5b5060008051602061464c8339815191528452848252604084203360005282528060406000205416611bdc565b506000805160206145cc8339815191528452848252604084203360005282528060406000205416611bd5565b50346103aa57806003193601126103aa576004546040516001600160a01b039091168152602090f35b50346103aa5760203660031901126103aa57611e5e613265565b611e6661369e565b6001600160a01b03908116908115610d5b5782546001600160a01b0319811683178455167f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a8380a380f35b50346103aa5760203660031901126103aa576020906040906001600160a01b03611ed9613265565b1681527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0083522054604051908152f35b50346103aa5760208060031936011261161b57600435826060604051611f2e816132c5565b8281528285820152826040820152015280835260078252604083205415611fb2578260409160809452600783522060405190611f69826132c5565b8054928383526001820154818401908152606060ff6003600286015495604088019687520154169401931515845260405194855251908401525160408301525115156060820152f35b604051632402054b60e11b8152600490fd5b50346103aa57806003193601126103aa5760206040517f2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a8688152f35b50346103aa5760203660031901126103aa576020906040906001600160a01b03612027613265565b1681527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0083522054604051908152f35b50346103aa57806003193601126103aa5760206040517f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f8152f35b50346103aa5760403660031901126103aa576004356024356120b261369e565b81835260056020526040832054156121775781835260056020526120dd604084205460065490613567565b4211612165578160405160208101908382523360601b60408201524260548201526054815261210b816132c5565b519020036121535760407f81d0016ae442431196752190c857dddddebf8d309ed0b095312600407b3b3f4391838552600560205284828120558151908152426020820152a280f35b60405163b7b3378760e01b8152600490fd5b604051631e3cccf560e31b8152600490fd5b60405163345512df60e21b8152600490fd5b50346103aa57806003193601126103aa57546040516001600160a01b039091168152602090f35b50346103aa5760203660031901126103aa576001600160401b036004358181116115b657366023820112156115b65780600401359182116115b65736602483830101116115b6577ff0ca201a259f21761e7392673b3e9269933e13069f2081af411cb4079825f842906122216136d8565b600160ff19600954161760095542600a55826024604051926020845282602085015201604083013783604084830101526040813394601f80199101168101030190a280f35b50346103aa5760203660031901126103aa57610fa8612283613265565b61228b61369e565b613fe3565b50346103aa57806003193601126103aa57602060ff6000805160206146ac83398151915254166040519015158152f35b50346103aa57806003193601126103aa57602060405160128152f35b50346103aa57806003193601126103aa577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036123475760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b50346103aa57806003193601126103aa5761237261369e565b7fa120777524474df4e22abe93a0b3dccb74b3093cdbb842f4f6e32d2bf0ce63bc602060035460ff80821615168060ff198316176003558460405192161715158152a180f35b50346103aa57806003193601126103aa57602060ff600954166040519015158152f35b5060403660031901126103aa576123f0613265565b60249182356001600160401b03811161161b573660238201121561161b57806004013561241c8161332f565b9361242a604051958661330e565b818552602091828601933688838301011161269357818692898693018737870101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115612665575b50612347577f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38060005260008051602061468c8339815191528452604060002033600052845260ff604060002054161561264857508116946040516352d1902d60e01b815283816004818a5afa869181612615575b5061251457604051634c9c8ce360e01b8152600481018890528890fd5b8690887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036126005750843b156125ea575080546001600160a01b031916821790556040518692917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28151156125cc5750610fa89482915190845af4903d156125c3573d6125a78161332f565b906125b5604051928361330e565b81528581943d92013e614508565b60609250614508565b945050505050346125db575080f35b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101849052fd5b60405190632a87526960e21b82526004820152fd5b9091508481813d8311612641575b61262d818361330e565b8101031261263d575190386124f7565b8680fd5b503d612623565b876044916040519163e2517d3f60e01b8352336004840152820152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141538612482565b8580fd5b50346103aa57806003193601126103aa57602060ff60035460081c166040519015158152f35b50346103aa5760203660031901126103aa5760406020916004358152600583522054604051908152f35b50346103aa57806003193601126103aa57602060ff600354166040519015158152f35b50346103aa57806003193601126103aa57602060405160008051602061472c8339815191528152f35b50346103aa57806003193601126103aa5761274c61410e565b60008051602061472c833981519152815260008051602061468c8339815191526020908082526040832033600052825260ff60406000205416908115612847575b5015612803577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906127bd61410e565b6000805160206146ac833981519152805460ff19169055604051338152a1337f5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d117668280a280f35b6064906040519062461bcd60e51b82526004820152601e60248201527f43616c6c6572206d757374206861766520756e70617573657220726f6c6500006044820152fd5b90507f14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b835281526040822033600052815260ff604060002054163861278d565b50346103aa5760203660031901126103aa57604060209160043581526007835220541515604051908152f35b50346103aa5760403660031901126103aa576128cd613280565b336001600160a01b038216036128e957610fa89060043561408b565b60405163334bd91960e11b8152600490fd5b50346103aa57806003193601126103aa5760206129166142a0565b604051908152f35b50346103aa57806003193601126103aa5760206040517f940d6b1946ff1d2b5a9f1909219c3c81a370804b5ba0f91ec0828c99a2e6a6818152f35b50346103aa57806003193601126103aa5760206040516b033b2e3c9fd0803ce80000008152f35b50346103aa57806003193601126103aa576020600b54604051908152f35b50346103aa5760403660031901126103aa57610fa86004356129be613280565b9080845260008051602061468c8339815191526020526129e46001604086200154613734565b613f6e565b50346103aa57806003193601126103aa57611469612a05613370565b604051918291602083526020830190613240565b50346103aa5760203660031901126103aa5760016040602092600435815260008051602061468c8339815191528452200154604051908152f35b50346103aa5760603660031901126103aa57612a6d613265565b90612a76613280565b9160443590612a83613767565b60018060a01b0393848216948585526020956001875260ff806040882054166117145782841680885260018952816040892054166117145760035490828216612d23575b5081600954166116995760081c161580612d16575b61167a57612ae8613792565b8160035460101c1680612cba575b50816004541680612c47575b50612b0c84613391565b336000528752604060002054906000198210612bbe575b5050612b30848385614198565b600454169182612b57575b8560016000805160206146ec8339815191525560405160018152f35b823b156112ab57604051637a48316560e11b81526001600160a01b03918216600482015291166024820152604481019290925282908290606490829084905af180156115ab57612baa575b808080612b3b565b612bb482916132e0565b6103aa5780612ba2565b858210612c215715612c08573315612bef578490612bdb85613391565b336000528852036040600020553880612b23565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810183905260448101879052606490fd5b803b1561263d57604051631ffb811f60e01b81526001600160a01b03868116600483015285166024820152604481018790529087908290606490829084905af18015612caf57908791612c9b575b50612b02565b612ca4906132e0565b612693578538612c95565b6040513d89823e3d90fd5b803b1561263d5760405163cc1dd94f60e01b81526001600160a01b0386811660048301528516602482015260448101879052908790829060649082905afa8015612caf5715612af657612d0f909691966132e0565b9438612af6565b5081865416331415612adc565b84895416808514159081612d6b575b5015612ac75783895260028a528260408a20541615908115612d5a575b506116e65738612ac7565b895250604088205482161538612d4f565b905081141538612d32565b50346103aa5760203660031901126103aa57600435612d9361369e565b8082526005602052426040832055604051904282527f93d98c19d9f85a53622c68b13046669ab48048057324f5300a2ce8692bb7719160203393a380f35b50346103aa57806003193601126103aa57611469612a0561334a565b50346103aa57806003193601126103aa5760206040517f4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d9171618152f35b50346103aa57806003193601126103aa5760207f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254604051908152f35b50346103aa57806003193601126103aa5760035460405160109190911c6001600160a01b03168152602090f35b50346103aa57806003193601126103aa576020600a54604051908152f35b50346103aa57806003193601126103aa577f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f9081815260209160008051602061468c833981519152835260408220338352835260ff6040832054161561140557506008546000198114612fdd57907f4c5620b7fb811e045f023b50b0c5fa3a4a14a640655c04bfb8530b58e779f90060016040930192839283600855612fc97f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02916003888454865193612f82856132c5565b898552878386019142835281870193845260076060880195600187528d835252209451855551600185015551600284015551151591019060ff801983541691151516179055565b5481519042825286820152a2604051908152f35b634e487b7160e01b82526011600452602482fd5b50346103aa5761300036613296565b907f2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a86880845260008051602061468c8339815191526020526040842033855260205260ff6040852054161561140557506001600160a01b03168083526002602090815260408420805460ff191660ff8515151617905590917ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d91906113f9565b50346103aa57806003193601126103aa5760206040516000805160206145cc8339815191528152f35b50346103aa5760403660031901126103aa576130ef6130e5613265565b602435903361413a565b602060405160018152f35b50346103aa57806003193601126103aa576040519080826000805160206145ac83398151915292835461312c816133ca565b93848452602095600192876001821691826000146131a457505060011461315d575b50505061189c9250038361330e565b81528592509060008051602061458c8339815191525b85831061318c57505061189c935082010138808061314e565b80548389018501528794508693909201918101613173565b93509450505061189c94915060ff191682840152151560051b82010138808061314e565b90503461161b57602036600319011261161b5760043563ffffffff60e01b81168091036115b65760209250637965db0b60e01b811490811561320c575b5015158152f35b6301ffc9a760e01b14905038613205565b60005b8381106132305750506000910152565b8181015183820152602001613220565b906020916132598151809281855285808601910161321d565b601f01601f1916010190565b600435906001600160a01b038216820361327b57565b600080fd5b602435906001600160a01b038216820361327b57565b604090600319011261327b576004356001600160a01b038116810361327b5790602435801515810361327b5790565b608081019081106001600160401b0382111761127d57604052565b6001600160401b03811161127d57604052565b604081019081106001600160401b0382111761127d57604052565b90601f801991011681019081106001600160401b0382111761127d57604052565b6001600160401b03811161127d57601f01601f191660200190565b60405190613357826132f3565b600a8252692722a120902a37b5b2b760b11b6020830152565b6040519061337d826132f3565b6005825264244e45424160d81b6020830152565b6001600160a01b031660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b90600182811c921680156133fa575b60208310146133e457565b634e487b7160e01b600052602260045260246000fd5b91607f16916133d9565b604051906000826000805160206145ec83398151915291825492613427846133ca565b808452936020916001918281169081156134a45750600114613455575b5050506134539250038361330e565b565b600090815260008051602061466c8339815191529590935091905b82841061348c5750613453945050508101602001388080613444565b85548885018301529485019487945092810192613470565b925050506020925061345394915060ff191682840152151560051b820101388080613444565b6040519060008260008051602061462c833981519152918254926134ed846133ca565b808452936020916001918281169081156134a45750600114613518575050506134539250038361330e565b600090815260008051602061474c8339815191529590935091905b82841061354f5750613453945050508101602001388080613444565b85548885018301529485019487945092810192613533565b919082018092116108a157565b906003549160ff90818460081c161580613686575b8061366e575b61366557816000805160206146ac8339815191525416613665576001600160a01b0390811660008181526001602052604081205490959084168015613653575b61364b57836009541661364b5783166135ed575b5050505050600190565b8185541680821490811561363f575b506135e35784526002602052816040852054161592831561362b575b50505061362857808080806135e3565b90565b168352604083205416159050388080613618565b905082851614386135fc565b505050505090565b508285168652836040872054166135cf565b50505050600090565b506000546001600160a01b038481169116141561358f565b506000546001600160a01b0382811691161415613589565b3360009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604081205460ff16156114055750565b3360009081527f4d7367b4c45c93361c07a01249cc1ef90933a8773f26df2dabd0fb4074504d1160205260409020547f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654929060ff16156114055750565b8060005260008051602061468c83398151915260205260406000203360005260205260ff60406000205416156114055750565b60ff6000805160206146ac833981519152541661378057565b60405163d93c066560e01b8152600490fd5b6000805160206146ec83398151915260028154146137b05760029055565b604051633ee5aeb560e01b8152600490fd5b6001600160a01b031660008181527f0a6a8216e7a1d89d05570786ef50d05ab98f2cf7598c06f1ec4437ec2040c4a9602052604081205490919060008051602061464c8339815191529060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b50505090565b6001600160a01b031660008181527f95dda6c6f31ea0c92078aaca3a510dc395bc467e87b1d2be7f9e24c15aaff99a60205260408120549091906000805160206145cc8339815191529060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fc107dca26644af9dc6feac68c9de2cb2ec979e3c35b7e6ee33925bc125da9c7660205260408120549091907f14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b9060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604081205490919060008051602061468c8339815191529060ff16613a2b578280526020526040822081835260205260408220600160ff19825416179055339160008051602061456c8339815191528180a4600190565b505090565b6001600160a01b031660008181527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a860205260408120549091907f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e39060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fd17a96b5ab97baeb5abd2aff3d879f3ae21bdf0a88374ff422ddd156525d2a07602052604081205490919060008051602061472c8339815191529060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f784cd7277279da66f514c343def5ae4d754633326a69df9e3246cf541f59dae660205260408120549091907f4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d9171619060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fc726c2b4c97955c111bebcf26d23050c057419036fd6b131fd840def3e37a8b060205260408120549091907f2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a8689060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f4d7367b4c45c93361c07a01249cc1ef90933a8773f26df2dabd0fb4074504d1160205260408120549091907f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654929060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fb6061ee728d91d026c497d6fc1fd4c6e962c3b781d406ba2f82db1094fd3c7bc60205260408120549091907f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f9060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f3978316b9e18641362396a82e770f244695fb3fa52ae062231283c763a3660ac60205260408120549091907fe9dc316fa34ae880f78d85d5ce397feb0c9fbe2fc8ebf721a7d1646cabaf7f8c9060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fe0d12f91347694d97c9cb47d2ffc7e6f53fab026501949ab958be692b40ec6d160205260408120549091907f940d6b1946ff1d2b5a9f1909219c3c81a370804b5ba0f91ec0828c99a2e6a6819060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b9060009180835260008051602061468c83398151915280602052604084209260018060a01b03169283855260205260ff6040852054161560001461385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f95dda6c6f31ea0c92078aaca3a510dc395bc467e87b1d2be7f9e24c15aaff99a60205260408120549091906000805160206145cc8339815191529060008051602061468c8339815191529060ff161561385a57818452602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9060009180835260008051602061468c83398151915280602052604084209260018060a01b03169283855260205260ff60408520541660001461385a57818452602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b60ff6000805160206146ac83398151915254161561412857565b604051638dfc202b60e01b8152600490fd5b916001600160a01b03808416928315612c085716928315612bef577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591614182602092613391565b85600052825280604060002055604051908152a3565b916001600160a01b03808416928315614287571692831561426e576141bb613767565b6000908382527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace008060205260408320549184831061423b575082847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef959360409388602097528652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6142a8614459565b6142b06144c3565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081018181106001600160401b0382111761127d5760405251902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161439957926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561438d5780516001600160a01b0381161561438457918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600481101561441457806143b7575050565b600181036143d15760405163f645eedf60e01b8152600490fd5b600281036143f25760405163fce698f760e01b815260048101839052602490fd5b6003146143fc5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b60ff60008051602061470c8339815191525460401c161561444757565b604051631afcd79f60e31b8152600490fd5b614461613404565b8051908115614471576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10054801561449e5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b6144cb6134ca565b80519081156144db576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154801561449e5790565b9061452f575080511561451d57602081519101fd5b60405163d6bda27560e01b8152600490fd5b81511580614562575b614540575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561453856fe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03bf8b034af7a434c44d9299a66a1071085478bb9a7fdc1f0ebcb5d36dc76f02b2a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10252c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10393a9ea60add98726fcd12f31bd91d98faf4378bac52abb4f48e807756ced77a142ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330046a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00365fccb66c62533ad1447fec73f7b764cf03ac69d512070f7c0aa889025cec195f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75a2646970667358221220429071d27fec423448a4ab3db53220edd295603c80ed5da9e295a9d923f49fc064736f6c63430008160033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xD1 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND PUSH3 0xC2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 DUP3 AND ADD PUSH3 0x7C JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A1 SWAP1 DUP2 PUSH3 0xD7 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x22EF ADD MSTORE PUSH2 0x2456 ADD MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP1 PUSH3 0x5C JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x31C8 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x30FA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x30C8 JUMPI DUP1 PUSH4 0xB06806A EQ PUSH2 0x309F JUMPI DUP1 PUSH4 0xD392CD9 EQ PUSH2 0x2FF1 JUMPI DUP1 PUSH4 0x1504D8F0 EQ PUSH2 0x2EB0 JUMPI DUP1 PUSH4 0x15926257 EQ PUSH2 0x2E92 JUMPI DUP1 PUSH4 0x16EFD941 EQ PUSH2 0x2E65 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E28 JUMPI DUP1 PUSH4 0x1872223F EQ PUSH2 0x2DED JUMPI DUP1 PUSH4 0x18821400 EQ PUSH2 0x2DD1 JUMPI DUP1 PUSH4 0x1FC4B857 EQ PUSH2 0x2D76 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A53 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2A19 JUMPI DUP1 PUSH4 0x2A905318 EQ PUSH2 0x29E9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x299E JUMPI DUP1 PUSH4 0x2FBF02D4 EQ PUSH2 0x2980 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22C0 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2959 JUMPI DUP1 PUSH4 0x349B5954 EQ PUSH2 0x291E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x28FB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28B3 JUMPI DUP1 PUSH4 0x3DB11D6A EQ PUSH2 0x2887 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2733 JUMPI DUP1 PUSH4 0x42275C59 EQ PUSH2 0x270A JUMPI DUP1 PUSH4 0x45CB1258 EQ PUSH2 0x26E7 JUMPI DUP1 PUSH4 0x47885781 EQ PUSH2 0x26BD JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x2697 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x23DB JUMPI DUP1 PUSH4 0x51108CAC EQ PUSH2 0x23B8 JUMPI DUP1 PUSH4 0x512FEDE1 EQ PUSH2 0x2359 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x22DC JUMPI DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x22C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2290 JUMPI DUP1 PUSH4 0x5D75B889 EQ PUSH2 0x2266 JUMPI DUP1 PUSH4 0x61B242C5 EQ PUSH2 0x21B0 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2189 JUMPI DUP1 PUSH4 0x6D1FA35B EQ PUSH2 0x2092 JUMPI DUP1 PUSH4 0x7028E2CD EQ PUSH2 0x2057 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FFF JUMPI DUP1 PUSH4 0x7295ED93 EQ PUSH2 0x1FC4 JUMPI DUP1 PUSH4 0x76F10AD0 EQ PUSH2 0x1F09 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1EB1 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x1E44 JUMPI DUP1 PUSH4 0x82BC7BC9 EQ PUSH2 0x1E1B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1B79 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1A1B JUMPI DUP1 PUSH4 0x8A5D4869 EQ PUSH2 0x17E2 JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x1975 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x191C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x183B JUMPI DUP1 PUSH4 0x9632874B EQ PUSH2 0x1800 JUMPI DUP1 PUSH4 0x970875CE EQ PUSH2 0x17E2 JUMPI DUP1 PUSH4 0x97E2B9AF EQ PUSH2 0x17AB JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x176C JUMPI DUP1 PUSH4 0xA1BDBA44 EQ PUSH2 0x1742 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1726 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x146D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1423 JUMPI DUP1 PUSH4 0xB45A1EB5 EQ PUSH2 0x1341 JUMPI DUP1 PUSH4 0xB60095A5 EQ PUSH2 0x1323 JUMPI DUP1 PUSH4 0xB941D774 EQ PUSH2 0x12E9 JUMPI DUP1 PUSH4 0xC1D6CB4F EQ PUSH2 0x12AF JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x111C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x10D1 JUMPI DUP1 PUSH4 0xD6565A2D EQ PUSH2 0x107F JUMPI DUP1 PUSH4 0xDC62CAF5 EQ PUSH2 0x1044 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xFFA JUMPI DUP1 PUSH4 0xDE5F8D93 EQ PUSH2 0xFAC JUMPI DUP1 PUSH4 0xDF8BCAC7 EQ PUSH2 0xF6E JUMPI DUP1 PUSH4 0xE1EB7399 EQ PUSH2 0xEEE JUMPI DUP1 PUSH4 0xE4D1155E EQ PUSH2 0xE83 JUMPI DUP1 PUSH4 0xE54E55AE EQ PUSH2 0xE48 JUMPI DUP1 PUSH4 0xE5C7160B EQ PUSH2 0xE09 JUMPI DUP1 PUSH4 0xEA4B7DCD EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0xEB990C59 EQ PUSH2 0x3AD JUMPI PUSH4 0xF72C0D8B EQ PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x3C7 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xDD0 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xDC6 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xDBD JUMPI JUMPDEST POP PUSH2 0xDAB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP4 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO PUSH2 0xD7E JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO PUSH2 0xD6D JUMPI JUMPDEST PUSH2 0xD5B JUMPI PUSH2 0x453 PUSH2 0x334A JUMP JUMPDEST PUSH2 0x45B PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH2 0x464 PUSH2 0x442A JUMP JUMPDEST PUSH2 0x46C PUSH2 0x442A JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xB10 JUMPI DUP2 SWAP1 PUSH2 0x497 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCDC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC4C JUMPI DUP9 SWAP3 PUSH2 0xC41 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x9E2 JUMPI DUP2 SWAP1 PUSH2 0x504 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBBF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB2F JUMPI DUP8 SWAP3 PUSH2 0xB24 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0x54E PUSH2 0x442A JUMP JUMPDEST PUSH2 0x556 PUSH2 0x442A JUMP JUMPDEST PUSH2 0x55E PUSH2 0x334A JUMP JUMPDEST PUSH2 0x566 PUSH2 0x442A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x573 DUP3 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x589 PUSH2 0x442A JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xB10 JUMPI DUP2 SWAP1 PUSH2 0x5B4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA91 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xA01 JUMPI DUP9 SWAP3 PUSH2 0x9F6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x9E2 JUMPI PUSH2 0x61F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x96A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DB JUMPI PUSH2 0x752 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 DUP4 PUSH2 0x8D0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP5 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SSTORE DUP5 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SSTORE PUSH2 0x6B6 PUSH2 0x442A JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x442A JUMP JUMPDEST PUSH2 0x6C6 PUSH2 0x442A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR DUP6 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xB SSTORE PUSH2 0x706 DUP2 PUSH2 0x39A2 JUMP JUMPDEST POP PUSH2 0x710 DUP2 PUSH2 0x3A30 JUMP JUMPDEST POP PUSH2 0x71A DUP2 PUSH2 0x3ADA JUMP JUMPDEST POP PUSH2 0x724 DUP2 PUSH2 0x3B72 JUMP JUMPDEST POP PUSH2 0x72E DUP2 PUSH2 0x3C1C JUMP JUMPDEST POP PUSH2 0x738 DUP2 PUSH2 0x3CC6 JUMP JUMPDEST POP PUSH2 0x742 DUP2 PUSH2 0x3D70 JUMP JUMPDEST POP PUSH2 0x74C DUP2 PUSH2 0x3E1A JUMP JUMPDEST POP PUSH2 0x3EC4 JUMP JUMPDEST POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x8B7 JUMPI PUSH2 0x76D PUSH2 0x3767 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SWAP2 DUP3 SLOAD PUSH12 0x33B2E3C9FD0803CE8000000 SWAP1 DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8A1 JUMPI PUSH1 0x20 DUP8 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0xFF SWAP8 SSTORE DUP5 DUP5 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A DUP2 DUP1 LOG3 PUSH1 0x40 SHR AND ISZERO PUSH2 0x849 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x952 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x752 SWAP8 SWAP7 SWAP5 LT PUSH2 0x939 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x668 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x91E JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x904 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP5 LT PUSH2 0x9CC JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x9C1 JUMPI POP PUSH2 0x628 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x99C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP9 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xA76 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xA5D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x5F6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xA42 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xAFB JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xAED JUMPI POP PUSH2 0x5BD JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xACA JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAC5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x523 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP8 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xBA4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB8B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x546 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xB70 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB55 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP5 LT PUSH2 0xC2B JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xC1D JUMPI POP PUSH2 0x50D JUMP JUMPDEST DUP9 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0xBF4 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP9 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xCC1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xCA8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x4D9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xC8D JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xC72 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xD46 JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xD38 JUMPI POP PUSH2 0x4A0 JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xD15 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x447 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP3 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x405 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 DUP5 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x3F3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE34 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xE9D PUSH2 0x3265 JUMP JUMPDEST PUSH2 0xEA5 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0xC370610A8C5F2DAECDB3A2566E9A30F7969DC29704BF228FCC9A1A64CCD67138 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xF08 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x36D8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP2 AND PUSH1 0x10 DUP5 DUP2 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP2 SHR AND PUSH32 0xAD6EDE2BAB15D4CC29F9AA4E11F38E7BFFE6FE0296E8928492A62D29A8AB11D6 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xF88 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD5B JUMPI PUSH2 0xFA8 SWAP1 PUSH2 0x38F8 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFC5 PUSH2 0x36D8 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH32 0x749CE304AB81145BE90B787A7777D030C801B4CFD19E6B30DF21973A54EC004C DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1014 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x1025 PUSH2 0x101F PUSH2 0x3280 JUMP JUMPDEST SWAP2 PUSH2 0x3391 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xE9DC316FA34AE880F78D85D5CE397FEB0C9FBE2FC8EBF721A7D1646CABAF7F8C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFA8 PUSH1 0x4 CALLDATALOAD PUSH2 0x10F1 PUSH2 0x3280 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1117 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x3734 JUMP JUMPDEST PUSH2 0x408B JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1136 PUSH2 0x3265 JUMP JUMPDEST SWAP1 PUSH2 0x113F PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0xFF DUP7 AND DUP7 SUB PUSH2 0x12AB JUMPI DUP1 TIMESTAMP GT PUSH2 0x1293 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP7 DUP8 DUP8 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP11 PUSH1 0x40 DUP7 ADD MSTORE DUP6 DUP9 AND PUSH1 0x60 DUP7 ADD MSTORE DUP9 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x127D JUMPI PUSH2 0x1248 SWAP4 PUSH2 0x123F SWAP4 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x1218 PUSH2 0x42A0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x4315 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x43A5 JUMP JUMPDEST AND DUP6 DUP2 SUB PUSH2 0x125F JUMPI POP PUSH2 0x125C SWAP4 SWAP5 POP PUSH2 0x413A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 DUP7 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x12C9 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x12D1 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD5B JUMPI PUSH2 0xFA8 SWAP1 PUSH2 0x3860 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1303 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x130B PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD5B JUMPI PUSH2 0xFA8 SWAP1 PUSH2 0x37C2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH2 0x1350 CALLDATASIZE PUSH2 0x3296 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x784CD7277279DA66F514C343DEF5AE4D754633326A69DF9E3246CF541F59DAE6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x4C6FE25F3A39278AEFC6C9CCDF3BCE8DFD53184196650CDCDBB6FE4B1D917161 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1405 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP6 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP1 SWAP2 PUSH32 0x2DF5E71BACF8A1A1D232AD715B36AE4617B1F75E7C6283373A54C96556CAE754 SWAP2 SWAP1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1469 PUSH1 0x40 MLOAD PUSH2 0x1443 DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1487 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1492 PUSH2 0x3767 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1714 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 DUP3 AND PUSH2 0x1714 JUMPI PUSH1 0x3 SLOAD SWAP1 DUP3 DUP3 AND PUSH2 0x16AE JUMPI JUMPDEST POP DUP2 PUSH1 0x9 SLOAD AND PUSH2 0x1699 JUMPI PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x168C JUMPI JUMPDEST PUSH2 0x167A JUMPI PUSH2 0x14F5 PUSH2 0x3792 JUMP JUMPDEST DUP4 DUP2 PUSH1 0x3 SLOAD PUSH1 0x10 SHR AND DUP1 PUSH2 0x161F JUMPI JUMPDEST POP DUP2 PUSH1 0x4 SLOAD AND DUP1 PUSH2 0x15BA JUMPI JUMPDEST POP POP PUSH2 0x151D DUP3 DUP5 CALLER PUSH2 0x4198 JUMP JUMPDEST PUSH1 0x4 SLOAD AND SWAP1 DUP2 PUSH2 0x1545 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP2 DUP5 SWAP3 EXTCODESIZE ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A483165 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x1597 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x15A1 DUP3 SWAP2 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x3AA JUMPI DUP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1FFB811F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x15AB JUMPI ISZERO PUSH2 0x1510 JUMPI PUSH2 0x160C SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x1617 JUMPI DUP4 CODESIZE PUSH2 0x1510 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD PUSH4 0xCC1DD94F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x15AB JUMPI ISZERO PUSH2 0x1504 JUMPI PUSH2 0x166F SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x1617 JUMPI DUP4 CODESIZE PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12F1F923 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP1 DUP5 SLOAD AND CALLER EQ ISZERO PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0xFC8919 PUSH1 0xE0 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP4 DUP8 SLOAD AND DUP1 CALLER EQ ISZERO SWAP1 DUP2 PUSH2 0x1709 JUMPI JUMPDEST POP ISZERO PUSH2 0x14D4 JUMPI CALLER DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO SWAP1 DUP2 ISZERO PUSH2 0x16F8 JUMPI JUMPDEST POP PUSH2 0x16E6 JUMPI CODESIZE PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB094F27 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP8 MSTORE POP PUSH1 0x40 DUP7 KECCAK256 SLOAD DUP3 AND ISZERO CODESIZE PUSH2 0x16DB JUMP JUMPDEST SWAP1 POP DUP2 EQ ISZERO CODESIZE PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E014367 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1762 PUSH1 0xA SLOAD PUSH1 0xB SLOAD SWAP1 PUSH2 0x3567 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xFC5 JUMPI DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1797 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH2 0x17D8 PUSH2 0x17CA PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x17D2 PUSH2 0x3280 JUMP JUMPDEST SWAP1 PUSH2 0x3574 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x14A3858BCAD155F4A363ABCC3A27999D5C7E0BB4EDEAF632F13B237DCEFB630B DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x186C DUP4 PUSH2 0x33CA JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x18FA JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x18B0 JUMPI JUMPDEST POP POP PUSH2 0x189C SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST PUSH2 0x1469 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x18E2 JUMPI POP POP PUSH2 0x189C SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x188E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x189C SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x188E JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH2 0x1938 PUSH2 0x3280 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x198E PUSH2 0x369E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x19D6 JUMPI PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x3 SSTORE PUSH32 0xB3DA2DB3DFC3778F99852546C6E9AB39EC253F9DE7B0847AFEC61BD27878E923 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C726561647920656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD ISZERO DUP1 PUSH2 0x1B50 JUMPI JUMPDEST ISZERO PUSH2 0x1B13 JUMPI PUSH2 0x1A62 PUSH2 0x3404 JUMP JUMPDEST SWAP1 PUSH2 0x1A6B PUSH2 0x34CA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0x127D JUMPI SWAP3 DUP5 SWAP3 PUSH1 0x20 PUSH2 0x1AC9 DUP9 SWAP7 PUSH2 0x1ABB SWAP9 PUSH1 0x40 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xF PUSH1 0xF8 SHL DUP11 MSTORE PUSH1 0xE0 DUP6 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x3240 JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AFC JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD ISZERO PUSH2 0x1A55 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1B92 PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1DEF JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1DC3 JUMPI JUMPDEST ISZERO PUSH2 0x1D7E JUMPI PUSH2 0x1CA4 SWAP4 SWAP5 PUSH1 0x40 MLOAD PUSH2 0x1BF2 DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x2AA725A727ABA7 PUSH1 0xC9 SHL DUP5 DUP3 ADD MSTORE SWAP4 DUP7 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1CD1 JUMPI POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x1C34 DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x20A226A4A7 PUSH1 0xD9 SHL DUP3 DUP3 ADD MSTORE SWAP1 JUMPDEST PUSH2 0x1C4F PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 DUP2 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x321D JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 CALLER PUSH32 0xA45B854309F0BBCD0B5FE966BCC16C83A563411377CA9B86644A9AFF98723A13 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1D23 JUMPI POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x1D0E DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH3 0x1093D5 PUSH1 0xEA SHL DUP3 DUP3 ADD MSTORE SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1C47 JUMPI SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x1D5A DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH18 0x22A6A2A923A2A721ACAFA3AAA0A92224A0A7 PUSH1 0x71 SHL DUP3 DUP3 ADD MSTORE SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D75737420686176652070617573657220726F6C6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE DUP5 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1BDC JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE DUP5 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1BD5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1E5E PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x1E66 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD5B JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1ED9 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x161B JUMPI PUSH1 0x4 CALLDATALOAD DUP3 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x1F2E DUP2 PUSH2 0x32C5 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE DUP1 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH2 0x1FB2 JUMPI DUP3 PUSH1 0x40 SWAP2 PUSH1 0x80 SWAP5 MSTORE PUSH1 0x7 DUP4 MSTORE KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F69 DUP3 PUSH2 0x32C5 JUMP JUMPDEST DUP1 SLOAD SWAP3 DUP4 DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP7 ADD SLOAD SWAP6 PUSH1 0x40 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP5 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP1 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2402054B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x2A3DAB589BCC9747970DD85AC3F222668741AE51F2A1BBB8F8355BE28DD8A868 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2027 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x5FDBD35E8DA83EE755D5E62A539E5ED7F47126ABEDE0B8B10F9EA43DC6EED07F DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x20B2 PUSH2 0x369E JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH2 0x2177 JUMPI DUP2 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x20DD PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0x6 SLOAD SWAP1 PUSH2 0x3567 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x2165 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP4 DUP3 MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x210B DUP2 PUSH2 0x32C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x2153 JUMPI PUSH1 0x40 PUSH32 0x81D0016AE442431196752190C857DDDDDEBF8D309ED0B095312600407B3B3F43 SWAP2 DUP4 DUP6 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB7B33787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E3CCCF5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x345512DF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15B6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x15B6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x15B6 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x15B6 JUMPI PUSH32 0xF0CA201A259F21761E7392673B3E9269933E13069F2081AF411CB4079825F842 SWAP1 PUSH2 0x2221 PUSH2 0x36D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0xA SSTORE DUP3 PUSH1 0x24 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 MSTORE DUP3 PUSH1 0x20 DUP6 ADD MSTORE ADD PUSH1 0x40 DUP4 ADD CALLDATACOPY DUP4 PUSH1 0x40 DUP5 DUP4 ADD ADD MSTORE PUSH1 0x40 DUP2 CALLER SWAP5 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFA8 PUSH2 0x2283 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x228B PUSH2 0x369E JUMP JUMPDEST PUSH2 0x3FE3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x2347 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x2372 PUSH2 0x369E JUMP JUMPDEST PUSH32 0xA120777524474DF4E22ABE93A0B3DCCB74B3093CDBB842F4F6E32D2BF0CE63BC PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 PUSH1 0xFF NOT DUP4 AND OR PUSH1 0x3 SSTORE DUP5 PUSH1 0x40 MLOAD SWAP3 AND OR ISZERO ISZERO DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x23F0 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x161B JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x161B JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x241C DUP2 PUSH2 0x332F JUMP JUMPDEST SWAP4 PUSH2 0x242A PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x330E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP9 DUP4 DUP4 ADD ADD GT PUSH2 0x2693 JUMPI DUP2 DUP7 SWAP3 DUP10 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2665 JUMPI JUMPDEST POP PUSH2 0x2347 JUMPI PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2648 JUMPI POP DUP2 AND SWAP5 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL DUP7 SWAP2 DUP2 PUSH2 0x2615 JUMPI JUMPDEST POP PUSH2 0x2514 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP7 SWAP1 DUP9 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x2600 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x25EA JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP3 SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP5 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x25CC JUMPI POP PUSH2 0xFA8 SWAP5 DUP3 SWAP2 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x25C3 JUMPI RETURNDATASIZE PUSH2 0x25A7 DUP2 PUSH2 0x332F JUMP JUMPDEST SWAP1 PUSH2 0x25B5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x330E JUMP JUMPDEST DUP2 MSTORE DUP6 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x4508 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x4508 JUMP JUMPDEST SWAP5 POP POP POP POP POP CALLVALUE PUSH2 0x25DB JUMPI POP DUP1 RETURN JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2641 JUMPI JUMPDEST PUSH2 0x262D DUP2 DUP4 PUSH2 0x330E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x263D JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x24F7 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2623 JUMP JUMPDEST DUP8 PUSH1 0x44 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO CODESIZE PUSH2 0x2482 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x274C PUSH2 0x410E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x2847 JUMPI JUMPDEST POP ISZERO PUSH2 0x2803 JUMPI PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH2 0x27BD PUSH2 0x410E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 CALLER PUSH32 0x5B65B0C1363B3003DB9BCC5E1FD8805A6D6BF5BF6DC9D3431EE4494CD7D11766 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206861766520756E70617573657220726F6C650000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH32 0x14A3858BCAD155F4A363ABCC3A27999D5C7E0BB4EDEAF632F13B237DCEFB630B DUP4 MSTORE DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE PUSH2 0x278D JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE KECCAK256 SLOAD ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x28CD PUSH2 0x3280 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x28E9 JUMPI PUSH2 0xFA8 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x408B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH2 0x2916 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x940D6B1946FF1D2B5A9F1909219C3C81A370804B5BA0F91EC0828C99A2E6A681 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFA8 PUSH1 0x4 CALLDATALOAD PUSH2 0x29BE PUSH2 0x3280 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x29E4 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x3734 JUMP JUMPDEST PUSH2 0x3F6E JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1469 PUSH2 0x2A05 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x2A6D PUSH2 0x3265 JUMP JUMPDEST SWAP1 PUSH2 0x2A76 PUSH2 0x3280 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x2A83 PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP3 AND SWAP5 DUP6 DUP6 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 DUP8 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 DUP9 KECCAK256 SLOAD AND PUSH2 0x1714 JUMPI DUP3 DUP5 AND DUP1 DUP9 MSTORE PUSH1 0x1 DUP10 MSTORE DUP2 PUSH1 0x40 DUP10 KECCAK256 SLOAD AND PUSH2 0x1714 JUMPI PUSH1 0x3 SLOAD SWAP1 DUP3 DUP3 AND PUSH2 0x2D23 JUMPI JUMPDEST POP DUP2 PUSH1 0x9 SLOAD AND PUSH2 0x1699 JUMPI PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x2D16 JUMPI JUMPDEST PUSH2 0x167A JUMPI PUSH2 0x2AE8 PUSH2 0x3792 JUMP JUMPDEST DUP2 PUSH1 0x3 SLOAD PUSH1 0x10 SHR AND DUP1 PUSH2 0x2CBA JUMPI JUMPDEST POP DUP2 PUSH1 0x4 SLOAD AND DUP1 PUSH2 0x2C47 JUMPI JUMPDEST POP PUSH2 0x2B0C DUP5 PUSH2 0x3391 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2BBE JUMPI JUMPDEST POP POP PUSH2 0x2B30 DUP5 DUP4 DUP6 PUSH2 0x4198 JUMP JUMPDEST PUSH1 0x4 SLOAD AND SWAP2 DUP3 PUSH2 0x2B57 JUMPI JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A483165 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x2BAA JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x2BB4 DUP3 SWAP2 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x3AA JUMPI DUP1 PUSH2 0x2BA2 JUMP JUMPDEST DUP6 DUP3 LT PUSH2 0x2C21 JUMPI ISZERO PUSH2 0x2C08 JUMPI CALLER ISZERO PUSH2 0x2BEF JUMPI DUP5 SWAP1 PUSH2 0x2BDB DUP6 PUSH2 0x3391 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE DUP9 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CODESIZE DUP1 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x263D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1FFB811F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2CAF JUMPI SWAP1 DUP8 SWAP2 PUSH2 0x2C9B JUMPI JUMPDEST POP PUSH2 0x2B02 JUMP JUMPDEST PUSH2 0x2CA4 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x2693 JUMPI DUP6 CODESIZE PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x263D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCC1DD94F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x2CAF JUMPI ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2D0F SWAP1 SWAP7 SWAP2 SWAP7 PUSH2 0x32E0 JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x2AF6 JUMP JUMPDEST POP DUP2 DUP7 SLOAD AND CALLER EQ ISZERO PUSH2 0x2ADC JUMP JUMPDEST DUP5 DUP10 SLOAD AND DUP1 DUP6 EQ ISZERO SWAP1 DUP2 PUSH2 0x2D6B JUMPI JUMPDEST POP ISZERO PUSH2 0x2AC7 JUMPI DUP4 DUP10 MSTORE PUSH1 0x2 DUP11 MSTORE DUP3 PUSH1 0x40 DUP11 KECCAK256 SLOAD AND ISZERO SWAP1 DUP2 ISZERO PUSH2 0x2D5A JUMPI JUMPDEST POP PUSH2 0x16E6 JUMPI CODESIZE PUSH2 0x2AC7 JUMP JUMPDEST DUP10 MSTORE POP PUSH1 0x40 DUP9 KECCAK256 SLOAD DUP3 AND ISZERO CODESIZE PUSH2 0x2D4F JUMP JUMPDEST SWAP1 POP DUP2 EQ ISZERO CODESIZE PUSH2 0x2D32 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2D93 PUSH2 0x369E JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP4 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH32 0x93D98C19D9F85A53622C68B13046669AB48048057324F5300A2CE8692BB77191 PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1469 PUSH2 0x2A05 PUSH2 0x334A JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x4C6FE25F3A39278AEFC6C9CCDF3BCE8DFD53184196650CDCDBB6FE4B1D917161 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH32 0x5FDBD35E8DA83EE755D5E62A539E5ED7F47126ABEDE0B8B10F9EA43DC6EED07F SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1405 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2FDD JUMPI SWAP1 PUSH32 0x4C5620B7FB811E045F023B50B0C5FA3A4A14A640655C04BFB8530B58E779F900 PUSH1 0x1 PUSH1 0x40 SWAP4 ADD SWAP3 DUP4 SWAP3 DUP4 PUSH1 0x8 SSTORE PUSH2 0x2FC9 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SWAP2 PUSH1 0x3 DUP9 DUP5 SLOAD DUP7 MLOAD SWAP4 PUSH2 0x2F82 DUP6 PUSH2 0x32C5 JUMP JUMPDEST DUP10 DUP6 MSTORE DUP8 DUP4 DUP7 ADD SWAP2 TIMESTAMP DUP4 MSTORE DUP2 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x7 PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0x1 DUP8 MSTORE DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SLOAD DUP2 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE DUP7 DUP3 ADD MSTORE LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH2 0x3000 CALLDATASIZE PUSH2 0x3296 JUMP JUMPDEST SWAP1 PUSH32 0x2A3DAB589BCC9747970DD85AC3F222668741AE51F2A1BBB8F8355BE28DD8A868 DUP1 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x1405 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP6 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP1 SWAP2 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x30EF PUSH2 0x30E5 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x413A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP4 SLOAD PUSH2 0x312C DUP2 PUSH2 0x33CA JUMP JUMPDEST SWAP4 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 SWAP3 DUP8 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x31A4 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x315D JUMPI JUMPDEST POP POP POP PUSH2 0x189C SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST DUP2 MSTORE DUP6 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP6 DUP4 LT PUSH2 0x318C JUMPI POP POP PUSH2 0x189C SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x314E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x3173 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH2 0x189C SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x314E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x161B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161B JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x15B6 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x320C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3230 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3220 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3259 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x321D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x327B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x327B JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x327B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x327B JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x327B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x127D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3357 DUP3 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0xA DUP3 MSTORE PUSH10 0x2722A120902A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x337D DUP3 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x244E454241 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x33FA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x33E4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x33D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x3427 DUP5 PUSH2 0x33CA JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x34A4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3455 JUMPI JUMPDEST POP POP POP PUSH2 0x3453 SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x348C JUMPI POP PUSH2 0x3453 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x3444 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x3470 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x3453 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x3444 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x34ED DUP5 PUSH2 0x33CA JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x34A4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3518 JUMPI POP POP POP PUSH2 0x3453 SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x354F JUMPI POP PUSH2 0x3453 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x3444 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x3533 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8A1 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 SLOAD SWAP2 PUSH1 0xFF SWAP1 DUP2 DUP5 PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x3686 JUMPI JUMPDEST DUP1 PUSH2 0x366E JUMPI JUMPDEST PUSH2 0x3665 JUMPI DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x3665 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP6 SWAP1 DUP5 AND DUP1 ISZERO PUSH2 0x3653 JUMPI JUMPDEST PUSH2 0x364B JUMPI DUP4 PUSH1 0x9 SLOAD AND PUSH2 0x364B JUMPI DUP4 AND PUSH2 0x35ED JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP6 SLOAD AND DUP1 DUP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x363F JUMPI JUMPDEST POP PUSH2 0x35E3 JUMPI DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO SWAP3 DUP4 ISZERO PUSH2 0x362B JUMPI JUMPDEST POP POP POP PUSH2 0x3628 JUMPI DUP1 DUP1 DUP1 DUP1 PUSH2 0x35E3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 AND EQ CODESIZE PUSH2 0x35FC JUMP JUMPDEST POP POP POP POP POP SWAP1 JUMP JUMPDEST POP DUP3 DUP6 AND DUP7 MSTORE DUP4 PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0x35CF JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x358F JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x3589 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1405 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1405 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1405 JUMPI POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x3780 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x37B0 JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xA6A8216E7A1D89D05570786EF50D05AB98F2CF7598C06F1EC4437EC2040C4A9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x95DDA6C6F31EA0C92078AACA3A510DC395BC467E87B1D2BE7F9E24C15AAFF99A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xC107DCA26644AF9DC6FEAC68C9DE2CB2EC979E3C35B7E6EE33925BC125DA9C76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x14A3858BCAD155F4A363ABCC3A27999D5C7E0BB4EDEAF632F13B237DCEFB630B SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x3A2B JUMPI DUP3 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xD17A96B5AB97BAEB5ABD2AFF3D879F3AE21BDF0A88374FF422DDD156525D2A07 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x784CD7277279DA66F514C343DEF5AE4D754633326A69DF9E3246CF541F59DAE6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x4C6FE25F3A39278AEFC6C9CCDF3BCE8DFD53184196650CDCDBB6FE4B1D917161 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xC726C2B4C97955C111BEBCF26D23050C057419036FD6B131FD840DEF3E37A8B0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x2A3DAB589BCC9747970DD85AC3F222668741AE51F2A1BBB8F8355BE28DD8A868 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB6061EE728D91D026C497D6FC1FD4C6E962C3B781D406BA2F82DB1094FD3C7BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x5FDBD35E8DA83EE755D5E62A539E5ED7F47126ABEDE0B8B10F9EA43DC6EED07F SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x3978316B9E18641362396A82E770F244695FB3FA52AE062231283C763A3660AC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xE9DC316FA34AE880F78D85D5CE397FEB0C9FBE2FC8EBF721A7D1646CABAF7F8C SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xE0D12F91347694D97C9CB47D2FFC7E6F53FAB026501949AB958BE692B40EC6D1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x940D6B1946FF1D2B5A9F1909219C3C81A370804B5BA0F91EC0828C99A2E6A681 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x95DDA6C6F31EA0C92078AACA3A510DC395BC467E87B1D2BE7F9E24C15AAFF99A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND ISZERO PUSH2 0x4128 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2C08 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2BEF JUMPI PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x4182 PUSH1 0x20 SWAP3 PUSH2 0x3391 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x4287 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x426E JUMPI PUSH2 0x41BB PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x423B JUMPI POP DUP3 DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP4 PUSH1 0x40 SWAP4 DUP9 PUSH1 0x20 SWAP8 MSTORE DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x42A8 PUSH2 0x4459 JUMP JUMPDEST PUSH2 0x42B0 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x4399 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x438D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4384 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x4414 JUMPI DUP1 PUSH2 0x43B7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x43D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x43F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x43FC JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x4447 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x4461 PUSH2 0x3404 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x4471 JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD DUP1 ISZERO PUSH2 0x449E JUMPI SWAP1 JUMP JUMPDEST POP PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP1 JUMP JUMPDEST PUSH2 0x44CB PUSH2 0x34CA JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x44DB JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD DUP1 ISZERO PUSH2 0x449E JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x452F JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x451D JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x4562 JUMPI JUMPDEST PUSH2 0x4540 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x4538 JUMP INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D2AE08A8E 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB 0xBF DUP12 SUB 0x4A 0xF7 LOG4 CALLVALUE 0xC4 0x4D SWAP3 SWAP10 0xA6 PUSH11 0x1071085478BB9A7FDC1F0E 0xBC 0xB5 0xD3 PUSH14 0xC76F02B2A16A46D94261C7517CC8 SELFDESTRUCT DUP10 0xF6 SHR 0xC 0xE9 CALLDATALOAD SWAP9 0xE3 0xC8 0x49 DUP1 LT GT 0xDE 0xE6 0x49 0xA6 0xA5 JUMPI 0xD1 MUL MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04A16A46D942 PUSH2 0xC751 PUSH29 0xC8FF89F61C0CE93598E3C849801011DEE649A6A557D10393A9EA60ADD9 DUP8 0x26 0xFC 0xD1 0x2F BALANCE 0xBD SWAP2 0xD9 DUP16 0xAF NUMBER PUSH25 0xBAC52ABB4F48E807756CED77A142AD5D3E1F2E6E70EDCF6D99 SHL DUP11 ADDRESS 0x23 0xD3 0xFC 0xA8 DIV PUSH27 0x131592F9EDB9FD9B89D57D02DD7BC7DEC4DCEEDDA775E58DD541E0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F0330046A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4 0xA6 MULMOD 0xB5 CODECOPY 0x4C 0xEB 0xB4 LOG2 0xAA SWAP12 PUSH24 0x9B17422D0DF92223018B32B4D1FA46E071723D6817E2486D STOP EXTCODESIZE 0xEC 0xC5 PUSH0 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00365F 0xCC 0xB6 PUSH13 0x62533AD1447FEC73F7B764CF03 0xAC PUSH10 0xD512070F7C0AA889025C 0xEC NOT PUSH0 SWAP13 0xE3 BASEFEE ISZERO 0xF8 0xE1 EQ BALANCE 0xC7 0xBB PUSH22 0xA8E6886A91478F7FFC1DBB0A98DC240FDDD76B75A264 PUSH10 0x70667358221220429071 0xD2 PUSH32 0xEC423448A4AB3DB53220EDD295603C80ED5DA9E295A9D923F49FC064736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"1029:22531:34:-:0;;;;;;;1171:4:2;1163:13;;3147:66:1;1029:22531:34;;;;;;;;;7894:76:1;;-1:-1:-1;;;;;;;;;;;;1029:22531:34;;;7983:34:1;7979:146;;-1:-1:-1;1029:22531:34;;;;;;;;1163:13:2;1029:22531:34;;;;;;;;;;;7979:146:1;-1:-1:-1;;;;;;1029:22531:34;;;;;;;;;;;;;8085:29:1;;1029:22531:34;;8085:29:1;7979:146;;;;;7894:76;-1:-1:-1;;;7936:23:1;;;;;1029:22531:34;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":12901,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_52138":{"entryPoint":12928,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_bool":{"entryPoint":12950,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":12864,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_string":{"entryPoint":13103,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":13671,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":13316,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_string_52165":{"entryPoint":13514,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_04dc242102e457ec4b14de2a4d728fb3eeaa7f598cacad2a756031b2d0d526fc":{"entryPoint":13168,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_82b445f4ede3c69cb348b965c7dca97c2ec7658cde3e4fd8baefb6139c5d3088":{"entryPoint":13130,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":12829,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":13258,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":13070,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_52135":{"entryPoint":12997,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_52139":{"entryPoint":13024,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_79248":{"entryPoint":13043,"id":null,"parameterSlots":1,"returnSlots":0},"fun_EIP712NameHash":{"entryPoint":17497,"id":2387,"parameterSlots":0,"returnSlots":1},"fun_EIP712VersionHash":{"entryPoint":17603,"id":2439,"parameterSlots":0,"returnSlots":1},"fun_approve":{"entryPoint":16698,"id":1382,"parameterSlots":3,"returnSlots":0},"fun_buildDomainSeparator":{"entryPoint":17056,"id":2226,"parameterSlots":0,"returnSlots":1},"fun_checkInitializing":{"entryPoint":17450,"id":540,"parameterSlots":0,"returnSlots":0},"fun_checkRole":{"entryPoint":14132,"id":131,"parameterSlots":1,"returnSlots":0},"fun_checkRole_52136":{"entryPoint":13982,"id":131,"parameterSlots":0,"returnSlots":0},"fun_checkRole_52152":{"entryPoint":14040,"id":131,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":16238,"id":317,"parameterSlots":2,"returnSlots":1},"fun_grantRole_52183":{"entryPoint":14274,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52186":{"entryPoint":14432,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52197":{"entryPoint":14584,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52206":{"entryPoint":14754,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52207":{"entryPoint":14896,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52208":{"entryPoint":15066,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52209":{"entryPoint":15218,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52210":{"entryPoint":15388,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52211":{"entryPoint":15558,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52212":{"entryPoint":15728,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52213":{"entryPoint":15898,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_52214":{"entryPoint":16068,"id":317,"parameterSlots":1,"returnSlots":1},"fun_isTransferAllowed":{"entryPoint":13684,"id":10484,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":14226,"id":2061,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":14183,"id":1905,"parameterSlots":0,"returnSlots":0},"fun_requirePaused":{"entryPoint":16654,"id":1918,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":16523,"id":363,"parameterSlots":2,"returnSlots":1},"fun_revokeRole_52151":{"entryPoint":16355,"id":363,"parameterSlots":1,"returnSlots":1},"fun_throwError":{"entryPoint":17317,"id":5407,"parameterSlots":2,"returnSlots":0},"fun_transfer":{"entryPoint":16792,"id":1138,"parameterSlots":3,"returnSlots":0},"fun_tryRecover":{"entryPoint":17173,"id":5322,"parameterSlots":4,"returnSlots":3},"fun_verifyCallResultFromTarget":{"entryPoint":17672,"id":3417,"parameterSlots":3,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":13201,"id":null,"parameterSlots":1,"returnSlots":1},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"652":[{"length":32,"start":8943},{"length":32,"start":9302}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a7146131c85750806306fdde03146130fa578063095ea7b3146130c85780630b06806a1461309f5780630d392cd914612ff15780631504d8f014612eb05780631592625714612e9257806316efd94114612e6557806318160ddd14612e285780631872223f14612ded5780631882140014612dd15780631fc4b85714612d7657806323b872dd14612a53578063248a9ca314612a195780632a905318146129e95780632f2ff15d1461299e5780632fbf02d414612980578063313ce567146122c057806332cb6b0c14612959578063349b59541461291e5780633644e515146128fb57806336568abe146128b35780633db11d6a146128875780633f4ba83a1461273357806342275c591461270a57806345cb1258146126e757806347885781146126bd5780634ada218b146126975780634f1ef286146123db57806351108cac146123b8578063512fede11461235957806352d1902d146122dc5780635b7f415c146122c05780635c975abb146122905780635d75b8891461226657806361b242c5146121b057806361d027b3146121895780636d1fa35b146120925780637028e2cd1461205757806370a0823114611fff5780637295ed9314611fc457806376f10ad014611f095780637ecebe0014611eb15780637f51bb1f14611e4457806382bc7bc914611e1b5780638456cb5914611b7957806384b0196e14611a1b5780638a5d4869146117e25780638a8c523c1461197557806391d148541461191c57806395d89b411461183b5780639632874b14611800578063970875ce146117e257806397e2b9af146117ab5780639b19251a1461176c578063a1bdba4414611742578063a217fddf14611726578063a9059cbb1461146d578063ad3cb1cc14611423578063b45a1eb514611341578063b60095a514611323578063b941d774146112e9578063c1d6cb4f146112af578063d505accf1461111c578063d547741f146110d1578063d6565a2d1461107f578063dc62caf514611044578063dd62ed3e14610ffa578063de5f8d9314610fac578063df8bcac714610f6e578063e1eb739914610eee578063e4d1155e14610e83578063e54e55ae14610e48578063e5c7160b14610e09578063ea4b7dcd14610de0578063eb990c59146103ad5763f72c0d8b1461037057600080fd5b346103aa57806003193601126103aa5760206040517f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38152f35b80fd5b50346103aa5760803660031901126103aa576103c7613265565b6103cf613280565b60008051602061470c83398151915254906001600160401b03821680159081610dd0575b6001149081610dc6575b159081610dbd575b50610dab5760016001600160401b031983161760008051602061470c8339815191525560ff8260401c1615610d7e575b6001600160a01b038316158015610d6d575b610d5b5761045361334a565b61045b613370565b9061046461442a565b61046c61442a565b8051906001600160401b038211610b105781906104976000805160206145ac833981519152546133ca565b601f8111610cdc575b50602090601f8311600114610c4c578892610c41575b50508160011b916000199060031b1c1916176000805160206145ac833981519152555b8051906001600160401b0382116109e257819061050460008051602061460c833981519152546133ca565b601f8111610bbf575b50602090601f8311600114610b2f578792610b24575b50508160011b916000199060031b1c19161760008051602061460c833981519152555b61054e61442a565b61055661442a565b61055e61334a565b61056661442a565b60405190610573826132f3565b60018252603160f81b602083015261058961442a565b8051906001600160401b038211610b105781906105b46000805160206145ec833981519152546133ca565b601f8111610a91575b50602090601f8311600114610a015788926109f6575b50508160011b916000199060031b1c1916176000805160206145ec833981519152555b8051906001600160401b0382116109e25761061f60008051602061462c833981519152546133ca565b601f811161096a575b50602090601f83116001146108db576107529392918791836108d0575b50508160011b916000199060031b1c19161760008051602061462c833981519152555b847fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10055847fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101556106b661442a565b6106be61442a565b6106c661442a565b60016000805160206146ec8339815191525584546001600160a01b0319166001600160a01b038516178555604435600655606435600b55610706816139a2565b5061071081613a30565b5061071a81613ada565b5061072481613b72565b5061072e81613c1c565b5061073881613cc6565b5061074281613d70565b5061074c81613e1a565b50613ec4565b5082546001600160a01b03169081156108b75761076d613767565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace029182546b033b2e3c9fd0803ce8000000908181018091116108a157602087927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260ff97558484527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00825260408420818154019055604051908152a3604051926001600160a01b0316847f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a8180a360401c1615610849575080f35b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff00000000000000001960008051602061470c833981519152541660008051602061470c8339815191525560018152a180f35b634e487b7160e01b600052601160045260246000fd5b60405163ec442f0560e01b815260048101859052602490fd5b015190503880610645565b60008051602061462c833981519152875260008051602061474c8339815191529190601f198416885b818110610952575091600193918561075297969410610939575b505050811b0160008051602061462c83398151915255610668565b015160001960f88460031b161c1916905538808061091e565b92936020600181928786015181550195019301610904565b60008051602061462c8339815191528752601f830160051c60008051602061474c8339815191520190602084106109cc575b601f0160051c60008051602061474c83398151915201905b8181106109c15750610628565b8781556001016109b4565b60008051602061474c833981519152915061099c565b634e487b7160e01b86526041600452602486fd5b0151905038806105d3565b92506000805160206145ec833981519152885260008051602061466c8339815191529088935b601f1984168510610a76576001945083601f19811610610a5d575b505050811b016000805160206145ec833981519152556105f6565b015160001960f88460031b161c19169055388080610a42565b81810151835560209485019460019093019290910190610a27565b9091506000805160206145ec8339815191528852601f830160051c60008051602061466c8339815191520160208410610afb575b908392915b601f820160051c60008051602061466c833981519152018110610aed57506105bd565b898155849350600101610aca565b5060008051602061466c833981519152610ac5565b634e487b7160e01b87526041600452602487fd5b015190503880610523565b925060008051602061460c83398151915287526000805160206146cc8339815191529087935b601f1984168510610ba4576001945083601f19811610610b8b575b505050811b0160008051602061460c83398151915255610546565b015160001960f88460031b161c19169055388080610b70565b81810151835560209485019460019093019290910190610b55565b90915060008051602061460c8339815191528752601f830160051c6000805160206146cc833981519152019060208410610c2b575b90601f8493920160051c6000805160206146cc83398151915201905b818110610c1d575061050d565b888155849350600101610c10565b6000805160206146cc8339815191529150610bf4565b0151905038806104b6565b92506000805160206145ac833981519152885260008051602061458c8339815191529088935b601f1984168510610cc1576001945083601f19811610610ca8575b505050811b016000805160206145ac833981519152556104d9565b015160001960f88460031b161c19169055388080610c8d565b81810151835560209485019460019093019290910190610c72565b9091506000805160206145ac8339815191528852601f830160051c60008051602061458c8339815191520160208410610d46575b908392915b601f820160051c60008051602061458c833981519152018110610d3857506104a0565b898155849350600101610d15565b5060008051602061458c833981519152610d10565b60405163e6c4247b60e01b8152600490fd5b506001600160a01b03811615610447565b68ffffffffffffffffff198216680100000000000000011760008051602061470c83398151915255610435565b60405163f92ee8a960e01b8152600490fd5b90501538610405565b303b1591506103fd565b604084901c60ff161591506103f3565b50346103aa57806003193601126103aa57602060405160008051602061464c8339815191528152f35b50346103aa5760203660031901126103aa5760209060ff906040906001600160a01b03610e34613265565b168152600184522054166040519015158152f35b50346103aa57806003193601126103aa5760206040517f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654928152f35b50346103aa5760203660031901126103aa57610e9d613265565b610ea561369e565b600480546001600160a01b039283166001600160a01b0319821681179092559091167fc370610a8c5f2daecdb3a2566e9a30f7969dc29704bf228fcc9a1a64ccd671388380a380f35b50346103aa5760203660031901126103aa57610f08613265565b610f106136d8565b6003805462010000600160b01b03198116601084811b62010000600160b01b0316919091179092556001600160a01b0392831692911c167fad6ede2bab15d4cc29f9aa4e11f38e7bffe6fe0296e8928492a62d29a8ab11d68380a380f35b50346103aa5760203660031901126103aa57610f88613265565b610f9061369e565b6001600160a01b03811615610d5b57610fa8906138f8565b5080f35b50346103aa57806003193601126103aa57610fc56136d8565b60ff196009541660095542600a557f749ce304ab81145be90b787a7777d030c801b4cfd19e6b30df21973a54ec004c8180a180f35b50346103aa5760403660031901126103aa57611014613265565b61102561101f613280565b91613391565b9060018060a01b03166000526020526020604060002054604051908152f35b50346103aa57806003193601126103aa5760206040517fe9dc316fa34ae880f78d85d5ce397feb0c9fbe2fc8ebf721a7d1646cabaf7f8c8152f35b50346103aa5760203660031901126103aa576040608091600435815260076020522080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b50346103aa5760403660031901126103aa57610fa86004356110f1613280565b9080845260008051602061468c8339815191526020526111176001604086200154613734565b61408b565b50346103aa5760e03660031901126103aa57611136613265565b9061113f613280565b60443590606435936084359460ff861686036112ab578042116112935760018060a01b0390818316968787527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260408720908154916001830190556040519260208401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a6040860152858816606086015288608086015260a085015260c084015260c0835260e08301918383106001600160401b0384111761127d576112489361123f936040525190206112186142a0565b906040519161190160f01b83526002830152602282015260c43591604260a4359220614315565b909291926143a5565b1685810361125f575061125c93945061413a565b80f35b60449086604051916325c0072360e11b835260048301526024820152fd5b634e487b7160e01b600052604160045260246000fd5b6024906040519063313c898160e11b82526004820152fd5b8480fd5b50346103aa5760203660031901126103aa576112c9613265565b6112d161369e565b6001600160a01b03811615610d5b57610fa890613860565b50346103aa5760203660031901126103aa57611303613265565b61130b61369e565b6001600160a01b03811615610d5b57610fa8906137c2565b50346103aa57806003193601126103aa576020600654604051908152f35b50346103aa5761135036613296565b3360009081527f784cd7277279da66f514c343def5ae4d754633326a69df9e3246cf541f59dae660205260409020549091907f4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d9171619060ff161561140557506001600160a01b03168083526001602090815260408420805460ff191660ff8515151617905590917f2df5e71bacf8a1a1d232ad715b36ae4617b1f75e7c6283373a54c96556cae75491905b6040519015158152a280f35b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b50346103aa57806003193601126103aa57611469604051611443816132f3565b60058152640352e302e360dc1b6020820152604051918291602083526020830190613240565b0390f35b50346103aa5760403660031901126103aa57611487613265565b602435611492613767565b338352600160205260ff80604085205416611714576001600160a01b0383811680865260016020526040862054919291821661171457600354908282166116ae575b5081600954166116995760081c16158061168c575b61167a576114f5613792565b838160035460101c168061161f575b508160045416806115ba575b505061151d828433614198565b600454169081611545575b60016000805160206146ec83398151915255602060405160018152f35b8184923b156115b657604051637a48316560e11b81523360048201526001600160a01b0394909416602485015260448401919091528290606490829084905af180156115ab57611597575b8080611528565b6115a182916132e0565b6103aa5780611590565b6040513d84823e3d90fd5b8280fd5b803b1561161b57604051631ffb811f60e01b81523360048201526001600160a01b0386166024820152604481018590529082908290606490829084905af180156115ab57156115105761160c906132e0565b611617578338611510565b8380fd5b5080fd5b803b1561161b5760405163cc1dd94f60e01b81523360048201526001600160a01b038616602482015260448101859052908290829060649082905afa80156115ab57156115045761166f906132e0565b611617578338611504565b6040516312f1f92360e01b8152600490fd5b50808454163314156114e9565b604051600162fc891960e01b03198152600490fd5b83875416803314159081611709575b50156114d457338752600260205282604088205416159081156116f8575b506116e657386114d4565b604051630b094f2760e31b8152600490fd5b8752506040862054821615386116db565b9050811415386116bd565b604051635e01436760e11b8152600490fd5b50346103aa57806003193601126103aa57602090604051908152f35b50346103aa57806003193601126103aa57611762600a54600b5490613567565b421015610fc55780f35b50346103aa5760203660031901126103aa5760209060ff906040906001600160a01b03611797613265565b168152600284522054166040519015158152f35b50346103aa5760403660031901126103aa5760206117d86117ca613265565b6117d2613280565b90613574565b6040519015158152f35b50346103aa57806003193601126103aa576020600854604051908152f35b50346103aa57806003193601126103aa5760206040517f14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b8152f35b50346103aa57806003193601126103aa5760405160008051602061460c833981519152805482600061186c836133ca565b92838352602094600191866001821691826000146118fa5750506001146118b0575b505061189c9250038361330e565b611469604051928284938452830190613240565b8592506000526000805160206146cc833981519152906000915b8583106118e257505061189c9350820101858061188e565b805483890185015287945086939092019181016118ca565b925093505061189c94915060ff191682840152151560051b820101858061188e565b50346103aa5760403660031901126103aa576040611938613280565b91600435815260008051602061468c833981519152602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346103aa57806003193601126103aa5761198e61369e565b60035460ff8160081c166119d6576101009061ff001916176003557fb3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e9236020604051428152a180f35b60405162461bcd60e51b815260206004820152601760248201527f54726164696e6720616c726561647920656e61626c65640000000000000000006044820152606490fd5b50346103aa57806003193601126103aa577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580611b50575b15611b1357611a62613404565b90611a6b6134ca565b906040519060209060208301938385106001600160401b0386111761127d579284926020611ac98896611abb98604052858552604051988998600f60f81b8a5260e0858b015260e08a0190613240565b9088820360408a0152613240565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110611afc57505050500390f35b835185528695509381019392810192600101611aed565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415611a55565b50346103aa57806003193601126103aa57611b92613767565b60008051602061472c8339815191529081815260008051602061468c8339815191529160208381526040832033600052815260ff80604060002054168015611def575b8015611dc3575b15611d7e57611ca49394604051611bf2816132f3565b60078152662aa725a727aba760c91b84820152938652808352604086203360005283528160406000205416600014611cd15750509050604051611c34816132f3565b600581526420a226a4a760d91b82820152905b611c4f613767565b6000805160206146ac833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25881604051338152a16040519282848094519384920161321d565b8101039020337fa45b854309f0bbcd0b5fe966bcc16c83a563411377ca9b86644a9aff98723a138380a380f35b6000805160206145cc8339815191528652808352604086203360005283528160406000205416600014611d235750509050604051611d0e816132f3565b60038152621093d560ea1b8282015290611c47565b60008051602061464c83398151915286528252604085203360005282526040600020541615611c47579050604051611d5a816132f3565b601281527122a6a2a923a2a721acafa3aaa0a92224a0a760711b8282015290611c47565b60405162461bcd60e51b815260048101839052601c60248201527f43616c6c6572206d75737420686176652070617573657220726f6c65000000006044820152606490fd5b5060008051602061464c8339815191528452848252604084203360005282528060406000205416611bdc565b506000805160206145cc8339815191528452848252604084203360005282528060406000205416611bd5565b50346103aa57806003193601126103aa576004546040516001600160a01b039091168152602090f35b50346103aa5760203660031901126103aa57611e5e613265565b611e6661369e565b6001600160a01b03908116908115610d5b5782546001600160a01b0319811683178455167f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a8380a380f35b50346103aa5760203660031901126103aa576020906040906001600160a01b03611ed9613265565b1681527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0083522054604051908152f35b50346103aa5760208060031936011261161b57600435826060604051611f2e816132c5565b8281528285820152826040820152015280835260078252604083205415611fb2578260409160809452600783522060405190611f69826132c5565b8054928383526001820154818401908152606060ff6003600286015495604088019687520154169401931515845260405194855251908401525160408301525115156060820152f35b604051632402054b60e11b8152600490fd5b50346103aa57806003193601126103aa5760206040517f2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a8688152f35b50346103aa5760203660031901126103aa576020906040906001600160a01b03612027613265565b1681527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0083522054604051908152f35b50346103aa57806003193601126103aa5760206040517f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f8152f35b50346103aa5760403660031901126103aa576004356024356120b261369e565b81835260056020526040832054156121775781835260056020526120dd604084205460065490613567565b4211612165578160405160208101908382523360601b60408201524260548201526054815261210b816132c5565b519020036121535760407f81d0016ae442431196752190c857dddddebf8d309ed0b095312600407b3b3f4391838552600560205284828120558151908152426020820152a280f35b60405163b7b3378760e01b8152600490fd5b604051631e3cccf560e31b8152600490fd5b60405163345512df60e21b8152600490fd5b50346103aa57806003193601126103aa57546040516001600160a01b039091168152602090f35b50346103aa5760203660031901126103aa576001600160401b036004358181116115b657366023820112156115b65780600401359182116115b65736602483830101116115b6577ff0ca201a259f21761e7392673b3e9269933e13069f2081af411cb4079825f842906122216136d8565b600160ff19600954161760095542600a55826024604051926020845282602085015201604083013783604084830101526040813394601f80199101168101030190a280f35b50346103aa5760203660031901126103aa57610fa8612283613265565b61228b61369e565b613fe3565b50346103aa57806003193601126103aa57602060ff6000805160206146ac83398151915254166040519015158152f35b50346103aa57806003193601126103aa57602060405160128152f35b50346103aa57806003193601126103aa577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036123475760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b50346103aa57806003193601126103aa5761237261369e565b7fa120777524474df4e22abe93a0b3dccb74b3093cdbb842f4f6e32d2bf0ce63bc602060035460ff80821615168060ff198316176003558460405192161715158152a180f35b50346103aa57806003193601126103aa57602060ff600954166040519015158152f35b5060403660031901126103aa576123f0613265565b60249182356001600160401b03811161161b573660238201121561161b57806004013561241c8161332f565b9361242a604051958661330e565b818552602091828601933688838301011161269357818692898693018737870101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115612665575b50612347577f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38060005260008051602061468c8339815191528452604060002033600052845260ff604060002054161561264857508116946040516352d1902d60e01b815283816004818a5afa869181612615575b5061251457604051634c9c8ce360e01b8152600481018890528890fd5b8690887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036126005750843b156125ea575080546001600160a01b031916821790556040518692917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28151156125cc5750610fa89482915190845af4903d156125c3573d6125a78161332f565b906125b5604051928361330e565b81528581943d92013e614508565b60609250614508565b945050505050346125db575080f35b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101849052fd5b60405190632a87526960e21b82526004820152fd5b9091508481813d8311612641575b61262d818361330e565b8101031261263d575190386124f7565b8680fd5b503d612623565b876044916040519163e2517d3f60e01b8352336004840152820152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141538612482565b8580fd5b50346103aa57806003193601126103aa57602060ff60035460081c166040519015158152f35b50346103aa5760203660031901126103aa5760406020916004358152600583522054604051908152f35b50346103aa57806003193601126103aa57602060ff600354166040519015158152f35b50346103aa57806003193601126103aa57602060405160008051602061472c8339815191528152f35b50346103aa57806003193601126103aa5761274c61410e565b60008051602061472c833981519152815260008051602061468c8339815191526020908082526040832033600052825260ff60406000205416908115612847575b5015612803577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906127bd61410e565b6000805160206146ac833981519152805460ff19169055604051338152a1337f5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d117668280a280f35b6064906040519062461bcd60e51b82526004820152601e60248201527f43616c6c6572206d757374206861766520756e70617573657220726f6c6500006044820152fd5b90507f14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b835281526040822033600052815260ff604060002054163861278d565b50346103aa5760203660031901126103aa57604060209160043581526007835220541515604051908152f35b50346103aa5760403660031901126103aa576128cd613280565b336001600160a01b038216036128e957610fa89060043561408b565b60405163334bd91960e11b8152600490fd5b50346103aa57806003193601126103aa5760206129166142a0565b604051908152f35b50346103aa57806003193601126103aa5760206040517f940d6b1946ff1d2b5a9f1909219c3c81a370804b5ba0f91ec0828c99a2e6a6818152f35b50346103aa57806003193601126103aa5760206040516b033b2e3c9fd0803ce80000008152f35b50346103aa57806003193601126103aa576020600b54604051908152f35b50346103aa5760403660031901126103aa57610fa86004356129be613280565b9080845260008051602061468c8339815191526020526129e46001604086200154613734565b613f6e565b50346103aa57806003193601126103aa57611469612a05613370565b604051918291602083526020830190613240565b50346103aa5760203660031901126103aa5760016040602092600435815260008051602061468c8339815191528452200154604051908152f35b50346103aa5760603660031901126103aa57612a6d613265565b90612a76613280565b9160443590612a83613767565b60018060a01b0393848216948585526020956001875260ff806040882054166117145782841680885260018952816040892054166117145760035490828216612d23575b5081600954166116995760081c161580612d16575b61167a57612ae8613792565b8160035460101c1680612cba575b50816004541680612c47575b50612b0c84613391565b336000528752604060002054906000198210612bbe575b5050612b30848385614198565b600454169182612b57575b8560016000805160206146ec8339815191525560405160018152f35b823b156112ab57604051637a48316560e11b81526001600160a01b03918216600482015291166024820152604481019290925282908290606490829084905af180156115ab57612baa575b808080612b3b565b612bb482916132e0565b6103aa5780612ba2565b858210612c215715612c08573315612bef578490612bdb85613391565b336000528852036040600020553880612b23565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810183905260448101879052606490fd5b803b1561263d57604051631ffb811f60e01b81526001600160a01b03868116600483015285166024820152604481018790529087908290606490829084905af18015612caf57908791612c9b575b50612b02565b612ca4906132e0565b612693578538612c95565b6040513d89823e3d90fd5b803b1561263d5760405163cc1dd94f60e01b81526001600160a01b0386811660048301528516602482015260448101879052908790829060649082905afa8015612caf5715612af657612d0f909691966132e0565b9438612af6565b5081865416331415612adc565b84895416808514159081612d6b575b5015612ac75783895260028a528260408a20541615908115612d5a575b506116e65738612ac7565b895250604088205482161538612d4f565b905081141538612d32565b50346103aa5760203660031901126103aa57600435612d9361369e565b8082526005602052426040832055604051904282527f93d98c19d9f85a53622c68b13046669ab48048057324f5300a2ce8692bb7719160203393a380f35b50346103aa57806003193601126103aa57611469612a0561334a565b50346103aa57806003193601126103aa5760206040517f4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d9171618152f35b50346103aa57806003193601126103aa5760207f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254604051908152f35b50346103aa57806003193601126103aa5760035460405160109190911c6001600160a01b03168152602090f35b50346103aa57806003193601126103aa576020600a54604051908152f35b50346103aa57806003193601126103aa577f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f9081815260209160008051602061468c833981519152835260408220338352835260ff6040832054161561140557506008546000198114612fdd57907f4c5620b7fb811e045f023b50b0c5fa3a4a14a640655c04bfb8530b58e779f90060016040930192839283600855612fc97f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02916003888454865193612f82856132c5565b898552878386019142835281870193845260076060880195600187528d835252209451855551600185015551600284015551151591019060ff801983541691151516179055565b5481519042825286820152a2604051908152f35b634e487b7160e01b82526011600452602482fd5b50346103aa5761300036613296565b907f2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a86880845260008051602061468c8339815191526020526040842033855260205260ff6040852054161561140557506001600160a01b03168083526002602090815260408420805460ff191660ff8515151617905590917ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d91906113f9565b50346103aa57806003193601126103aa5760206040516000805160206145cc8339815191528152f35b50346103aa5760403660031901126103aa576130ef6130e5613265565b602435903361413a565b602060405160018152f35b50346103aa57806003193601126103aa576040519080826000805160206145ac83398151915292835461312c816133ca565b93848452602095600192876001821691826000146131a457505060011461315d575b50505061189c9250038361330e565b81528592509060008051602061458c8339815191525b85831061318c57505061189c935082010138808061314e565b80548389018501528794508693909201918101613173565b93509450505061189c94915060ff191682840152151560051b82010138808061314e565b90503461161b57602036600319011261161b5760043563ffffffff60e01b81168091036115b65760209250637965db0b60e01b811490811561320c575b5015158152f35b6301ffc9a760e01b14905038613205565b60005b8381106132305750506000910152565b8181015183820152602001613220565b906020916132598151809281855285808601910161321d565b601f01601f1916010190565b600435906001600160a01b038216820361327b57565b600080fd5b602435906001600160a01b038216820361327b57565b604090600319011261327b576004356001600160a01b038116810361327b5790602435801515810361327b5790565b608081019081106001600160401b0382111761127d57604052565b6001600160401b03811161127d57604052565b604081019081106001600160401b0382111761127d57604052565b90601f801991011681019081106001600160401b0382111761127d57604052565b6001600160401b03811161127d57601f01601f191660200190565b60405190613357826132f3565b600a8252692722a120902a37b5b2b760b11b6020830152565b6040519061337d826132f3565b6005825264244e45424160d81b6020830152565b6001600160a01b031660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b90600182811c921680156133fa575b60208310146133e457565b634e487b7160e01b600052602260045260246000fd5b91607f16916133d9565b604051906000826000805160206145ec83398151915291825492613427846133ca565b808452936020916001918281169081156134a45750600114613455575b5050506134539250038361330e565b565b600090815260008051602061466c8339815191529590935091905b82841061348c5750613453945050508101602001388080613444565b85548885018301529485019487945092810192613470565b925050506020925061345394915060ff191682840152151560051b820101388080613444565b6040519060008260008051602061462c833981519152918254926134ed846133ca565b808452936020916001918281169081156134a45750600114613518575050506134539250038361330e565b600090815260008051602061474c8339815191529590935091905b82841061354f5750613453945050508101602001388080613444565b85548885018301529485019487945092810192613533565b919082018092116108a157565b906003549160ff90818460081c161580613686575b8061366e575b61366557816000805160206146ac8339815191525416613665576001600160a01b0390811660008181526001602052604081205490959084168015613653575b61364b57836009541661364b5783166135ed575b5050505050600190565b8185541680821490811561363f575b506135e35784526002602052816040852054161592831561362b575b50505061362857808080806135e3565b90565b168352604083205416159050388080613618565b905082851614386135fc565b505050505090565b508285168652836040872054166135cf565b50505050600090565b506000546001600160a01b038481169116141561358f565b506000546001600160a01b0382811691161415613589565b3360009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604081205460ff16156114055750565b3360009081527f4d7367b4c45c93361c07a01249cc1ef90933a8773f26df2dabd0fb4074504d1160205260409020547f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654929060ff16156114055750565b8060005260008051602061468c83398151915260205260406000203360005260205260ff60406000205416156114055750565b60ff6000805160206146ac833981519152541661378057565b60405163d93c066560e01b8152600490fd5b6000805160206146ec83398151915260028154146137b05760029055565b604051633ee5aeb560e01b8152600490fd5b6001600160a01b031660008181527f0a6a8216e7a1d89d05570786ef50d05ab98f2cf7598c06f1ec4437ec2040c4a9602052604081205490919060008051602061464c8339815191529060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b50505090565b6001600160a01b031660008181527f95dda6c6f31ea0c92078aaca3a510dc395bc467e87b1d2be7f9e24c15aaff99a60205260408120549091906000805160206145cc8339815191529060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fc107dca26644af9dc6feac68c9de2cb2ec979e3c35b7e6ee33925bc125da9c7660205260408120549091907f14a3858bcad155f4a363abcc3a27999d5c7e0bb4edeaf632f13b237dcefb630b9060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604081205490919060008051602061468c8339815191529060ff16613a2b578280526020526040822081835260205260408220600160ff19825416179055339160008051602061456c8339815191528180a4600190565b505090565b6001600160a01b031660008181527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a860205260408120549091907f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e39060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fd17a96b5ab97baeb5abd2aff3d879f3ae21bdf0a88374ff422ddd156525d2a07602052604081205490919060008051602061472c8339815191529060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f784cd7277279da66f514c343def5ae4d754633326a69df9e3246cf541f59dae660205260408120549091907f4c6fe25f3a39278aefc6c9ccdf3bce8dfd53184196650cdcdbb6fe4b1d9171619060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fc726c2b4c97955c111bebcf26d23050c057419036fd6b131fd840def3e37a8b060205260408120549091907f2a3dab589bcc9747970dd85ac3f222668741ae51f2a1bbb8f8355be28dd8a8689060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f4d7367b4c45c93361c07a01249cc1ef90933a8773f26df2dabd0fb4074504d1160205260408120549091907f7e6b58bc1470e1fc07bc9b21e0435be41fdc30ede9591781476a8d169a2654929060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fb6061ee728d91d026c497d6fc1fd4c6e962c3b781d406ba2f82db1094fd3c7bc60205260408120549091907f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f9060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f3978316b9e18641362396a82e770f244695fb3fa52ae062231283c763a3660ac60205260408120549091907fe9dc316fa34ae880f78d85d5ce397feb0c9fbe2fc8ebf721a7d1646cabaf7f8c9060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527fe0d12f91347694d97c9cb47d2ffc7e6f53fab026501949ab958be692b40ec6d160205260408120549091907f940d6b1946ff1d2b5a9f1909219c3c81a370804b5ba0f91ec0828c99a2e6a6819060008051602061468c8339815191529060ff1661385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b9060009180835260008051602061468c83398151915280602052604084209260018060a01b03169283855260205260ff6040852054161560001461385a578184526020526040832082845260205260408320600160ff1982541617905560008051602061456c833981519152339380a4600190565b6001600160a01b031660008181527f95dda6c6f31ea0c92078aaca3a510dc395bc467e87b1d2be7f9e24c15aaff99a60205260408120549091906000805160206145cc8339815191529060008051602061468c8339815191529060ff161561385a57818452602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9060009180835260008051602061468c83398151915280602052604084209260018060a01b03169283855260205260ff60408520541660001461385a57818452602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b60ff6000805160206146ac83398151915254161561412857565b604051638dfc202b60e01b8152600490fd5b916001600160a01b03808416928315612c085716928315612bef577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591614182602092613391565b85600052825280604060002055604051908152a3565b916001600160a01b03808416928315614287571692831561426e576141bb613767565b6000908382527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace008060205260408320549184831061423b575082847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef959360409388602097528652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6142a8614459565b6142b06144c3565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081018181106001600160401b0382111761127d5760405251902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161439957926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561438d5780516001600160a01b0381161561438457918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600481101561441457806143b7575050565b600181036143d15760405163f645eedf60e01b8152600490fd5b600281036143f25760405163fce698f760e01b815260048101839052602490fd5b6003146143fc5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b60ff60008051602061470c8339815191525460401c161561444757565b604051631afcd79f60e31b8152600490fd5b614461613404565b8051908115614471576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10054801561449e5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b6144cb6134ca565b80519081156144db576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154801561449e5790565b9061452f575080511561451d57602081519101fd5b60405163d6bda27560e01b8152600490fd5b81511580614562575b614540575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561453856fe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03bf8b034af7a434c44d9299a66a1071085478bb9a7fdc1f0ebcb5d36dc76f02b2a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10252c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10393a9ea60add98726fcd12f31bd91d98faf4378bac52abb4f48e807756ced77a142ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330046a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00365fccb66c62533ad1447fec73f7b764cf03ac69d512070f7c0aa889025cec195f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75a2646970667358221220429071d27fec423448a4ab3db53220edd295603c80ed5da9e295a9d923f49fc064736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x31C8 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x30FA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x30C8 JUMPI DUP1 PUSH4 0xB06806A EQ PUSH2 0x309F JUMPI DUP1 PUSH4 0xD392CD9 EQ PUSH2 0x2FF1 JUMPI DUP1 PUSH4 0x1504D8F0 EQ PUSH2 0x2EB0 JUMPI DUP1 PUSH4 0x15926257 EQ PUSH2 0x2E92 JUMPI DUP1 PUSH4 0x16EFD941 EQ PUSH2 0x2E65 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E28 JUMPI DUP1 PUSH4 0x1872223F EQ PUSH2 0x2DED JUMPI DUP1 PUSH4 0x18821400 EQ PUSH2 0x2DD1 JUMPI DUP1 PUSH4 0x1FC4B857 EQ PUSH2 0x2D76 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A53 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2A19 JUMPI DUP1 PUSH4 0x2A905318 EQ PUSH2 0x29E9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x299E JUMPI DUP1 PUSH4 0x2FBF02D4 EQ PUSH2 0x2980 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22C0 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2959 JUMPI DUP1 PUSH4 0x349B5954 EQ PUSH2 0x291E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x28FB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28B3 JUMPI DUP1 PUSH4 0x3DB11D6A EQ PUSH2 0x2887 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2733 JUMPI DUP1 PUSH4 0x42275C59 EQ PUSH2 0x270A JUMPI DUP1 PUSH4 0x45CB1258 EQ PUSH2 0x26E7 JUMPI DUP1 PUSH4 0x47885781 EQ PUSH2 0x26BD JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x2697 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x23DB JUMPI DUP1 PUSH4 0x51108CAC EQ PUSH2 0x23B8 JUMPI DUP1 PUSH4 0x512FEDE1 EQ PUSH2 0x2359 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x22DC JUMPI DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x22C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2290 JUMPI DUP1 PUSH4 0x5D75B889 EQ PUSH2 0x2266 JUMPI DUP1 PUSH4 0x61B242C5 EQ PUSH2 0x21B0 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2189 JUMPI DUP1 PUSH4 0x6D1FA35B EQ PUSH2 0x2092 JUMPI DUP1 PUSH4 0x7028E2CD EQ PUSH2 0x2057 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FFF JUMPI DUP1 PUSH4 0x7295ED93 EQ PUSH2 0x1FC4 JUMPI DUP1 PUSH4 0x76F10AD0 EQ PUSH2 0x1F09 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1EB1 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x1E44 JUMPI DUP1 PUSH4 0x82BC7BC9 EQ PUSH2 0x1E1B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1B79 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1A1B JUMPI DUP1 PUSH4 0x8A5D4869 EQ PUSH2 0x17E2 JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x1975 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x191C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x183B JUMPI DUP1 PUSH4 0x9632874B EQ PUSH2 0x1800 JUMPI DUP1 PUSH4 0x970875CE EQ PUSH2 0x17E2 JUMPI DUP1 PUSH4 0x97E2B9AF EQ PUSH2 0x17AB JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x176C JUMPI DUP1 PUSH4 0xA1BDBA44 EQ PUSH2 0x1742 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1726 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x146D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1423 JUMPI DUP1 PUSH4 0xB45A1EB5 EQ PUSH2 0x1341 JUMPI DUP1 PUSH4 0xB60095A5 EQ PUSH2 0x1323 JUMPI DUP1 PUSH4 0xB941D774 EQ PUSH2 0x12E9 JUMPI DUP1 PUSH4 0xC1D6CB4F EQ PUSH2 0x12AF JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x111C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x10D1 JUMPI DUP1 PUSH4 0xD6565A2D EQ PUSH2 0x107F JUMPI DUP1 PUSH4 0xDC62CAF5 EQ PUSH2 0x1044 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xFFA JUMPI DUP1 PUSH4 0xDE5F8D93 EQ PUSH2 0xFAC JUMPI DUP1 PUSH4 0xDF8BCAC7 EQ PUSH2 0xF6E JUMPI DUP1 PUSH4 0xE1EB7399 EQ PUSH2 0xEEE JUMPI DUP1 PUSH4 0xE4D1155E EQ PUSH2 0xE83 JUMPI DUP1 PUSH4 0xE54E55AE EQ PUSH2 0xE48 JUMPI DUP1 PUSH4 0xE5C7160B EQ PUSH2 0xE09 JUMPI DUP1 PUSH4 0xEA4B7DCD EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0xEB990C59 EQ PUSH2 0x3AD JUMPI PUSH4 0xF72C0D8B EQ PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x3C7 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xDD0 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xDC6 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xDBD JUMPI JUMPDEST POP PUSH2 0xDAB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP4 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO PUSH2 0xD7E JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO PUSH2 0xD6D JUMPI JUMPDEST PUSH2 0xD5B JUMPI PUSH2 0x453 PUSH2 0x334A JUMP JUMPDEST PUSH2 0x45B PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH2 0x464 PUSH2 0x442A JUMP JUMPDEST PUSH2 0x46C PUSH2 0x442A JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xB10 JUMPI DUP2 SWAP1 PUSH2 0x497 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCDC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC4C JUMPI DUP9 SWAP3 PUSH2 0xC41 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x9E2 JUMPI DUP2 SWAP1 PUSH2 0x504 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBBF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB2F JUMPI DUP8 SWAP3 PUSH2 0xB24 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0x54E PUSH2 0x442A JUMP JUMPDEST PUSH2 0x556 PUSH2 0x442A JUMP JUMPDEST PUSH2 0x55E PUSH2 0x334A JUMP JUMPDEST PUSH2 0x566 PUSH2 0x442A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x573 DUP3 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x589 PUSH2 0x442A JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xB10 JUMPI DUP2 SWAP1 PUSH2 0x5B4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA91 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xA01 JUMPI DUP9 SWAP3 PUSH2 0x9F6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x9E2 JUMPI PUSH2 0x61F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x96A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DB JUMPI PUSH2 0x752 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 DUP4 PUSH2 0x8D0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP5 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SSTORE DUP5 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SSTORE PUSH2 0x6B6 PUSH2 0x442A JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x442A JUMP JUMPDEST PUSH2 0x6C6 PUSH2 0x442A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR DUP6 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xB SSTORE PUSH2 0x706 DUP2 PUSH2 0x39A2 JUMP JUMPDEST POP PUSH2 0x710 DUP2 PUSH2 0x3A30 JUMP JUMPDEST POP PUSH2 0x71A DUP2 PUSH2 0x3ADA JUMP JUMPDEST POP PUSH2 0x724 DUP2 PUSH2 0x3B72 JUMP JUMPDEST POP PUSH2 0x72E DUP2 PUSH2 0x3C1C JUMP JUMPDEST POP PUSH2 0x738 DUP2 PUSH2 0x3CC6 JUMP JUMPDEST POP PUSH2 0x742 DUP2 PUSH2 0x3D70 JUMP JUMPDEST POP PUSH2 0x74C DUP2 PUSH2 0x3E1A JUMP JUMPDEST POP PUSH2 0x3EC4 JUMP JUMPDEST POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x8B7 JUMPI PUSH2 0x76D PUSH2 0x3767 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SWAP2 DUP3 SLOAD PUSH12 0x33B2E3C9FD0803CE8000000 SWAP1 DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8A1 JUMPI PUSH1 0x20 DUP8 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0xFF SWAP8 SSTORE DUP5 DUP5 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A DUP2 DUP1 LOG3 PUSH1 0x40 SHR AND ISZERO PUSH2 0x849 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x952 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x752 SWAP8 SWAP7 SWAP5 LT PUSH2 0x939 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x668 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x91E JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x904 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP5 LT PUSH2 0x9CC JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x9C1 JUMPI POP PUSH2 0x628 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x99C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP9 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xA76 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xA5D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x5F6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xA42 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xAFB JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xAED JUMPI POP PUSH2 0x5BD JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xACA JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAC5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x523 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP8 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xBA4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB8B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x546 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xB70 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB55 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP5 LT PUSH2 0xC2B JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xC1D JUMPI POP PUSH2 0x50D JUMP JUMPDEST DUP9 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0xBF4 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP9 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xCC1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xCA8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x4D9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xC8D JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xC72 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xD46 JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xD38 JUMPI POP PUSH2 0x4A0 JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xD15 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x447 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP3 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x405 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 DUP5 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x3F3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE34 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xE9D PUSH2 0x3265 JUMP JUMPDEST PUSH2 0xEA5 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0xC370610A8C5F2DAECDB3A2566E9A30F7969DC29704BF228FCC9A1A64CCD67138 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xF08 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x36D8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP2 AND PUSH1 0x10 DUP5 DUP2 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP2 SHR AND PUSH32 0xAD6EDE2BAB15D4CC29F9AA4E11F38E7BFFE6FE0296E8928492A62D29A8AB11D6 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xF88 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD5B JUMPI PUSH2 0xFA8 SWAP1 PUSH2 0x38F8 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFC5 PUSH2 0x36D8 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH32 0x749CE304AB81145BE90B787A7777D030C801B4CFD19E6B30DF21973A54EC004C DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1014 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x1025 PUSH2 0x101F PUSH2 0x3280 JUMP JUMPDEST SWAP2 PUSH2 0x3391 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xE9DC316FA34AE880F78D85D5CE397FEB0C9FBE2FC8EBF721A7D1646CABAF7F8C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFA8 PUSH1 0x4 CALLDATALOAD PUSH2 0x10F1 PUSH2 0x3280 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1117 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x3734 JUMP JUMPDEST PUSH2 0x408B JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1136 PUSH2 0x3265 JUMP JUMPDEST SWAP1 PUSH2 0x113F PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0xFF DUP7 AND DUP7 SUB PUSH2 0x12AB JUMPI DUP1 TIMESTAMP GT PUSH2 0x1293 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP7 DUP8 DUP8 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP11 PUSH1 0x40 DUP7 ADD MSTORE DUP6 DUP9 AND PUSH1 0x60 DUP7 ADD MSTORE DUP9 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x127D JUMPI PUSH2 0x1248 SWAP4 PUSH2 0x123F SWAP4 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x1218 PUSH2 0x42A0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x4315 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x43A5 JUMP JUMPDEST AND DUP6 DUP2 SUB PUSH2 0x125F JUMPI POP PUSH2 0x125C SWAP4 SWAP5 POP PUSH2 0x413A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 DUP7 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x12C9 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x12D1 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD5B JUMPI PUSH2 0xFA8 SWAP1 PUSH2 0x3860 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1303 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x130B PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD5B JUMPI PUSH2 0xFA8 SWAP1 PUSH2 0x37C2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH2 0x1350 CALLDATASIZE PUSH2 0x3296 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x784CD7277279DA66F514C343DEF5AE4D754633326A69DF9E3246CF541F59DAE6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x4C6FE25F3A39278AEFC6C9CCDF3BCE8DFD53184196650CDCDBB6FE4B1D917161 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1405 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP6 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP1 SWAP2 PUSH32 0x2DF5E71BACF8A1A1D232AD715B36AE4617B1F75E7C6283373A54C96556CAE754 SWAP2 SWAP1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1469 PUSH1 0x40 MLOAD PUSH2 0x1443 DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1487 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1492 PUSH2 0x3767 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1714 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 DUP3 AND PUSH2 0x1714 JUMPI PUSH1 0x3 SLOAD SWAP1 DUP3 DUP3 AND PUSH2 0x16AE JUMPI JUMPDEST POP DUP2 PUSH1 0x9 SLOAD AND PUSH2 0x1699 JUMPI PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x168C JUMPI JUMPDEST PUSH2 0x167A JUMPI PUSH2 0x14F5 PUSH2 0x3792 JUMP JUMPDEST DUP4 DUP2 PUSH1 0x3 SLOAD PUSH1 0x10 SHR AND DUP1 PUSH2 0x161F JUMPI JUMPDEST POP DUP2 PUSH1 0x4 SLOAD AND DUP1 PUSH2 0x15BA JUMPI JUMPDEST POP POP PUSH2 0x151D DUP3 DUP5 CALLER PUSH2 0x4198 JUMP JUMPDEST PUSH1 0x4 SLOAD AND SWAP1 DUP2 PUSH2 0x1545 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP2 DUP5 SWAP3 EXTCODESIZE ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A483165 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x1597 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x15A1 DUP3 SWAP2 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x3AA JUMPI DUP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1FFB811F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x15AB JUMPI ISZERO PUSH2 0x1510 JUMPI PUSH2 0x160C SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x1617 JUMPI DUP4 CODESIZE PUSH2 0x1510 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD PUSH4 0xCC1DD94F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x15AB JUMPI ISZERO PUSH2 0x1504 JUMPI PUSH2 0x166F SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x1617 JUMPI DUP4 CODESIZE PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12F1F923 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP1 DUP5 SLOAD AND CALLER EQ ISZERO PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0xFC8919 PUSH1 0xE0 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP4 DUP8 SLOAD AND DUP1 CALLER EQ ISZERO SWAP1 DUP2 PUSH2 0x1709 JUMPI JUMPDEST POP ISZERO PUSH2 0x14D4 JUMPI CALLER DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO SWAP1 DUP2 ISZERO PUSH2 0x16F8 JUMPI JUMPDEST POP PUSH2 0x16E6 JUMPI CODESIZE PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB094F27 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP8 MSTORE POP PUSH1 0x40 DUP7 KECCAK256 SLOAD DUP3 AND ISZERO CODESIZE PUSH2 0x16DB JUMP JUMPDEST SWAP1 POP DUP2 EQ ISZERO CODESIZE PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E014367 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1762 PUSH1 0xA SLOAD PUSH1 0xB SLOAD SWAP1 PUSH2 0x3567 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xFC5 JUMPI DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1797 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH2 0x17D8 PUSH2 0x17CA PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x17D2 PUSH2 0x3280 JUMP JUMPDEST SWAP1 PUSH2 0x3574 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x14A3858BCAD155F4A363ABCC3A27999D5C7E0BB4EDEAF632F13B237DCEFB630B DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x460C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x186C DUP4 PUSH2 0x33CA JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x18FA JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x18B0 JUMPI JUMPDEST POP POP PUSH2 0x189C SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST PUSH2 0x1469 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x18E2 JUMPI POP POP PUSH2 0x189C SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x188E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x189C SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x188E JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH2 0x1938 PUSH2 0x3280 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x198E PUSH2 0x369E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x19D6 JUMPI PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x3 SSTORE PUSH32 0xB3DA2DB3DFC3778F99852546C6E9AB39EC253F9DE7B0847AFEC61BD27878E923 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C726561647920656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD ISZERO DUP1 PUSH2 0x1B50 JUMPI JUMPDEST ISZERO PUSH2 0x1B13 JUMPI PUSH2 0x1A62 PUSH2 0x3404 JUMP JUMPDEST SWAP1 PUSH2 0x1A6B PUSH2 0x34CA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0x127D JUMPI SWAP3 DUP5 SWAP3 PUSH1 0x20 PUSH2 0x1AC9 DUP9 SWAP7 PUSH2 0x1ABB SWAP9 PUSH1 0x40 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xF PUSH1 0xF8 SHL DUP11 MSTORE PUSH1 0xE0 DUP6 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x3240 JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AFC JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD ISZERO PUSH2 0x1A55 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1B92 PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1DEF JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1DC3 JUMPI JUMPDEST ISZERO PUSH2 0x1D7E JUMPI PUSH2 0x1CA4 SWAP4 SWAP5 PUSH1 0x40 MLOAD PUSH2 0x1BF2 DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x2AA725A727ABA7 PUSH1 0xC9 SHL DUP5 DUP3 ADD MSTORE SWAP4 DUP7 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1CD1 JUMPI POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x1C34 DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x20A226A4A7 PUSH1 0xD9 SHL DUP3 DUP3 ADD MSTORE SWAP1 JUMPDEST PUSH2 0x1C4F PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 DUP2 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x321D JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 CALLER PUSH32 0xA45B854309F0BBCD0B5FE966BCC16C83A563411377CA9B86644A9AFF98723A13 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1D23 JUMPI POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x1D0E DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH3 0x1093D5 PUSH1 0xEA SHL DUP3 DUP3 ADD MSTORE SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1C47 JUMPI SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x1D5A DUP2 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH18 0x22A6A2A923A2A721ACAFA3AAA0A92224A0A7 PUSH1 0x71 SHL DUP3 DUP3 ADD MSTORE SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D75737420686176652070617573657220726F6C6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE DUP5 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1BDC JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE DUP5 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1BD5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1E5E PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x1E66 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD5B JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1ED9 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x161B JUMPI PUSH1 0x4 CALLDATALOAD DUP3 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x1F2E DUP2 PUSH2 0x32C5 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE DUP1 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH2 0x1FB2 JUMPI DUP3 PUSH1 0x40 SWAP2 PUSH1 0x80 SWAP5 MSTORE PUSH1 0x7 DUP4 MSTORE KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F69 DUP3 PUSH2 0x32C5 JUMP JUMPDEST DUP1 SLOAD SWAP3 DUP4 DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP7 ADD SLOAD SWAP6 PUSH1 0x40 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP5 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP1 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2402054B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x2A3DAB589BCC9747970DD85AC3F222668741AE51F2A1BBB8F8355BE28DD8A868 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2027 PUSH2 0x3265 JUMP JUMPDEST AND DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x5FDBD35E8DA83EE755D5E62A539E5ED7F47126ABEDE0B8B10F9EA43DC6EED07F DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x20B2 PUSH2 0x369E JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH2 0x2177 JUMPI DUP2 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x20DD PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0x6 SLOAD SWAP1 PUSH2 0x3567 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x2165 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP4 DUP3 MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x210B DUP2 PUSH2 0x32C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x2153 JUMPI PUSH1 0x40 PUSH32 0x81D0016AE442431196752190C857DDDDDEBF8D309ED0B095312600407B3B3F43 SWAP2 DUP4 DUP6 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP5 DUP3 DUP2 KECCAK256 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB7B33787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E3CCCF5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x345512DF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15B6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x15B6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x15B6 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x15B6 JUMPI PUSH32 0xF0CA201A259F21761E7392673B3E9269933E13069F2081AF411CB4079825F842 SWAP1 PUSH2 0x2221 PUSH2 0x36D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0xA SSTORE DUP3 PUSH1 0x24 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 MSTORE DUP3 PUSH1 0x20 DUP6 ADD MSTORE ADD PUSH1 0x40 DUP4 ADD CALLDATACOPY DUP4 PUSH1 0x40 DUP5 DUP4 ADD ADD MSTORE PUSH1 0x40 DUP2 CALLER SWAP5 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFA8 PUSH2 0x2283 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x228B PUSH2 0x369E JUMP JUMPDEST PUSH2 0x3FE3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x2347 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x2372 PUSH2 0x369E JUMP JUMPDEST PUSH32 0xA120777524474DF4E22ABE93A0B3DCCB74B3093CDBB842F4F6E32D2BF0CE63BC PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 PUSH1 0xFF NOT DUP4 AND OR PUSH1 0x3 SSTORE DUP5 PUSH1 0x40 MLOAD SWAP3 AND OR ISZERO ISZERO DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x23F0 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x161B JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x161B JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x241C DUP2 PUSH2 0x332F JUMP JUMPDEST SWAP4 PUSH2 0x242A PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x330E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP9 DUP4 DUP4 ADD ADD GT PUSH2 0x2693 JUMPI DUP2 DUP7 SWAP3 DUP10 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2665 JUMPI JUMPDEST POP PUSH2 0x2347 JUMPI PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2648 JUMPI POP DUP2 AND SWAP5 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL DUP7 SWAP2 DUP2 PUSH2 0x2615 JUMPI JUMPDEST POP PUSH2 0x2514 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP7 SWAP1 DUP9 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x2600 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x25EA JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP3 SWAP2 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP5 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x25CC JUMPI POP PUSH2 0xFA8 SWAP5 DUP3 SWAP2 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x25C3 JUMPI RETURNDATASIZE PUSH2 0x25A7 DUP2 PUSH2 0x332F JUMP JUMPDEST SWAP1 PUSH2 0x25B5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x330E JUMP JUMPDEST DUP2 MSTORE DUP6 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x4508 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x4508 JUMP JUMPDEST SWAP5 POP POP POP POP POP CALLVALUE PUSH2 0x25DB JUMPI POP DUP1 RETURN JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2641 JUMPI JUMPDEST PUSH2 0x262D DUP2 DUP4 PUSH2 0x330E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x263D JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x24F7 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2623 JUMP JUMPDEST DUP8 PUSH1 0x44 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO CODESIZE PUSH2 0x2482 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x274C PUSH2 0x410E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x2847 JUMPI JUMPDEST POP ISZERO PUSH2 0x2803 JUMPI PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH2 0x27BD PUSH2 0x410E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 CALLER PUSH32 0x5B65B0C1363B3003DB9BCC5E1FD8805A6D6BF5BF6DC9D3431EE4494CD7D11766 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206861766520756E70617573657220726F6C650000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH32 0x14A3858BCAD155F4A363ABCC3A27999D5C7E0BB4EDEAF632F13B237DCEFB630B DUP4 MSTORE DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE PUSH2 0x278D JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE KECCAK256 SLOAD ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x28CD PUSH2 0x3280 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x28E9 JUMPI PUSH2 0xFA8 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x408B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH2 0x2916 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x940D6B1946FF1D2B5A9F1909219C3C81A370804B5BA0F91EC0828C99A2E6A681 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0xFA8 PUSH1 0x4 CALLDATALOAD PUSH2 0x29BE PUSH2 0x3280 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x29E4 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x3734 JUMP JUMPDEST PUSH2 0x3F6E JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1469 PUSH2 0x2A05 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3240 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x2A6D PUSH2 0x3265 JUMP JUMPDEST SWAP1 PUSH2 0x2A76 PUSH2 0x3280 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x2A83 PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP3 AND SWAP5 DUP6 DUP6 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 DUP8 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 DUP9 KECCAK256 SLOAD AND PUSH2 0x1714 JUMPI DUP3 DUP5 AND DUP1 DUP9 MSTORE PUSH1 0x1 DUP10 MSTORE DUP2 PUSH1 0x40 DUP10 KECCAK256 SLOAD AND PUSH2 0x1714 JUMPI PUSH1 0x3 SLOAD SWAP1 DUP3 DUP3 AND PUSH2 0x2D23 JUMPI JUMPDEST POP DUP2 PUSH1 0x9 SLOAD AND PUSH2 0x1699 JUMPI PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x2D16 JUMPI JUMPDEST PUSH2 0x167A JUMPI PUSH2 0x2AE8 PUSH2 0x3792 JUMP JUMPDEST DUP2 PUSH1 0x3 SLOAD PUSH1 0x10 SHR AND DUP1 PUSH2 0x2CBA JUMPI JUMPDEST POP DUP2 PUSH1 0x4 SLOAD AND DUP1 PUSH2 0x2C47 JUMPI JUMPDEST POP PUSH2 0x2B0C DUP5 PUSH2 0x3391 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2BBE JUMPI JUMPDEST POP POP PUSH2 0x2B30 DUP5 DUP4 DUP6 PUSH2 0x4198 JUMP JUMPDEST PUSH1 0x4 SLOAD AND SWAP2 DUP3 PUSH2 0x2B57 JUMPI JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A483165 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x2BAA JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x2BB4 DUP3 SWAP2 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x3AA JUMPI DUP1 PUSH2 0x2BA2 JUMP JUMPDEST DUP6 DUP3 LT PUSH2 0x2C21 JUMPI ISZERO PUSH2 0x2C08 JUMPI CALLER ISZERO PUSH2 0x2BEF JUMPI DUP5 SWAP1 PUSH2 0x2BDB DUP6 PUSH2 0x3391 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE DUP9 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CODESIZE DUP1 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x263D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1FFB811F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2CAF JUMPI SWAP1 DUP8 SWAP2 PUSH2 0x2C9B JUMPI JUMPDEST POP PUSH2 0x2B02 JUMP JUMPDEST PUSH2 0x2CA4 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x2693 JUMPI DUP6 CODESIZE PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x263D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCC1DD94F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x2CAF JUMPI ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2D0F SWAP1 SWAP7 SWAP2 SWAP7 PUSH2 0x32E0 JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x2AF6 JUMP JUMPDEST POP DUP2 DUP7 SLOAD AND CALLER EQ ISZERO PUSH2 0x2ADC JUMP JUMPDEST DUP5 DUP10 SLOAD AND DUP1 DUP6 EQ ISZERO SWAP1 DUP2 PUSH2 0x2D6B JUMPI JUMPDEST POP ISZERO PUSH2 0x2AC7 JUMPI DUP4 DUP10 MSTORE PUSH1 0x2 DUP11 MSTORE DUP3 PUSH1 0x40 DUP11 KECCAK256 SLOAD AND ISZERO SWAP1 DUP2 ISZERO PUSH2 0x2D5A JUMPI JUMPDEST POP PUSH2 0x16E6 JUMPI CODESIZE PUSH2 0x2AC7 JUMP JUMPDEST DUP10 MSTORE POP PUSH1 0x40 DUP9 KECCAK256 SLOAD DUP3 AND ISZERO CODESIZE PUSH2 0x2D4F JUMP JUMPDEST SWAP1 POP DUP2 EQ ISZERO CODESIZE PUSH2 0x2D32 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2D93 PUSH2 0x369E JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP4 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH32 0x93D98C19D9F85A53622C68B13046669AB48048057324F5300A2CE8692BB77191 PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x1469 PUSH2 0x2A05 PUSH2 0x334A JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x4C6FE25F3A39278AEFC6C9CCDF3BCE8DFD53184196650CDCDBB6FE4B1D917161 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH32 0x5FDBD35E8DA83EE755D5E62A539E5ED7F47126ABEDE0B8B10F9EA43DC6EED07F SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1405 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2FDD JUMPI SWAP1 PUSH32 0x4C5620B7FB811E045F023B50B0C5FA3A4A14A640655C04BFB8530B58E779F900 PUSH1 0x1 PUSH1 0x40 SWAP4 ADD SWAP3 DUP4 SWAP3 DUP4 PUSH1 0x8 SSTORE PUSH2 0x2FC9 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SWAP2 PUSH1 0x3 DUP9 DUP5 SLOAD DUP7 MLOAD SWAP4 PUSH2 0x2F82 DUP6 PUSH2 0x32C5 JUMP JUMPDEST DUP10 DUP6 MSTORE DUP8 DUP4 DUP7 ADD SWAP2 TIMESTAMP DUP4 MSTORE DUP2 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x7 PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0x1 DUP8 MSTORE DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SLOAD DUP2 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE DUP7 DUP3 ADD MSTORE LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH2 0x3000 CALLDATASIZE PUSH2 0x3296 JUMP JUMPDEST SWAP1 PUSH32 0x2A3DAB589BCC9747970DD85AC3F222668741AE51F2A1BBB8F8355BE28DD8A868 DUP1 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x1405 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP6 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP1 SWAP2 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AA JUMPI PUSH2 0x30EF PUSH2 0x30E5 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x413A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP4 SLOAD PUSH2 0x312C DUP2 PUSH2 0x33CA JUMP JUMPDEST SWAP4 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 SWAP3 DUP8 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x31A4 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x315D JUMPI JUMPDEST POP POP POP PUSH2 0x189C SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST DUP2 MSTORE DUP6 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x458C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP6 DUP4 LT PUSH2 0x318C JUMPI POP POP PUSH2 0x189C SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x314E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x3173 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH2 0x189C SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x314E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x161B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161B JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x15B6 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x320C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3230 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3220 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3259 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x321D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x327B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x327B JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x327B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x327B JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x327B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x127D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3357 DUP3 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0xA DUP3 MSTORE PUSH10 0x2722A120902A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x337D DUP3 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x244E454241 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x33FA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x33E4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x33D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x3427 DUP5 PUSH2 0x33CA JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x34A4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3455 JUMPI JUMPDEST POP POP POP PUSH2 0x3453 SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x466C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x348C JUMPI POP PUSH2 0x3453 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x3444 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x3470 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x3453 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x3444 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x462C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x34ED DUP5 PUSH2 0x33CA JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x34A4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3518 JUMPI POP POP POP PUSH2 0x3453 SWAP3 POP SUB DUP4 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x474C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x354F JUMPI POP PUSH2 0x3453 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x3444 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x3533 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8A1 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 SLOAD SWAP2 PUSH1 0xFF SWAP1 DUP2 DUP5 PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x3686 JUMPI JUMPDEST DUP1 PUSH2 0x366E JUMPI JUMPDEST PUSH2 0x3665 JUMPI DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x3665 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP6 SWAP1 DUP5 AND DUP1 ISZERO PUSH2 0x3653 JUMPI JUMPDEST PUSH2 0x364B JUMPI DUP4 PUSH1 0x9 SLOAD AND PUSH2 0x364B JUMPI DUP4 AND PUSH2 0x35ED JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP6 SLOAD AND DUP1 DUP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x363F JUMPI JUMPDEST POP PUSH2 0x35E3 JUMPI DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO SWAP3 DUP4 ISZERO PUSH2 0x362B JUMPI JUMPDEST POP POP POP PUSH2 0x3628 JUMPI DUP1 DUP1 DUP1 DUP1 PUSH2 0x35E3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 AND EQ CODESIZE PUSH2 0x35FC JUMP JUMPDEST POP POP POP POP POP SWAP1 JUMP JUMPDEST POP DUP3 DUP6 AND DUP7 MSTORE DUP4 PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0x35CF JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x358F JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x3589 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1405 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1405 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1405 JUMPI POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x3780 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x37B0 JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xA6A8216E7A1D89D05570786EF50D05AB98F2CF7598C06F1EC4437EC2040C4A9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x464C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x95DDA6C6F31EA0C92078AACA3A510DC395BC467E87B1D2BE7F9E24C15AAFF99A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xC107DCA26644AF9DC6FEAC68C9DE2CB2EC979E3C35B7E6EE33925BC125DA9C76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x14A3858BCAD155F4A363ABCC3A27999D5C7E0BB4EDEAF632F13B237DCEFB630B SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x3A2B JUMPI DUP3 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xD17A96B5AB97BAEB5ABD2AFF3D879F3AE21BDF0A88374FF422DDD156525D2A07 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x472C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x784CD7277279DA66F514C343DEF5AE4D754633326A69DF9E3246CF541F59DAE6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x4C6FE25F3A39278AEFC6C9CCDF3BCE8DFD53184196650CDCDBB6FE4B1D917161 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xC726C2B4C97955C111BEBCF26D23050C057419036FD6B131FD840DEF3E37A8B0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x2A3DAB589BCC9747970DD85AC3F222668741AE51F2A1BBB8F8355BE28DD8A868 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4D7367B4C45C93361C07A01249CC1EF90933A8773F26DF2DABD0FB4074504D11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x7E6B58BC1470E1FC07BC9B21E0435BE41FDC30EDE9591781476A8D169A265492 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB6061EE728D91D026C497D6FC1FD4C6E962C3B781D406BA2F82DB1094FD3C7BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x5FDBD35E8DA83EE755D5E62A539E5ED7F47126ABEDE0B8B10F9EA43DC6EED07F SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x3978316B9E18641362396A82E770F244695FB3FA52AE062231283C763A3660AC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xE9DC316FA34AE880F78D85D5CE397FEB0C9FBE2FC8EBF721A7D1646CABAF7F8C SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xE0D12F91347694D97C9CB47D2FFC7E6F53FAB026501949AB958BE692B40EC6D1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x940D6B1946FF1D2B5A9F1909219C3C81A370804B5BA0F91EC0828C99A2E6A681 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x456C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x95DDA6C6F31EA0C92078AACA3A510DC395BC467E87B1D2BE7F9E24C15AAFF99A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x468C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x385A JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x46AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND ISZERO PUSH2 0x4128 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2C08 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2BEF JUMPI PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x4182 PUSH1 0x20 SWAP3 PUSH2 0x3391 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x4287 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x426E JUMPI PUSH2 0x41BB PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x423B JUMPI POP DUP3 DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP4 PUSH1 0x40 SWAP4 DUP9 PUSH1 0x20 SWAP8 MSTORE DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x42A8 PUSH2 0x4459 JUMP JUMPDEST PUSH2 0x42B0 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x127D JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x4399 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x438D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4384 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x4414 JUMPI DUP1 PUSH2 0x43B7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x43D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x43F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x43FC JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x470C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x4447 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x4461 PUSH2 0x3404 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x4471 JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD DUP1 ISZERO PUSH2 0x449E JUMPI SWAP1 JUMP JUMPDEST POP PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP1 JUMP JUMPDEST PUSH2 0x44CB PUSH2 0x34CA JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x44DB JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD DUP1 ISZERO PUSH2 0x449E JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x452F JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x451D JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x4562 JUMPI JUMPDEST PUSH2 0x4540 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x4538 JUMP INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D2AE08A8E 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB 0xBF DUP12 SUB 0x4A 0xF7 LOG4 CALLVALUE 0xC4 0x4D SWAP3 SWAP10 0xA6 PUSH11 0x1071085478BB9A7FDC1F0E 0xBC 0xB5 0xD3 PUSH14 0xC76F02B2A16A46D94261C7517CC8 SELFDESTRUCT DUP10 0xF6 SHR 0xC 0xE9 CALLDATALOAD SWAP9 0xE3 0xC8 0x49 DUP1 LT GT 0xDE 0xE6 0x49 0xA6 0xA5 JUMPI 0xD1 MUL MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04A16A46D942 PUSH2 0xC751 PUSH29 0xC8FF89F61C0CE93598E3C849801011DEE649A6A557D10393A9EA60ADD9 DUP8 0x26 0xFC 0xD1 0x2F BALANCE 0xBD SWAP2 0xD9 DUP16 0xAF NUMBER PUSH25 0xBAC52ABB4F48E807756CED77A142AD5D3E1F2E6E70EDCF6D99 SHL DUP11 ADDRESS 0x23 0xD3 0xFC 0xA8 DIV PUSH27 0x131592F9EDB9FD9B89D57D02DD7BC7DEC4DCEEDDA775E58DD541E0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F0330046A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4 0xA6 MULMOD 0xB5 CODECOPY 0x4C 0xEB 0xB4 LOG2 0xAA SWAP12 PUSH24 0x9B17422D0DF92223018B32B4D1FA46E071723D6817E2486D STOP EXTCODESIZE 0xEC 0xC5 PUSH0 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00365F 0xCC 0xB6 PUSH13 0x62533AD1447FEC73F7B764CF03 0xAC PUSH10 0xD512070F7C0AA889025C 0xEC NOT PUSH0 SWAP13 0xE3 BASEFEE ISZERO 0xF8 0xE1 EQ BALANCE 0xC7 0xBB PUSH22 0xA8E6886A91478F7FFC1DBB0A98DC240FDDD76B75A264 PUSH10 0x70667358221220429071 0xD2 PUSH32 0xEC423448A4AB3DB53220EDD295603C80ED5DA9E295A9D923F49FC064736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMapi;:::-;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;;;;1029:22531:34;;4724:16:1;;:34;;;;1029:22531:34;;4788:16:1;:50;;;;1029:22531:34;4853:13:1;:30;;;;1029:22531:34;4849:91:1;;;1029:22531:34;-1:-1:-1;;;;;1029:22531:34;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;4301:16:1;4977:67;;1029:22531:34;-1:-1:-1;;;;;1029:22531:34;;8502:23;:47;;;;1029:22531;8498:76;;1029:22531;;:::i;:::-;;;:::i;:::-;6891:76:1;;;:::i;:::-;;;:::i;:::-;1029:22531:34;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2581:7:3;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2581:7:3;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;6891:76:1;;:::i;:::-;;;:::i;:::-;1029:22531:34;;:::i;:::-;6891:76:1;;:::i;:::-;1029:22531:34;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;6891:76:1;;:::i;:::-;1029:22531:34;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2581:7:3;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;:::i;:::-;;;;;;;;;;;;;;;;;9470:32;;1029:22531;;;;;;;;;;;;;;;;;2581:7:3;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;2692:64:10;1029:22531:34;;3788:16:10;1029:22531:34;6891:76:1;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;1029:22531:34;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;-1:-1:-1;;;;;;1029:22531:34;-1:-1:-1;;;;;1029:22531:34;;;;;;;8934:30;1029:22531;;;8975:58;1029:22531;9079:38;;;:::i;:::-;;9128:33;;;:::i;:::-;;9172:37;;;:::i;:::-;;9220:42;;;:::i;:::-;;9273;;;:::i;:::-;;9326:40;;;:::i;:::-;;9377:33;;;:::i;:::-;;9421:38;;;:::i;:::-;;9470:32;:::i;:::-;-1:-1:-1;1029:22531:34;;-1:-1:-1;;;;;1029:22531:34;;8707:21:3;;8703:91;;1944:72:8;;:::i;:::-;7402:14:3;1029:22531:34;;;1421:22;1029:22531;;;;;;;;;;;;8262:25:3;1029:22531:34;;;;;;;2031:63:3;1029:22531:34;;;;;;;;;;;;;;;;8262:25:3;1029:22531:34;;;-1:-1:-1;;;;;1029:22531:34;9778:38;;;;;1029:22531;;;4301:16:1;5064:101;;1029:22531:34;;;5064:101:1;1029:22531:34;5140:14:1;1029:22531:34;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;5140:14:1;1029:22531:34;;;;;;;;;;;;;;8703:91:3;1029:22531:34;;-1:-1:-1;;;8751:32:3;;1029:22531:34;8751:32:3;;1029:22531:34;;;;;8751:32:3;1029:22531:34;;;;-1:-1:-1;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;;;;;9470:32;1029:22531;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;2581:7:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;2581:7:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;;1029:22531:34;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;2581:7:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;-1:-1:-1;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;2581:7:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;-1:-1:-1;;;;;;;;;;;;1029:22531:34;;8498:76;1029:22531;;-1:-1:-1;;;8558:16:34;;1029:22531;;8558:16;8502:47;-1:-1:-1;;;;;;1029:22531:34;;8529:20;8502:47;;4977:67:1;-1:-1:-1;;1029:22531:34;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;4977:67:1;;4849:91;1029:22531:34;;-1:-1:-1;;;4906:23:1;;1029:22531:34;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;1029:22531:34;;;;;;4301:16:1;;-1:-1:-1;4724:34:1;;1029:22531:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;:::i;:::-;;;;3608:41;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2972:33;1029:22531;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;3283:4:0;;:::i;:::-;1029:22531:34;;;-1:-1:-1;;;;;1029:22531:34;;;-1:-1:-1;;;;;;1029:22531:34;;;;;;;;;;16509:43;;;;1029:22531;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;3283:4:0;;:::i;:::-;14960:14:34;1029:22531;;-1:-1:-1;;;;;;1029:22531:34;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;15051:50;;;;1029:22531;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;3283:4:0;;:::i;:::-;-1:-1:-1;;;;;1029:22531:34;;21873:31;21869:60;;21940:55;;;:::i;:::-;;1029:22531;;;;;;;;;;;;;;;3283:4:0;;:::i;:::-;1029:22531:34;;15619:31;1029:22531;;15619:31;1029:22531;15687:15;15661:41;1029:22531;15718:21;;;;1029:22531;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;4771:20:3;1029:22531:34;;:::i;:::-;4771:20:3;;:::i;:::-;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3110:31;1029:22531;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;4369:49;1029:22531;;;;;4369:49;1029:22531;4369:49;;1029:22531;4369:49;1029:22531;4369:49;;;;1029:22531;4369:49;;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;5815:26:0;1029:22531:34;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;3283:4:0;1029:22531:34;;;;4967:24:0;1029:22531:34;3283:4:0;:::i;:::-;5815:26;:::i;1029:22531:34:-;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;2286:15:5;;:26;2282:97;;1029:22531:34;;;;;;;;;;;;;972:64:7;1029:22531:34;;;;;;;;;;;;;;;;2420:78:5;1029:22531:34;2420:78:5;;1029:22531:34;1279:95:5;1029:22531:34;;1279:95:5;1029:22531:34;1279:95:5;;1029:22531:34;;;;;1279:95:5;;1029:22531:34;1279:95:5;1029:22531:34;1279:95:5;;1029:22531:34;;1279:95:5;;1029:22531:34;;1279:95:5;;1029:22531:34;;2420:78:5;;1029:22531:34;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;7105:8:27;1029:22531:34;7051:25:27;1029:22531:34;;;;2410:89:5;;3980:23:10;;:::i;:::-;3993:249:28;1029:22531:34;3993:249:28;;-1:-1:-1;;;3993:249:28;;;;;;;;;;1029:22531:34;;;3993:249:28;1029:22531:34;;3993:249:28;;7051:25:27;:::i;:::-;7105:8;;;;;:::i;:::-;1029:22531:34;2623:15:5;;;2619:88;;10021:4:3;;;;;;:::i;:::-;1029:22531:34;;2619:88:5;1029:22531:34;;;;;2661:35:5;;;;;;1029:22531:34;2661:35:5;;1029:22531:34;;1279:95:5;;1029:22531:34;2661:35:5;1029:22531:34;;;;;;;;;;;;2282:97:5;1029:22531:34;;;;2335:33:5;;;;;;1029:22531:34;2335:33:5;;1029:22531:34;2335:33:5;1029:22531:34;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;3283:4:0;;:::i;:::-;-1:-1:-1;;;;;1029:22531:34;;21019:24;21015:53;;21079:39;;;:::i;1029:22531::-;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;3283:4:0;;:::i;:::-;-1:-1:-1;;;;;1029:22531:34;;22378:29;22374:58;;22443:52;;;:::i;1029:22531::-;;;;;;;;;;;;;;4289:28;1029:22531;;;;;;;;;;;;;;;:::i;:::-;966:10:6;1029:22531:34;;;;;;;;;;;2682:35;;;;;1029:22531;;4516:23:0;4512:108;;-1:-1:-1;;;;;;1029:22531:34;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;13725:34;;1029:22531;13681:28;1029:22531;;;;;;;13725:34;1029:22531;;4512:108:0;1029:22531:34;;;;4562:47:0;;;;;;966:10:6;1029:22531:34;4562:47:0;;1029:22531:34;;;;;4562:47:0;1029:22531:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;;;1944:72:8;;:::i;:::-;10103:10:34;1029:22531;;;;;;;;;;;;6765:47;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;6765:47;;7132:27;1029:22531;;;;;7128:374;;1029:22531;;;7587:23;1029:22531;;7583:58;;1029:22531;;;7718:15;:41;;;1029:22531;7714:73;;3361:103:9;;:::i;:::-;1029:22531:34;;7132:27;1029:22531;;;;10359:37;10355:122;;1029:22531;;;;;;10539:35;10535:119;;1029:22531;10103:10;;4545:5:3;10103:10:34;;;4545:5:3;:::i;:::-;1029:22531:34;;;10740:35;;10736:118;;1029:22531;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;10736:118;10792:50;;;;;;;1029:22531;;-1:-1:-1;;;10792:50:34;;10103:10;1029:22531;10792:50;;1029:22531;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;10792:50;;;;;;;;10736:118;;;;;10792:50;;;;;:::i;:::-;1029:22531;;10792:50;;;;1029:22531;;;;;;;;;10792:50;1029:22531;;;10535:119;10591:51;;;;;1029:22531;;-1:-1:-1;;;10591:51:34;;10103:10;1029:22531;10591:51;;1029:22531;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;10591:51;;;;;;;10535:119;10591:51;;;;:::i;:::-;1029:22531;;10591:51;;10535:119;;1029:22531;;;;10591:51;1029:22531;;;10355:122;10413:52;;;;;1029:22531;;-1:-1:-1;;;10413:52:34;;10103:10;1029:22531;10413:52;;1029:22531;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;10413:52;;;;;;;10355:122;10413:52;;;;:::i;:::-;1029:22531;;10413:52;;10355:122;;7714:73;1029:22531;;-1:-1:-1;;;7768:19:34;;1029:22531;;7768:19;7718:41;1029:22531;;;;;10103:10;7737:22;;7718:41;;7583:58;1029:22531;;-1:-1:-1;;;;;;7619:22:34;;1029:22531;;7619:22;7128:374;1029:22531;;;;10103:10;;7233:16;;:34;;;;7128:374;7229:262;;7128:374;7229:262;10103:10;1029:22531;;7375:9;1029:22531;;;;;;;;7374:16;1029:22531;;;7374:34;;7229:262;7370:106;;;7229:262;7128:374;;7370:106;1029:22531;;-1:-1:-1;;;7440:16:34;;1029:22531;;7440:16;7374:34;1029:22531;;-1:-1:-1;1029:22531:34;;;;;;7394:14;7374:34;;;7233;7253:14;;;;;7233:34;;;6765:47;1029:22531;;-1:-1:-1;;;6796:16:34;;1029:22531;;6796:16;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15921:53;:23;1029:22531;15947:27;1029:22531;15921:53;;:::i;:::-;15902:15;:72;;15898:233;;1029:22531;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;:::i;:::-;;;;3720:41;1029:22531;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4476:32;1029:22531;;;;;;;;;;;;;;;;;;;;;;;2370:37;1029:22531;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:4:0;;:::i;:::-;14530:14:34;1029:22531;;;;;;;;;;;;;;14530:14;1029:22531;14620:31;1029:22531;;;14635:15;1029:22531;;14620:31;1029:22531;;;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2692:64:10;1029:22531:34;5647:18:10;:43;;;1029:22531:34;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5835:13:10;;1029:22531:34;;;;5870:4:10;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;;;;;;;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;-1:-1:-1;;;1029:22531:34;;;;;;;5647:43:10;1029:22531:34;5669:16:10;1029:22531:34;5669:21:10;5647:43;;1029:22531:34;;;;;;;;;;;;;1944:72:8;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;19561:10;1029:22531;;;;;;;;;;;19534:92;;;;1029:22531;19534:153;;;;1029:22531;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;;19561:10;1029:22531;;;;;;;;;;19862:236;1029:22531;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;19862:236;;1944:72:8;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3300:4:8;1029:22531:34;;;;;;;;3319:20:8;1029:22531:34;;;19561:10;1029:22531;;3319:20:8;1029:22531:34;;;;;;;;;;;;;:::i;:::-;;;;;;19561:10;20143:37;;;;1029:22531;;19862:236;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;19561:10;1029:22531;;;;;;;;;;19941:157;1029:22531;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;19941:157;19862:236;;19941:157;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;19561:10;1029:22531;;;;;;;;;20016:82;19862:236;20016:82;1029:22531;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;20016:82;19862:236;;1029:22531;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;19534:153;1029:22531;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;19561:10;1029:22531;;;;;;;;;;19534:153;;:92;1029:22531;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;19561:10;1029:22531;;;;;;;;;;19534:92;;1029:22531;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;3283:4:0;;:::i;:::-;-1:-1:-1;;;;;1029:22531:34;;;;13293:23;;13289:52;;1029:22531;;-1:-1:-1;;;;;;1029:22531:34;;;;;;;13429:39;1029:22531;;13429:39;1029:22531;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;:::i;:::-;;;;972:64:7;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18551:9;1029:22531;;;;;;18551:29;18547:87;;1029:22531;;;;;;18551:9;1029:22531;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18547:87;1029:22531;;-1:-1:-1;;;18604:18:34;;1029:22531;;18604:18;1029:22531;;;;;;;;;;;;;;;;2824:35;1029:22531;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;:::i;:::-;;;;2031:63:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;3364:26;1029:22531;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;3283:4:0;;:::i;:::-;1029:22531:34;;;17077:7;1029:22531;;;;;;17077:20;17073:49;;1029:22531;;;17077:7;1029:22531;;17155:31;1029:22531;;;;17173:13;1029:22531;17155:31;;:::i;:::-;17137:15;:49;17133:82;;1029:22531;;;;17240:53;;1029:22531;;;;17265:10;1029:22531;;;;;;17137:15;1029:22531;;;;;17240:53;;;;;:::i;:::-;1029:22531;17230:64;;:74;17226:129;;1029:22531;17413:47;1029:22531;;;;17077:7;1029:22531;;;;;;;;;;;;17137:15;1029:22531;;;;17413:47;1029:22531;;17226:129;1029:22531;;-1:-1:-1;;;17328:15:34;;1029:22531;;17328:15;17133:82;1029:22531;;-1:-1:-1;;;17195:20:34;;1029:22531;;17195:20;17073:49;1029:22531;;-1:-1:-1;;;17106:16:34;;1029:22531;;17106:16;1029:22531;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15418:43;3283:4:0;;;:::i;:::-;15346::34;1029:22531;;15320:30;1029:22531;;;15320:30;1029:22531;15387:15;15361:41;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;;;;15442:10;;1029:22531;;;;;;;;;15418:43;;;;1029:22531;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;21459:40;1029:22531;;:::i;:::-;3283:4:0;;:::i;:::-;21459:40:34;:::i;1029:22531::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;1704:2;1029:22531;;;;;;;;;;;;;;;;5090:6:2;-1:-1:-1;;;;;1029:22531:34;5081:4:2;5073:23;5069:145;;1029:22531:34;;;811:66:17;1029:22531:34;;;5069:145:2;1029:22531:34;;-1:-1:-1;;;5174:29:2;;1029:22531:34;;5174:29:2;1029:22531:34;;;;;;;;;;;;;3283:4:0;;:::i;:::-;14306:56:34;1029:22531;14263:27;1029:22531;;;;;14262:28;1029:22531;;;;;;;14263:27;1029:22531;;;;;;;;;;;14306:56;1029:22531;;;;;;;;;;;;;;;;;4560:35;1029:22531;;;;;;;;;;;-1:-1:-1;1029:22531:34;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4667:6:2;1029:22531:34;;4658:4:2;4650:23;;;:120;;;;1029:22531:34;4633:251:2;;;1850:26:34;1029:22531;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;966:10:6;1029:22531:34;;;;;;;;;;4516:23:0;4512:108;;1029:22531:34;;;;;;;;;6131:52:2;;;;1029:22531:34;6131:52:2;;;;;;;;;1029:22531:34;-1:-1:-1;6127:437:2;;1029:22531:34;;-1:-1:-1;;;6493:60:2;;1029:22531:34;6493:60:2;;1029:22531:34;;;;;6493:60:2;6127:437;811:66:17;;;;6225:40:2;;;;6221:120;;1748:29:17;;;:34;1744:119;;-1:-1:-1;1029:22531:34;;-1:-1:-1;;;;;;1029:22531:34;;;;;;;;;;2407:36:17;1029:22531:34;;2407:36:17;1029:22531:34;;2458:15:17;:11;;4065:25:22;4107:55;4065:25;;;;;;;;;1029:22531:34;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4107:55:22;:::i;1029:22531:34:-;;;-1:-1:-1;4107:55:22;:::i;2454:148:17:-;6163:9;;;;;;;6159:70;;2454:148;1029:22531:34;;6159:70:17;-1:-1:-1;;;6199:19:17;;1029:22531:34;;6199:19:17;1744:119;1029:22531:34;;-1:-1:-1;;;1805:47:17;;1029:22531:34;1805:47:17;;1029:22531:34;;;1805:47:17;6221:120:2;1029:22531:34;;6292:34:2;;;;;;1029:22531:34;6292:34:2;;1029:22531:34;6292:34:2;6131:52;;;;;;;;;;;;;;;;;:::i;:::-;;;1029:22531:34;;;;;6131:52:2;;;;1029:22531:34;;;;6131:52:2;;;;;4512:108:0;1029:22531:34;;;;;4562:47:0;;;;;;966:10:6;1029:22531:34;4562:47:0;;1029:22531:34;;;;4562:47:0;4650:120:2;1029:22531:34;;;811:66:17;1029:22531:34;;4728:42:2;;4650:120;;;1029:22531:34;;;;;;;;;;;;;;;;;;;3916:26;1029:22531;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;4193:42;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;;3826:39;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;2194:66:8;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;20483:10;1029:22531;;;;;;;;;;20456:101;;;;;1029:22531;;;;;3627:22:8;2194:66;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1029:22531:34;;-1:-1:-1;;1029:22531:34;;;;;20483:10;1029:22531;;3627:22:8;20483:10:34;20652:28;;;;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;;;;;20456:101;1029:22531;;2370:37;1029:22531;;;;;;;20483:10;1029:22531;;;;;;;;;;20456:101;;;1029:22531;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;19153:9;1029:22531;;;;19153:29;;1029:22531;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;966:10:6;-1:-1:-1;;;;;1029:22531:34;;6489:34:0;6485:102;;6597:37;1029:22531:34;;;6597:37:0;:::i;6485:102::-;1029:22531:34;;-1:-1:-1;;;6546:30:0;;1029:22531:34;;6546:30:0;1029:22531:34;;;;;;;;;;;;;;3980:23:10;;:::i;:::-;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;3240:25;1029:22531;;;;;;;;;;;;;;;;;;;1421:22;1029:22531;;;;;;;;;;;;;;;;;4756:42;1029:22531;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;5398:25:0;1029:22531:34;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;3283:4:0;1029:22531:34;;;;4967:24:0;1029:22531:34;3283:4:0;:::i;:::-;5398:25;:::i;1029:22531:34:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;4967:24:0;1029:22531:34;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;:::i;:::-;;;;:::i;:::-;;;;1944:72:8;;;:::i;:::-;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;6765:47;;1029:22531;;;;;;;;;;;;;;;6765:47;;7132:27;1029:22531;;;;;7128:374;;1029:22531;;;7587:23;1029:22531;;7583:58;;1029:22531;;;7718:15;:41;;;1029:22531;7714:73;;3361:103:9;;:::i;:::-;1029:22531:34;7132:27;1029:22531;;;;11388:37;11384:116;;1029:22531;;;;;;11562:35;11558:113;;1029:22531;4771:20:3;;;;:::i;:::-;966:10:6;1029:22531:34;;;;;;;;;;;11814:36:3;;11810:309;;1029:22531:34;6102:5:3;;;;;;;:::i;:::-;1029:22531:34;;;11767:35;;11763:112;;1029:22531;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;11763:112;11819:44;;;;;1029:22531;;-1:-1:-1;;;11819:44:34;;-1:-1:-1;;;;;1029:22531:34;;;;11819:44;;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;11819:44;;;;;;;;11763:112;;;;;;11819:44;;;;;:::i;:::-;1029:22531;;11819:44;;;11810:309:3;11870:24;;;11866:130;;11045:19;11041:89;;966:10:6;11143:21:3;11139:90;;11238:20;;;;;:::i;:::-;966:10:6;1029:22531:34;;;;;;;;;11810:309:3;;;;11139:90;1029:22531:34;;-1:-1:-1;;;11187:31:3;;1029:22531:34;;11187:31:3;;1029:22531:34;;;11187:31:3;11041:89;1029:22531:34;;-1:-1:-1;;;11087:32:3;;1029:22531:34;;11087:32:3;;1029:22531:34;;;11087:32:3;11866:130;1029:22531:34;;-1:-1:-1;;;11921:60:3;;966:10:6;1029:22531:34;11921:60:3;;1029:22531:34;;;;;;;;;;;;;;;11921:60:3;11558:113:34;11614:45;;;;;1029:22531;;-1:-1:-1;;;11614:45:34;;-1:-1:-1;;;;;1029:22531:34;;;;11614:45;;1029:22531;;;;;;;;;;;;;;;;;;;;;;;;11614:45;;;;;;;;;;;11558:113;;;;11614:45;;;;:::i;:::-;1029:22531;;11614:45;;;;;1029:22531;;;;;;;;;11384:116;11442:46;;;;;1029:22531;;-1:-1:-1;;;11442:46:34;;-1:-1:-1;;;;;1029:22531:34;;;;11442:46;;1029:22531;;;;;;;;;;;;;;;;;;;;;;11442:46;;;;;;;11384:116;11442:46;;;;;;;:::i;:::-;;;11384:116;;7718:41;1029:22531;;;;;7737:10;:22;;7718:41;;7128:374;1029:22531;;;;7233:16;;;;:34;;;;7128:374;7229:262;;7128:374;7229:262;1029:22531;;;7375:9;1029:22531;;;;;;;;7374:16;1029:22531;;;7374:34;;7229:262;7370:106;;;7229:262;7128:374;;7374:34;1029:22531;;-1:-1:-1;1029:22531:34;;;;;;7394:14;7374:34;;;7233;7253:14;;;;;7233:34;;;1029:22531;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;3283:4:0;;:::i;:::-;1029:22531:34;;;16801:7;1029:22531;;16819:15;1029:22531;;;;;;16819:15;;1029:22531;;16850:50;1029:22531;16872:10;16850:50;;1029:22531;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2682:35;1029:22531;;;;;;;;;;;;;;;;;3981:14:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;3997:37;1029:22531;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;4657:38;1029:22531;;;;;;;;;;;;;;;;;;;;3364:26;1029:22531;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;966:10:6;1029:22531:34;;;;;;;;;;4516:23:0;4512:108;;-1:-1:-1;17850:19:34;1029:22531;-1:-1:-1;;1029:22531:34;;;;;18144:59;1029:22531;;;;;;;;17850:19;1029:22531;;3981:14:3;1029:22531:34;;;;;;;;;;;:::i;:::-;;;;17955:163;;;;18023:15;;1029:22531;;17955:163;;;1029:22531;;;17931:9;17955:163;;;1029:22531;;;;;;;;;;;;;;;;;;;3981:14:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;18023:15;;1029:22531;;;;;;18144:59;1029:22531;;;;;;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;;;;;:::i;:::-;2824:35;;1029:22531;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;966:10:6;1029:22531:34;;;;;;;;;;4516:23:0;4512:108;;-1:-1:-1;;;;;;1029:22531:34;;;;13976:9;1029:22531;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;14024:38;;1029:22531;13976:32;1029:22531;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;10021:4:3;1029:22531:34;;:::i;:::-;;;966:10:6;;10021:4:3;:::i;:::-;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;2827:7:3;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1029:22531:34;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3599:47:0;;;:87;;;;1029:22531:34;;;;;;;3599:87:0;-1:-1:-1;;;1101:40:11;;-1:-1:-1;3599:87:0;;;1029:22531:34;;;;;;;;-1:-1:-1;;1029:22531:34;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1029:22531:34;;;;:::o;:::-;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;:::o;:::-;-1:-1:-1;;;;;1029:22531:34;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;:::o;:::-;-1:-1:-1;;;;;1029:22531:34;;;;;;-1:-1:-1;;1029:22531:34;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1029:22531:34;;;;:::o;:::-;-1:-1:-1;;;;;1029:22531:34;;;;;4771:13:3;1029:22531:34;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6311:7:10;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;1029:22531:34;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;-1:-1:-1;;;1029:22531:34;;;;;;;;-1:-1:-1;1029:22531:34;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6696:10:10;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1029:22531:34;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;-1:-1:-1;;;1029:22531:34;;;;;;;;-1:-1:-1;1029:22531:34;;-1:-1:-1;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;;;;;;;;;;:::o;12217:849::-;;12396:14;1029:22531;;;;;;;;;12395:15;:35;;;12217:849;12395:53;;;12217:849;12391:71;;1029:22531;-1:-1:-1;;;;;;;;;;;1029:22531:34;;12473:26;;-1:-1:-1;;;;;1029:22531:34;;;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;;;12514:32;;;;12217:849;12510:50;;1029:22531;12575:23;1029:22531;;12571:41;;1029:22531;;12745:282;;12217:849;13047:11;;;;;12514:9;12217:849;:::o;12745:282::-;1029:22531;;;;12850:16;;;:34;;;;;12745:282;12846:51;;;1029:22531;;12968:9;1029:22531;;;;;;;;12967:16;1029:22531;;;12967:34;;12745:282;12963:52;;;;;12745:282;;;;;;12963:52;13003:12;:::o;12967:34::-;1029:22531;;;;;;;;12987:14;;-1:-1:-1;12967:34:34;;;;;12850;1029:22531;;;;;12870:14;12850:34;;;12571:41;12600:12;;;;;;:::o;12514:32::-;1029:22531;;;;;;;;;;;;12514:32;;12473:26;12487:12;;;;-1:-1:-1;12487:12:34;:::o;12395:53::-;-1:-1:-1;;1029:22531:34;-1:-1:-1;;;;;1029:22531:34;;;;;12434:14;;12395:53;;:35;-1:-1:-1;;1029:22531:34;-1:-1:-1;;;;;1029:22531:34;;;;;12414:16;;12395:35;;4196:103:0;966:10:6;1029:22531:34;;;;;;;;;;;;;4516:23:0;4512:108;;4196:103;:::o;:::-;966:10:6;-1:-1:-1;1029:22531:34;;;;;;;;;;2972:33;;1029:22531;;4516:23:0;4512:108;;4196:103;:::o;:::-;1029:22531:34;-1:-1:-1;1029:22531:34;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;-1:-1:-1;1029:22531:34;966:10:6;-1:-1:-1;1029:22531:34;;;;;-1:-1:-1;1029:22531:34;;;4516:23:0;4512:108;;4196:103;:::o;2709:128:8:-;1029:22531:34;-1:-1:-1;;;;;;;;;;;1029:22531:34;;2770:61:8;;2709:128::o;2770:61::-;1029:22531:34;;-1:-1:-1;;;2805:15:8;;;;;3470:384:9;-1:-1:-1;;;;;;;;;;;1991:1:9;1029:22531:34;;3670:20:9;3666:88;;1991:1;1029:22531:34;;3470:384:9:o;3666:88::-;1029:22531:34;;-1:-1:-1;;;3713:30:9;;;;;7318:387:0;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;-1:-1:-1;;;;;;;;;;;2539:36:34;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7480:219::-;7676:12;;;;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;-1:-1:-1;;;;;;;;;;;2198:28:34;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;2370:37;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;966:10:6;7580:40:0;-1:-1:-1;;;;;;;;;;;7580:40:0;;;7557:4;7634:11;:::o;7480:219::-;7676:12;;;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;1850:26;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;-1:-1:-1;;;;;;;;;;;2014:30:34;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;2682:35;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;2824:35;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;2972:33;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;3364:26;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;3110:31;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;3240:25;;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7318:387::-;;-1:-1:-1;1029:22531:34;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;7484:23:0;7480:219;1029:22531:34;;;;;;;;;;;;;;;;;;;7557:4:0;1029:22531:34;;;;;;;;-1:-1:-1;;;;;;;;;;;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7942:388::-;-1:-1:-1;;;;;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;;;;;;-1:-1:-1;;1029:22531:34;-1:-1:-1;;;;;;;;;;;2198:28:34;-1:-1:-1;;;;;;;;;;;2968:71:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;8205:40:0;966:10:6;8205:40:0;;;1029:22531:34;8259:11:0;:::o;7942:388::-;;-1:-1:-1;1029:22531:34;;;;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;8105:219:0;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;8205:40:0;966:10:6;8205:40:0;;;1029:22531:34;8259:11:0;:::o;2909:126:8:-;1029:22531:34;-1:-1:-1;;;;;;;;;;;1029:22531:34;;2971:9:8;2967:62;;2909:126::o;2967:62::-;1029:22531:34;;-1:-1:-1;;;3003:15:8;;;;;10880:487:3;;-1:-1:-1;;;;;1029:22531:34;;;;11045:19:3;;11041:89;;1029:22531:34;11143:21:3;;;11139:90;;11319:31;11238:20;;1029:22531:34;11238:20:3;;:::i;:::-;1029:22531:34;-1:-1:-1;1029:22531:34;;;;;-1:-1:-1;1029:22531:34;;;;;;;11319:31:3;10880:487::o;6509:300::-;;-1:-1:-1;;;;;1029:22531:34;;;;6592:18:3;;6588:86;;1029:22531:34;6687:16:3;;;6683:86;;1944:72:8;;:::i;:::-;7262:546:3;1029:22531:34;;;;2031:63:3;1029:22531:34;;;;;;;7513:19:3;;;;7509:115;;1029:22531:34;;;8262:25:3;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8262:25:3;6509:300::o;7509:115::-;1029:22531:34;;-1:-1:-1;;;7559:50:3;;-1:-1:-1;;;;;1029:22531:34;;;;7559:50:3;;;1029:22531:34;;;;;;;;-1:-1:-1;1029:22531:34;;;;;;;;11921:60:3;6683:86;1029:22531:34;;-1:-1:-1;;;6726:32:3;;6608:1;6726:32;;;1029:22531:34;;;6726:32:3;6588:86;1029:22531:34;;-1:-1:-1;;;6633:30:3;;6608:1;6633:30;;;1029:22531:34;;;6633:30:3;4016:191:10;4129:17;;:::i;:::-;4148:20;;:::i;:::-;1029:22531:34;;4107:92:10;;;;1029:22531:34;1959:95:10;1029:22531:34;;;1959:95:10;;1029:22531:34;1959:95:10;;;1029:22531:34;4170:13:10;1959:95;;;1029:22531:34;4193:4:10;1959:95;;;1029:22531:34;1959:95:10;4107:92;;1959:95;1029:22531:34;;;;;-1:-1:-1;;;;;1029:22531:34;;;;;;;;4097:103:10;;4016:191;:::o;5203:1551:27:-;;;6283:66;6270:79;;6266:164;;1029:22531:34;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:27;;;;;;;;;;;;;;-1:-1:-1;;;;;1029:22531:34;;6579:20:27;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;1029:22531:34;;;;;;;;;;6266:164:27;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;1029:22531:34;;;;;;7366:29:27;;;7411:7;;:::o;7362:444::-;1029:22531:34;7462:38:27;;1029:22531:34;;;;-1:-1:-1;;;7523:23:27;;1029:22531:34;;7523:23:27;7458:348;7576:35;7567:44;;7576:35;;1029:22531:34;;-1:-1:-1;;;7634:46:27;;1029:22531:34;7634:46:27;;1029:22531:34;;;;;7634:46:27;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;1029:22531:34;;;;7763:32:27;;;;;;1029:22531:34;7763:32:27;;1029:22531:34;7763:32:27;1029:22531:34;;;;7375:20:27;1029:22531:34;;;;;7375:20:27;1029:22531:34;7082:141:1;1029:22531:34;-1:-1:-1;;;;;;;;;;;1029:22531:34;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;1029:22531:34;;-1:-1:-1;;;7189:17:1;;;;;6928:687:10;1029:22531:34;;:::i;:::-;;;;7100:22:10;;;;1029:22531:34;;7145:22:10;7138:29;:::o;7096:513::-;-1:-1:-1;;2692:64:10;1029:22531:34;7473:15:10;;;;7508:17;:::o;7469:130::-;7564:20;7571:13;7564:20;:::o;7836:723::-;1029:22531:34;;:::i;:::-;;;;8017:25:10;;;;1029:22531:34;;8065:25:10;8058:32;:::o;8013:540::-;-1:-1:-1;;8377:16:10;1029:22531:34;8411:18:10;;;;8449:20;:::o;4437:582:22:-;;4609:8;;-1:-1:-1;1029:22531:34;;5690:21:22;:17;;5815:105;;;;;;5686:301;1029:22531:34;;-1:-1:-1;;;5957:19:22;;;;;4605:408;1029:22531:34;;4857:22:22;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;1029:22531:34;;-1:-1:-1;;;4933:24:22;;-1:-1:-1;;;;;1029:22531:34;;;4933:24:22;;;1029:22531:34;;;4933:24:22;4857:49;4883:18;;;:23;4857:49;"},"methodIdentifiers":{"ADMIN_PAUSER_ROLE()":"42275c59","BLOCKLIST_MANAGER_ROLE()":"1872223f","BOT_PAUSER_ROLE()":"0b06806a","CIRCUIT_BREAKER_ROLE()":"e54e55ae","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","EMERGENCY_GUARDIAN_ROLE()":"ea4b7dcd","FINANCE_ROLE()":"349b5954","GOVERNANCE_UNPAUSER_ROLE()":"9632874b","MAX_SUPPLY()":"32cb6b0c","PARAM_MANAGER_ROLE()":"dc62caf5","SNAPSHOT_ROLE()":"7028e2cd","TOKEN_DECIMALS()":"5b7f415c","TOKEN_NAME()":"18821400","TOKEN_SYMBOL()":"2a905318","UPGRADER_ROLE()":"f72c0d8b","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","WHITELIST_MANAGER_ROLE()":"7295ed93","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","autoResetCircuitBreaker()":"a1bdba44","balanceOf(address)":"70a08231","blocklist(address)":"e5c7160b","circuitBreaker()":"16efd941","circuitBreakerResetInterval()":"2fbf02d4","circuitBreakerTriggered()":"51108cac","commitTimeout()":"b60095a5","commits(bytes32)":"47885781","createCommit(bytes32)":"1fc4b857","createSnapshot()":"1504d8f0","currentSnapshotId()":"970875ce","decimals()":"313ce567","eip712Domain()":"84b0196e","enableTrading()":"8a8c523c","getLatestSnapshotId()":"8a5d4869","getRoleAdmin(bytes32)":"248a9ca3","getSnapshot(uint256)":"76f10ad0","grantBotPauserRole(address)":"c1d6cb4f","grantEmergencyGuardianRole(address)":"b941d774","grantGovernanceUnpauserRole(address)":"df8bcac7","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,uint256,uint256)":"eb990c59","isTransferAllowed(address,address)":"97e2b9af","lastCircuitBreakerReset()":"15926257","name()":"06fdde03","nonces(address)":"7ecebe00","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","resetCircuitBreaker()":"de5f8d93","revealCommit(bytes32,bytes32)":"6d1fa35b","revokeBotPauserRole(address)":"5d75b889","revokeRole(bytes32,address)":"d547741f","snapshotExists(uint256)":"3db11d6a","snapshots(uint256)":"d6565a2d","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","toggleTransferRestrictions()":"512fede1","totalSupply()":"18160ddd","tradingEnabled()":"4ada218b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferHook()":"82bc7bc9","transferRestrictionsEnabled()":"45cb1258","treasury()":"61d027b3","triggerCircuitBreaker(string)":"61b242c5","unpause()":"3f4ba83a","updateBlocklist(address,bool)":"b45a1eb5","updateCircuitBreaker(address)":"e1eb7399","updateTransferHook(address)":"e4d1155e","updateTreasury(address)":"7f51bb1f","updateWhitelist(address,bool)":"0d392cd9","upgradeToAndCall(address,bytes)":"4f1ef286","whitelist(address)":"9b19251a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockedAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CircuitBreakerActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitAlreadyRevealed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ParamCommitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SnapshotNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradingNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferRestrictionsActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedUpgrade\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"BlocklistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CircuitBreakerReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggerer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"CircuitBreakerTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldBreaker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBreaker\",\"type\":\"address\"}],\"name\":\"CircuitBreakerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commit\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"committer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CommitCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commit\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CommitRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"pauseType\",\"type\":\"string\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unpauser\",\"type\":\"address\"}],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"SnapshotCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldHook\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newHook\",\"type\":\"address\"}],\"name\":\"TransferHookUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"TransferRestrictionsToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BLOCKLIST_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOT_PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CIRCUIT_BREAKER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_GUARDIAN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FINANCE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNANCE_UNPAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PARAM_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SNAPSHOT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoResetCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blocklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circuitBreaker\",\"outputs\":[{\"internalType\":\"contract ICircuitBreaker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circuitBreakerResetInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circuitBreakerTriggered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commit\",\"type\":\"bytes32\"}],\"name\":\"createCommit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSnapshotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestSnapshotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"getSnapshot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct NEBA.SnapshotData\",\"name\":\"snapshot\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"botAddress\",\"type\":\"address\"}],\"name\":\"grantBotPauserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardianAddress\",\"type\":\"address\"}],\"name\":\"grantEmergencyGuardianRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governanceAddress\",\"type\":\"address\"}],\"name\":\"grantGovernanceUnpauserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commitTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_circuitBreakerResetInterval\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"isTransferAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCircuitBreakerReset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commit\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"revealCommit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"botAddress\",\"type\":\"address\"}],\"name\":\"revokeBotPauserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"snapshotExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"snapshots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleTransferRestrictions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferHook\",\"outputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferRestrictionsEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"triggerCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"updateBlocklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_circuitBreaker\",\"type\":\"address\"}],\"name\":\"updateCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transferHook\",\"type\":\"address\"}],\"name\":\"updateTransferHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"updateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NEBA Development Team\",\"details\":\"Phase 1 implementation of NEBA Token with hardened security, upgradability, and compliance features\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createSnapshot()\":{\"details\":\"Only callable by SNAPSHOT_ROLE\",\"returns\":{\"snapshotId\":\"The ID of the created snapshot\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getLatestSnapshotId()\":{\"returns\":{\"_0\":\"The latest snapshot ID\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSnapshot(uint256)\":{\"params\":{\"snapshotId\":\"The snapshot ID to retrieve\"},\"returns\":{\"snapshot\":\"The snapshot data\"}},\"grantBotPauserRole(address)\":{\"details\":\"Only callable by admin to set up the automated monitoring bot\",\"params\":{\"botAddress\":\"Address of the automated bot/keeper\"}},\"grantEmergencyGuardianRole(address)\":{\"details\":\"Only callable by admin to set up emergency guardian\",\"params\":{\"guardianAddress\":\"Address of the emergency guardian (e.g., Security Council)\"}},\"grantGovernanceUnpauserRole(address)\":{\"details\":\"Only callable by admin to set up governance unpausing\",\"params\":{\"governanceAddress\":\"Address of the governance system (e.g., Timelock)\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,uint256,uint256)\":{\"params\":{\"_admin\":\"Admin address\",\"_circuitBreakerResetInterval\":\"Circuit breaker reset interval in seconds\",\"_commitTimeout\":\"Commit timeout duration in seconds\",\"_treasury\":\"Treasury address (Gnosis Safe Multisig)\"}},\"isTransferAllowed(address,address)\":{\"details\":\"Simplified version - full ERC-1404 will be implemented in V2\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"pause()\":{\"details\":\"Accessible by ADMIN_PAUSER_ROLE, BOT_PAUSER_ROLE, or EMERGENCY_GUARDIAN_ROLE.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeBotPauserRole(address)\":{\"details\":\"Only callable by admin to revoke bot permissions if compromised\",\"params\":{\"botAddress\":\"Address of the automated bot/keeper\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"snapshotExists(uint256)\":{\"params\":{\"snapshotId\":\"The snapshot ID to check\"},\"returns\":{\"_0\":\"True if snapshot exists\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"unpause()\":{\"details\":\"Accessible by ADMIN_PAUSER_ROLE or GOVERNANCE_UNPAUSER_ROLE.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"}},\"title\":\"NEBA Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADMIN_PAUSER_ROLE()\":{\"notice\":\"Role for the Multisig. Has full control: Can pause AND unpause.\"},\"BLOCKLIST_MANAGER_ROLE()\":{\"notice\":\"Role for managing blocklist\"},\"BOT_PAUSER_ROLE()\":{\"notice\":\"Role for automated bots (Keepers/Sentinels). Has limited control: Can ONLY pause.\"},\"CIRCUIT_BREAKER_ROLE()\":{\"notice\":\"Role for circuit breaker management\"},\"EMERGENCY_GUARDIAN_ROLE()\":{\"notice\":\"Role for emergency guardian (pause only, immediate)\"},\"FINANCE_ROLE()\":{\"notice\":\"Role for financial operations\"},\"GOVERNANCE_UNPAUSER_ROLE()\":{\"notice\":\"Role for governance unpausing (unpause only, through Timelock)\"},\"MAX_SUPPLY()\":{\"notice\":\"Maximum total supply: 1 billion tokens\"},\"PARAM_MANAGER_ROLE()\":{\"notice\":\"Role for parameter management\"},\"SNAPSHOT_ROLE()\":{\"notice\":\"Role for snapshot management\"},\"TOKEN_DECIMALS()\":{\"notice\":\"Token decimals\"},\"TOKEN_NAME()\":{\"notice\":\"Token name\"},\"TOKEN_SYMBOL()\":{\"notice\":\"Token symbol\"},\"UPGRADER_ROLE()\":{\"notice\":\"Role for upgrading the contract\"},\"WHITELIST_MANAGER_ROLE()\":{\"notice\":\"Role for managing whitelist\"},\"autoResetCircuitBreaker()\":{\"notice\":\"Auto-reset circuit breaker if interval has passed\"},\"blocklist(address)\":{\"notice\":\"Blocklist mapping for restricted addresses\"},\"circuitBreaker()\":{\"notice\":\"Circuit breaker contract\"},\"circuitBreakerResetInterval()\":{\"notice\":\"Circuit breaker reset interval\"},\"circuitBreakerTriggered()\":{\"notice\":\"Circuit breaker state\"},\"commitTimeout()\":{\"notice\":\"Commit timeout duration\"},\"commits(bytes32)\":{\"notice\":\"Commit-reveal scheme for sensitive updates\"},\"createCommit(bytes32)\":{\"notice\":\"Create a commit for sensitive parameter updates\"},\"createSnapshot()\":{\"notice\":\"Create a snapshot of current token balances\"},\"currentSnapshotId()\":{\"notice\":\"Current snapshot ID counter\"},\"enableTrading()\":{\"notice\":\"Enable trading (one-time only)\"},\"getLatestSnapshotId()\":{\"notice\":\"Get the latest snapshot ID\"},\"getSnapshot(uint256)\":{\"notice\":\"Get snapshot data by ID\"},\"grantBotPauserRole(address)\":{\"notice\":\"Grant BOT_PAUSER_ROLE to automated bot address\"},\"grantEmergencyGuardianRole(address)\":{\"notice\":\"Grant EMERGENCY_GUARDIAN_ROLE to emergency guardian address\"},\"grantGovernanceUnpauserRole(address)\":{\"notice\":\"Grant GOVERNANCE_UNPAUSER_ROLE to governance address\"},\"initialize(address,address,uint256,uint256)\":{\"notice\":\"Initialize the NEBA Token contract\"},\"isTransferAllowed(address,address)\":{\"notice\":\"Check if transfer is allowed (basic hooks for V1)\"},\"lastCircuitBreakerReset()\":{\"notice\":\"Last circuit breaker reset time\"},\"pause()\":{\"notice\":\"Pauses the contract.\"},\"resetCircuitBreaker()\":{\"notice\":\"Reset circuit breaker\"},\"revealCommit(bytes32,bytes32)\":{\"notice\":\"Reveal a commit\"},\"revokeBotPauserRole(address)\":{\"notice\":\"Revoke BOT_PAUSER_ROLE from automated bot address\"},\"snapshotExists(uint256)\":{\"notice\":\"Check if a snapshot exists\"},\"snapshots(uint256)\":{\"notice\":\"Snapshot data mapping\"},\"toggleTransferRestrictions()\":{\"notice\":\"Toggle transfer restrictions\"},\"tradingEnabled()\":{\"notice\":\"Trading enabled flag\"},\"transfer(address,uint256)\":{\"notice\":\"Override transfer to include security checks\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Override transferFrom to include security checks\"},\"transferHook()\":{\"notice\":\"Transfer hook contract\"},\"transferRestrictionsEnabled()\":{\"notice\":\"Transfer restrictions enabled flag\"},\"treasury()\":{\"notice\":\"Treasury address (Gnosis Safe Multisig)\"},\"triggerCircuitBreaker(string)\":{\"notice\":\"Trigger circuit breaker manually\"},\"unpause()\":{\"notice\":\"Unpauses the contract.\"},\"updateBlocklist(address,bool)\":{\"notice\":\"Update blocklist status\"},\"updateCircuitBreaker(address)\":{\"notice\":\"Update circuit breaker contract\"},\"updateTransferHook(address)\":{\"notice\":\"Update transfer hook contract\"},\"updateTreasury(address)\":{\"notice\":\"Update treasury address\"},\"updateWhitelist(address,bool)\":{\"notice\":\"Update whitelist status\"},\"whitelist(address)\":{\"notice\":\"Whitelist mapping for approved addresses\"}},\"notice\":\"This contract implements ERC-20 with additional security, compliance, and governance features\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NEBA.sol\":\"NEBA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x76fa4ae31ed43664c3ccadadec6395192216e8bb958aaaf583282024d20644a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671413f9138325daeda7b5ddb8dbb3e025bdc7b29bd8c7e9c8e5d1ba2b962b2e\",\"dweb:/ipfs/QmcBW9dDj9XHfaeYnoV3VsRnL6iYpmspAf4619mnfj8Vcu\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NEBA.sol\":{\"keccak256\":\"0x43a9719522fd1c645838f8a4077b3aec4f7845e3b338c172bd68440cbfdcd0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45903cd8f649b9d28a94818fa6101f021d530d0a7ae973aebdb1166ddeb9259a\",\"dweb:/ipfs/QmTMkyHLQPu3cXtjPE5Dy6sEteSmJnkKnUQNdBf8kWi5ug\"]},\"contracts/interfaces/ICircuitBreaker.sol\":{\"keccak256\":\"0x076696fa218ef87fcfc4b27066ce5df11907154b4818f0127d8ea57021c3c5d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82eb895fd30e91c642f2e5830a8563a12c83632e292f764a3e2a71bef950c636\",\"dweb:/ipfs/QmdMSDNQ3Cb8xacHEaTXUPMimFs38W8NCKP8dFtTC7s5sX\"]},\"contracts/interfaces/ITransferHook.sol\":{\"keccak256\":\"0xc624b0c7aba10416c19b93c990c187c4e6c1add03d760bfad4a229355017f90f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83a25444eb34867c4e38e8ef278128f574218f1b7db8399f49046c22028464d2\",\"dweb:/ipfs/QmYnEwA7i12yxEqCm6xnTxQipe6c74gXgUJS4R7kAjirVE\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":9815,"contract":"contracts/NEBA.sol:NEBA","label":"treasury","offset":0,"slot":"0","type":"t_address"},{"astId":9820,"contract":"contracts/NEBA.sol:NEBA","label":"blocklist","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":9825,"contract":"contracts/NEBA.sol:NEBA","label":"whitelist","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"},{"astId":9828,"contract":"contracts/NEBA.sol:NEBA","label":"transferRestrictionsEnabled","offset":0,"slot":"3","type":"t_bool"},{"astId":9831,"contract":"contracts/NEBA.sol:NEBA","label":"tradingEnabled","offset":1,"slot":"3","type":"t_bool"},{"astId":9835,"contract":"contracts/NEBA.sol:NEBA","label":"circuitBreaker","offset":2,"slot":"3","type":"t_contract(ICircuitBreaker)11602"},{"astId":9839,"contract":"contracts/NEBA.sol:NEBA","label":"transferHook","offset":0,"slot":"4","type":"t_contract(ITransferHook)11626"},{"astId":9844,"contract":"contracts/NEBA.sol:NEBA","label":"commits","offset":0,"slot":"5","type":"t_mapping(t_bytes32,t_uint256)"},{"astId":9847,"contract":"contracts/NEBA.sol:NEBA","label":"commitTimeout","offset":0,"slot":"6","type":"t_uint256"},{"astId":9853,"contract":"contracts/NEBA.sol:NEBA","label":"snapshots","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_struct(SnapshotData)9874_storage)"},{"astId":9856,"contract":"contracts/NEBA.sol:NEBA","label":"currentSnapshotId","offset":0,"slot":"8","type":"t_uint256"},{"astId":9859,"contract":"contracts/NEBA.sol:NEBA","label":"circuitBreakerTriggered","offset":0,"slot":"9","type":"t_bool"},{"astId":9862,"contract":"contracts/NEBA.sol:NEBA","label":"lastCircuitBreakerReset","offset":0,"slot":"10","type":"t_uint256"},{"astId":9865,"contract":"contracts/NEBA.sol:NEBA","label":"circuitBreakerResetInterval","offset":0,"slot":"11","type":"t_uint256"},{"astId":11149,"contract":"contracts/NEBA.sol:NEBA","label":"__gap","offset":0,"slot":"12","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ICircuitBreaker)11602":{"encoding":"inplace","label":"contract ICircuitBreaker","numberOfBytes":"20"},"t_contract(ITransferHook)11626":{"encoding":"inplace","label":"contract ITransferHook","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(SnapshotData)9874_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NEBA.SnapshotData)","numberOfBytes":"32","value":"t_struct(SnapshotData)9874_storage"},"t_struct(SnapshotData)9874_storage":{"encoding":"inplace","label":"struct NEBA.SnapshotData","members":[{"astId":9867,"contract":"contracts/NEBA.sol:NEBA","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":9869,"contract":"contracts/NEBA.sol:NEBA","label":"timestamp","offset":0,"slot":"1","type":"t_uint256"},{"astId":9871,"contract":"contracts/NEBA.sol:NEBA","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":9873,"contract":"contracts/NEBA.sol:NEBA","label":"active","offset":0,"slot":"3","type":"t_bool"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/TransferHook.sol":{"TransferHook":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"AddressBlacklisted","type":"error"},{"inputs":[],"name":"HooksDisabled","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"TransferAmountBelowMinimum","type":"error"},{"inputs":[],"name":"TransferAmountExceedsLimit","type":"error"},{"inputs":[],"name":"UnauthorizedCaller","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"blacklisted","type":"bool"}],"name":"BlacklistUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"HooksToggled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"LimitsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TransferExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"whitelisted","type":"bool"},{"indexed":false,"internalType":"bool","name":"isSender","type":"bool"}],"name":"WhitelistUpdated","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HOOK_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"afterTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"beforeTransfer","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"blacklistedAddresses","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getTransferStats","outputs":[{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"uint256","name":"total","type":"uint256"},{"internalType":"uint256","name":"lastTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hooksEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint256","name":"_maxTransferAmount","type":"uint256"},{"internalType":"uint256","name":"_minTransferAmount","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isBlacklisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isWhitelistedReceiver","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isWhitelistedSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastTransferTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransferAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minTransferAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleHooks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"totalTransferred","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"transferCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"blacklisted","type":"bool"}],"name":"updateBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxTransferAmount","type":"uint256"},{"internalType":"uint256","name":"_minTransferAmount","type":"uint256"}],"name":"updateLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"whitelisted","type":"bool"},{"internalType":"bool","name":"isSender","type":"bool"}],"name":"updateWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whitelistedReceivers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whitelistedSenders","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657610eac908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146108d0575081630d2d8a31146108985781631b9e2fad1461080a5781631ffb811f14610880578163248a9ca314610848578163272efc691461080a5781632bedd955146107cf5781632dc74c20146107975781632f2ff15d1461076d57816336568abe1461072757816338e901b6146106ef57816340dfb1dc1461062457816365f6c6f51461040f57816368841431146106055781637a1ac61e146104a25781637e3b64511461044d578163851024041461040f5781639155e0831461039457816391d1485414610340578163a217fddf14610325578163a2240e19146102cd578163a8497870146102ab578163a9e757231461028d578163aff6c36a14610232578163d547741f146101e157508063d5749d42146101b7578063f49062ca146101995763fe575a871461015957600080fd5b346101955760203660031901126101955760209160ff9082906001600160a01b03610182610923565b1681526003855220541690519015158152f35b5080fd5b82346101b4576101b16101ab36610954565b91610a78565b80f35b80fd5b50346101955760203660031901126101955760209160ff9082906001600160a01b03610182610923565b9190503461022e578060031936011261022e5761022a9135610225600161020661093e565b93838752600080516020610e5783398151915260205286200154610bb7565b610dd3565b5080f35b8280fd5b50503461019557816003193601126101955760207fccccc2b9fbbc74545c7f9dac70ee99992ba9927917a3ad98439b8aecb678a43191610270610b3d565b83549060ff8083161516809260ff1916178555519015158152a180f35b90503461022e578260031936011261022e5760209250549051908152f35b50503461019557816003193601126101955760ff602092541690519015158152f35b9190503461022e578060031936011261022e57817f4d4981437d0211f9e6843eb024d9ada1fa3a99514d4343d4aece106dd11524bb9235908160243591610312610b3d565b558060055582519182526020820152a180f35b50503461019557816003193601126101955751908152602090f35b90503461022e578160031936011261022e578160209360ff9261036161093e565b90358252600080516020610e5783398151915286528282206001600160a01b039091168252855220549151911615158152f35b5050346101955780600319360112610195577f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac60206103d1610923565b6103d9610989565b906103e2610b3d565b6001600160a01b031680865260038352848620805460ff191660ff8415151617905593519015158152a280f35b5050346101955760203660031901126101955760209160ff9082906001600160a01b0361043a610923565b1681526002855220541690519015158152f35b505034610195576020366003190112610195576060916001600160a01b03610473610923565b168152600660205281812054916007602052808083205492600860205220549181519384526020840152820152f35b90503461022e57606036600319011261022e576104bd610923565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009182549160ff83861c16159267ffffffffffffffff8116801590816105fd575b60011490816105f3575b1590816105ea575b506105da5767ffffffffffffffff1981166001178555836105bb575b5060ff8454861c16156105ac578061054661054c92610bea565b50610c8a565b50845460ff19166001178555602435905560443560055561056b578280f35b805468ff00000000000000001916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808280f35b508351631afcd79f60e31b8152fd5b68ffffffffffffffffff1916680100000000000000011784553861052c565b855163f92ee8a960e01b81528390fd5b90501538610510565b303b159150610508565b8591506104fe565b5050346101955781600319360112610195576020906005549051908152f35b5050346101955760603660031901126101955761063f610923565b610647610989565b91604435918215158084036106eb577f855852ede06df792cbe12bbb8b292fd0d251a1dcfea1f072d5793f1930568ebf93610680610b3d565b156106c3576001600160a01b03821686526001602052828620805460ff191660ff871515161790555b8251941515855260208501526001600160a01b031692a280f35b6001600160a01b03821686526002602052828620805460ff191660ff871515161790556106a9565b8580fd5b5050346101955760203660031901126101955760209181906001600160a01b03610717610923565b1681526007845220549051908152f35b83833461019557806003193601126101955761074161093e565b90336001600160a01b0383160361075e575061022a919235610dd3565b5163334bd91960e11b81528390fd5b9190503461022e578060031936011261022e5761022a9135610792600161020661093e565b610d4c565b5050346101955760203660031901126101955760209181906001600160a01b036107bf610923565b1681526006845220549051908152f35b505034610195578160031936011261019557602090517f5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e8152f35b5050346101955760203660031901126101955760209160ff9082906001600160a01b03610835610923565b1681526001855220541690519015158152f35b90503461022e57602036600319011261022e5781602093600192358152600080516020610e5783398151915285522001549051908152f35b83346101b4576101b161089236610954565b91610998565b5050346101955760203660031901126101955760209181906001600160a01b036108c0610923565b1681526008845220549051908152f35b84913461022e57602036600319011261022e573563ffffffff60e01b811680910361022e5760209250637965db0b60e01b8114908115610912575b5015158152f35b6301ffc9a760e01b1490508361090b565b600435906001600160a01b038216820361093957565b600080fd5b602435906001600160a01b038216820361093957565b6060906003190112610939576001600160a01b0390600435828116810361093957916024359081168103610939579060443590565b60243590811515820361093957565b60ff6000541615610a41576001600160a01b0390811660009081526003602052604090205460ff16918215610a2a575b5050610a18576004548111610a0657600554811090816109fc575b506109ea57565b604051630c9156bd60e21b8152600490fd5b90501515386109e3565b60405163092c644960e21b8152600490fd5b604051631f7b776b60e01b8152600490fd5b9091501660005260ff6040600020541638806109c8565b505050565b6000198114610a555760010190565b634e487b7160e01b600052601160045260246000fd5b91908201809211610a5557565b909160009260ff84541615610b37577f8e386ea29f37964fdbdb87193d773dea74e258b0f6108461c88c712051fb27bc9160018060a01b038094169384865260209060068252604093848820610ace8154610a46565b9055169586815260068252838120610ae68154610a46565b905585815260078252838120610afd848254610a6b565b905586815260078252838120610b14848254610a6b565b9055858152600882524284822055868152834291205582519182524290820152a3565b50505050565b3360009081527ff8fde46f3f6cfd0682a1d36d6f11cb582bfe7381d604f9632c25d17e31591e4360205260409020547f5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e9060ff1615610b995750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600080516020610e5783398151915260205260406000203360005260205260ff6040600020541615610b995750565b6001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d6020526040812054909190600080516020610e578339815191529060ff16610c85578280526020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505090565b6001600160a01b031660008181527ff8fde46f3f6cfd0682a1d36d6f11cb582bfe7381d604f9632c25d17e31591e4360205260408120549091907f5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e90600080516020610e578339815191529060ff16610d46578184526020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b50505090565b90600091808352600080516020610e5783398151915280602052604084209260018060a01b03169283855260205260ff60408520541615600014610d46578184526020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b90600091808352600080516020610e5783398151915280602052604084209260018060a01b03169283855260205260ff604085205416600014610d4657818452602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a460019056fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a2646970667358221220e7de7d587855841eb4b5d17adabea5f5222e73bb4daf6500c743b3133980d09464736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xEAC SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x8D0 JUMPI POP DUP2 PUSH4 0xD2D8A31 EQ PUSH2 0x898 JUMPI DUP2 PUSH4 0x1B9E2FAD EQ PUSH2 0x80A JUMPI DUP2 PUSH4 0x1FFB811F EQ PUSH2 0x880 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x848 JUMPI DUP2 PUSH4 0x272EFC69 EQ PUSH2 0x80A JUMPI DUP2 PUSH4 0x2BEDD955 EQ PUSH2 0x7CF JUMPI DUP2 PUSH4 0x2DC74C20 EQ PUSH2 0x797 JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x76D JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x727 JUMPI DUP2 PUSH4 0x38E901B6 EQ PUSH2 0x6EF JUMPI DUP2 PUSH4 0x40DFB1DC EQ PUSH2 0x624 JUMPI DUP2 PUSH4 0x65F6C6F5 EQ PUSH2 0x40F JUMPI DUP2 PUSH4 0x68841431 EQ PUSH2 0x605 JUMPI DUP2 PUSH4 0x7A1AC61E EQ PUSH2 0x4A2 JUMPI DUP2 PUSH4 0x7E3B6451 EQ PUSH2 0x44D JUMPI DUP2 PUSH4 0x85102404 EQ PUSH2 0x40F JUMPI DUP2 PUSH4 0x9155E083 EQ PUSH2 0x394 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x340 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x325 JUMPI DUP2 PUSH4 0xA2240E19 EQ PUSH2 0x2CD JUMPI DUP2 PUSH4 0xA8497870 EQ PUSH2 0x2AB JUMPI DUP2 PUSH4 0xA9E75723 EQ PUSH2 0x28D JUMPI DUP2 PUSH4 0xAFF6C36A EQ PUSH2 0x232 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1E1 JUMPI POP DUP1 PUSH4 0xD5749D42 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xF49062CA EQ PUSH2 0x199 JUMPI PUSH4 0xFE575A87 EQ PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x182 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x1B1 PUSH2 0x1AB CALLDATASIZE PUSH2 0x954 JUMP JUMPDEST SWAP2 PUSH2 0xA78 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x182 PUSH2 0x923 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x22A SWAP2 CALLDATALOAD PUSH2 0x225 PUSH1 0x1 PUSH2 0x206 PUSH2 0x93E JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH32 0xCCCCC2B9FBBC74545C7F9DAC70EE99992BA9927917A3AD98439B8AECB678A431 SWAP2 PUSH2 0x270 PUSH2 0xB3D JUMP JUMPDEST DUP4 SLOAD SWAP1 PUSH1 0xFF DUP1 DUP4 AND ISZERO AND DUP1 SWAP3 PUSH1 0xFF NOT AND OR DUP6 SSTORE MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI DUP2 PUSH32 0x4D4981437D0211F9E6843EB024D9ADA1FA3A99514D4343D4AECE106DD11524BB SWAP3 CALLDATALOAD SWAP1 DUP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x312 PUSH2 0xB3D JUMP JUMPDEST SSTORE DUP1 PUSH1 0x5 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x361 PUSH2 0x93E JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC PUSH1 0x20 PUSH2 0x3D1 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x989 JUMP JUMPDEST SWAP1 PUSH2 0x3E2 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP4 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x43A PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x473 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SLOAD SWAP2 PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 DUP1 DUP4 KECCAK256 SLOAD SWAP3 PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH2 0x4BD PUSH2 0x923 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0xFF DUP4 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x5FD JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x5F3 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x5EA JUMPI JUMPDEST POP PUSH2 0x5DA JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 PUSH2 0x5BB JUMPI JUMPDEST POP PUSH1 0xFF DUP5 SLOAD DUP7 SHR AND ISZERO PUSH2 0x5AC JUMPI DUP1 PUSH2 0x546 PUSH2 0x54C SWAP3 PUSH2 0xBEA JUMP JUMPDEST POP PUSH2 0xC8A JUMP JUMPDEST POP DUP5 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP6 SSTORE PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x5 SSTORE PUSH2 0x56B JUMPI DUP3 DUP1 RETURN JUMPDEST DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP DUP4 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP5 SSTORE CODESIZE PUSH2 0x52C JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x510 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x508 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x4FE JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x63F PUSH2 0x923 JUMP JUMPDEST PUSH2 0x647 PUSH2 0x989 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 DUP5 SUB PUSH2 0x6EB JUMPI PUSH32 0x855852EDE06DF792CBE12BBB8B292FD0D251A1DCFEA1F072D5793F1930568EBF SWAP4 PUSH2 0x680 PUSH2 0xB3D JUMP JUMPDEST ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 ISZERO ISZERO AND OR SWAP1 SSTORE JUMPDEST DUP3 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 ISZERO ISZERO AND OR SWAP1 SSTORE PUSH2 0x6A9 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x717 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x195 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH2 0x741 PUSH2 0x93E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x75E JUMPI POP PUSH2 0x22A SWAP2 SWAP3 CALLDATALOAD PUSH2 0xDD3 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x22A SWAP2 CALLDATALOAD PUSH2 0x792 PUSH1 0x1 PUSH2 0x206 PUSH2 0x93E JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7BF PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x5E2EEB607131C4761F5374C6345D52581873680E97436D5D4763ADB8EABE151E DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x835 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x1B1 PUSH2 0x892 CALLDATASIZE PUSH2 0x954 JUMP JUMPDEST SWAP2 PUSH2 0x998 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8C0 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x22E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x912 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x939 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x939 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x939 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x939 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x939 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x939 JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND ISZERO PUSH2 0xA41 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 DUP3 ISZERO PUSH2 0xA2A JUMPI JUMPDEST POP POP PUSH2 0xA18 JUMPI PUSH1 0x4 SLOAD DUP2 GT PUSH2 0xA06 JUMPI PUSH1 0x5 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0x9FC JUMPI JUMPDEST POP PUSH2 0x9EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC9156BD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x92C6449 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F7B776B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP AND PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE DUP1 PUSH2 0x9C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA55 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA55 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP3 PUSH1 0xFF DUP5 SLOAD AND ISZERO PUSH2 0xB37 JUMPI PUSH32 0x8E386EA29F37964FDBDB87193D773DEA74E258B0F6108461C88C712051FB27BC SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP4 DUP5 DUP7 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP9 KECCAK256 PUSH2 0xACE DUP2 SLOAD PUSH2 0xA46 JUMP JUMPDEST SWAP1 SSTORE AND SWAP6 DUP7 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP4 DUP2 KECCAK256 PUSH2 0xAE6 DUP2 SLOAD PUSH2 0xA46 JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE DUP4 DUP2 KECCAK256 PUSH2 0xAFD DUP5 DUP3 SLOAD PUSH2 0xA6B JUMP JUMPDEST SWAP1 SSTORE DUP7 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE DUP4 DUP2 KECCAK256 PUSH2 0xB14 DUP5 DUP3 SLOAD PUSH2 0xA6B JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE TIMESTAMP DUP5 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP4 TIMESTAMP SWAP2 KECCAK256 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF8FDE46F3F6CFD0682A1D36D6F11CB582BFE7381D604F9632C25D17E31591E43 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x5E2EEB607131C4761F5374C6345D52581873680E97436D5D4763ADB8EABE151E SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB99 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xB99 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xC85 JUMPI DUP3 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xF8FDE46F3F6CFD0682A1D36D6F11CB582BFE7381D604F9632C25D17E31591E43 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x5E2EEB607131C4761F5374C6345D52581873680E97436D5D4763ADB8EABE151E SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xD46 JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xD46 JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xD46 JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xDE PUSH30 0x587855841EB4B5D17ADABEA5F5222E73BB4DAF6500C743B3133980D09464 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"384:6169:35:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2366,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_8564":{"entryPoint":2339,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":2388,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_bool":{"entryPoint":2441,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":2667,"id":null,"parameterSlots":2,"returnSlots":1},"fun_afterTransfer":{"entryPoint":2680,"id":11395,"parameterSlots":3,"returnSlots":0},"fun_beforeTransfer":{"entryPoint":2456,"id":11329,"parameterSlots":3,"returnSlots":0},"fun_checkRole":{"entryPoint":2999,"id":131,"parameterSlots":1,"returnSlots":0},"fun_checkRole_8575":{"entryPoint":2877,"id":131,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":3404,"id":317,"parameterSlots":2,"returnSlots":1},"fun_grantRole_8578":{"entryPoint":3050,"id":317,"parameterSlots":1,"returnSlots":1},"fun_grantRole_8579":{"entryPoint":3210,"id":317,"parameterSlots":1,"returnSlots":1},"fun_revokeRole":{"entryPoint":3539,"id":363,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":2630,"id":null,"parameterSlots":1,"returnSlots":1},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146108d0575081630d2d8a31146108985781631b9e2fad1461080a5781631ffb811f14610880578163248a9ca314610848578163272efc691461080a5781632bedd955146107cf5781632dc74c20146107975781632f2ff15d1461076d57816336568abe1461072757816338e901b6146106ef57816340dfb1dc1461062457816365f6c6f51461040f57816368841431146106055781637a1ac61e146104a25781637e3b64511461044d578163851024041461040f5781639155e0831461039457816391d1485414610340578163a217fddf14610325578163a2240e19146102cd578163a8497870146102ab578163a9e757231461028d578163aff6c36a14610232578163d547741f146101e157508063d5749d42146101b7578063f49062ca146101995763fe575a871461015957600080fd5b346101955760203660031901126101955760209160ff9082906001600160a01b03610182610923565b1681526003855220541690519015158152f35b5080fd5b82346101b4576101b16101ab36610954565b91610a78565b80f35b80fd5b50346101955760203660031901126101955760209160ff9082906001600160a01b03610182610923565b9190503461022e578060031936011261022e5761022a9135610225600161020661093e565b93838752600080516020610e5783398151915260205286200154610bb7565b610dd3565b5080f35b8280fd5b50503461019557816003193601126101955760207fccccc2b9fbbc74545c7f9dac70ee99992ba9927917a3ad98439b8aecb678a43191610270610b3d565b83549060ff8083161516809260ff1916178555519015158152a180f35b90503461022e578260031936011261022e5760209250549051908152f35b50503461019557816003193601126101955760ff602092541690519015158152f35b9190503461022e578060031936011261022e57817f4d4981437d0211f9e6843eb024d9ada1fa3a99514d4343d4aece106dd11524bb9235908160243591610312610b3d565b558060055582519182526020820152a180f35b50503461019557816003193601126101955751908152602090f35b90503461022e578160031936011261022e578160209360ff9261036161093e565b90358252600080516020610e5783398151915286528282206001600160a01b039091168252855220549151911615158152f35b5050346101955780600319360112610195577f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac60206103d1610923565b6103d9610989565b906103e2610b3d565b6001600160a01b031680865260038352848620805460ff191660ff8415151617905593519015158152a280f35b5050346101955760203660031901126101955760209160ff9082906001600160a01b0361043a610923565b1681526002855220541690519015158152f35b505034610195576020366003190112610195576060916001600160a01b03610473610923565b168152600660205281812054916007602052808083205492600860205220549181519384526020840152820152f35b90503461022e57606036600319011261022e576104bd610923565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009182549160ff83861c16159267ffffffffffffffff8116801590816105fd575b60011490816105f3575b1590816105ea575b506105da5767ffffffffffffffff1981166001178555836105bb575b5060ff8454861c16156105ac578061054661054c92610bea565b50610c8a565b50845460ff19166001178555602435905560443560055561056b578280f35b805468ff00000000000000001916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808280f35b508351631afcd79f60e31b8152fd5b68ffffffffffffffffff1916680100000000000000011784553861052c565b855163f92ee8a960e01b81528390fd5b90501538610510565b303b159150610508565b8591506104fe565b5050346101955781600319360112610195576020906005549051908152f35b5050346101955760603660031901126101955761063f610923565b610647610989565b91604435918215158084036106eb577f855852ede06df792cbe12bbb8b292fd0d251a1dcfea1f072d5793f1930568ebf93610680610b3d565b156106c3576001600160a01b03821686526001602052828620805460ff191660ff871515161790555b8251941515855260208501526001600160a01b031692a280f35b6001600160a01b03821686526002602052828620805460ff191660ff871515161790556106a9565b8580fd5b5050346101955760203660031901126101955760209181906001600160a01b03610717610923565b1681526007845220549051908152f35b83833461019557806003193601126101955761074161093e565b90336001600160a01b0383160361075e575061022a919235610dd3565b5163334bd91960e11b81528390fd5b9190503461022e578060031936011261022e5761022a9135610792600161020661093e565b610d4c565b5050346101955760203660031901126101955760209181906001600160a01b036107bf610923565b1681526006845220549051908152f35b505034610195578160031936011261019557602090517f5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e8152f35b5050346101955760203660031901126101955760209160ff9082906001600160a01b03610835610923565b1681526001855220541690519015158152f35b90503461022e57602036600319011261022e5781602093600192358152600080516020610e5783398151915285522001549051908152f35b83346101b4576101b161089236610954565b91610998565b5050346101955760203660031901126101955760209181906001600160a01b036108c0610923565b1681526008845220549051908152f35b84913461022e57602036600319011261022e573563ffffffff60e01b811680910361022e5760209250637965db0b60e01b8114908115610912575b5015158152f35b6301ffc9a760e01b1490508361090b565b600435906001600160a01b038216820361093957565b600080fd5b602435906001600160a01b038216820361093957565b6060906003190112610939576001600160a01b0390600435828116810361093957916024359081168103610939579060443590565b60243590811515820361093957565b60ff6000541615610a41576001600160a01b0390811660009081526003602052604090205460ff16918215610a2a575b5050610a18576004548111610a0657600554811090816109fc575b506109ea57565b604051630c9156bd60e21b8152600490fd5b90501515386109e3565b60405163092c644960e21b8152600490fd5b604051631f7b776b60e01b8152600490fd5b9091501660005260ff6040600020541638806109c8565b505050565b6000198114610a555760010190565b634e487b7160e01b600052601160045260246000fd5b91908201809211610a5557565b909160009260ff84541615610b37577f8e386ea29f37964fdbdb87193d773dea74e258b0f6108461c88c712051fb27bc9160018060a01b038094169384865260209060068252604093848820610ace8154610a46565b9055169586815260068252838120610ae68154610a46565b905585815260078252838120610afd848254610a6b565b905586815260078252838120610b14848254610a6b565b9055858152600882524284822055868152834291205582519182524290820152a3565b50505050565b3360009081527ff8fde46f3f6cfd0682a1d36d6f11cb582bfe7381d604f9632c25d17e31591e4360205260409020547f5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e9060ff1615610b995750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600080516020610e5783398151915260205260406000203360005260205260ff6040600020541615610b995750565b6001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d6020526040812054909190600080516020610e578339815191529060ff16610c85578280526020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505090565b6001600160a01b031660008181527ff8fde46f3f6cfd0682a1d36d6f11cb582bfe7381d604f9632c25d17e31591e4360205260408120549091907f5e2eeb607131c4761f5374c6345d52581873680e97436d5d4763adb8eabe151e90600080516020610e578339815191529060ff16610d46578184526020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b50505090565b90600091808352600080516020610e5783398151915280602052604084209260018060a01b03169283855260205260ff60408520541615600014610d46578184526020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b90600091808352600080516020610e5783398151915280602052604084209260018060a01b03169283855260205260ff604085205416600014610d4657818452602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a460019056fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a2646970667358221220e7de7d587855841eb4b5d17adabea5f5222e73bb4daf6500c743b3133980d09464736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x8D0 JUMPI POP DUP2 PUSH4 0xD2D8A31 EQ PUSH2 0x898 JUMPI DUP2 PUSH4 0x1B9E2FAD EQ PUSH2 0x80A JUMPI DUP2 PUSH4 0x1FFB811F EQ PUSH2 0x880 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x848 JUMPI DUP2 PUSH4 0x272EFC69 EQ PUSH2 0x80A JUMPI DUP2 PUSH4 0x2BEDD955 EQ PUSH2 0x7CF JUMPI DUP2 PUSH4 0x2DC74C20 EQ PUSH2 0x797 JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x76D JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x727 JUMPI DUP2 PUSH4 0x38E901B6 EQ PUSH2 0x6EF JUMPI DUP2 PUSH4 0x40DFB1DC EQ PUSH2 0x624 JUMPI DUP2 PUSH4 0x65F6C6F5 EQ PUSH2 0x40F JUMPI DUP2 PUSH4 0x68841431 EQ PUSH2 0x605 JUMPI DUP2 PUSH4 0x7A1AC61E EQ PUSH2 0x4A2 JUMPI DUP2 PUSH4 0x7E3B6451 EQ PUSH2 0x44D JUMPI DUP2 PUSH4 0x85102404 EQ PUSH2 0x40F JUMPI DUP2 PUSH4 0x9155E083 EQ PUSH2 0x394 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x340 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x325 JUMPI DUP2 PUSH4 0xA2240E19 EQ PUSH2 0x2CD JUMPI DUP2 PUSH4 0xA8497870 EQ PUSH2 0x2AB JUMPI DUP2 PUSH4 0xA9E75723 EQ PUSH2 0x28D JUMPI DUP2 PUSH4 0xAFF6C36A EQ PUSH2 0x232 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1E1 JUMPI POP DUP1 PUSH4 0xD5749D42 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xF49062CA EQ PUSH2 0x199 JUMPI PUSH4 0xFE575A87 EQ PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x182 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x1B1 PUSH2 0x1AB CALLDATASIZE PUSH2 0x954 JUMP JUMPDEST SWAP2 PUSH2 0xA78 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x182 PUSH2 0x923 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x22A SWAP2 CALLDATALOAD PUSH2 0x225 PUSH1 0x1 PUSH2 0x206 PUSH2 0x93E JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH32 0xCCCCC2B9FBBC74545C7F9DAC70EE99992BA9927917A3AD98439B8AECB678A431 SWAP2 PUSH2 0x270 PUSH2 0xB3D JUMP JUMPDEST DUP4 SLOAD SWAP1 PUSH1 0xFF DUP1 DUP4 AND ISZERO AND DUP1 SWAP3 PUSH1 0xFF NOT AND OR DUP6 SSTORE MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI DUP2 PUSH32 0x4D4981437D0211F9E6843EB024D9ADA1FA3A99514D4343D4AECE106DD11524BB SWAP3 CALLDATALOAD SWAP1 DUP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x312 PUSH2 0xB3D JUMP JUMPDEST SSTORE DUP1 PUSH1 0x5 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x361 PUSH2 0x93E JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC PUSH1 0x20 PUSH2 0x3D1 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x989 JUMP JUMPDEST SWAP1 PUSH2 0x3E2 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP4 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x43A PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x473 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SLOAD SWAP2 PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 DUP1 DUP4 KECCAK256 SLOAD SWAP3 PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH2 0x4BD PUSH2 0x923 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0xFF DUP4 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x5FD JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x5F3 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x5EA JUMPI JUMPDEST POP PUSH2 0x5DA JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 PUSH2 0x5BB JUMPI JUMPDEST POP PUSH1 0xFF DUP5 SLOAD DUP7 SHR AND ISZERO PUSH2 0x5AC JUMPI DUP1 PUSH2 0x546 PUSH2 0x54C SWAP3 PUSH2 0xBEA JUMP JUMPDEST POP PUSH2 0xC8A JUMP JUMPDEST POP DUP5 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP6 SSTORE PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x5 SSTORE PUSH2 0x56B JUMPI DUP3 DUP1 RETURN JUMPDEST DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP DUP4 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP5 SSTORE CODESIZE PUSH2 0x52C JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x510 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x508 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x4FE JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x63F PUSH2 0x923 JUMP JUMPDEST PUSH2 0x647 PUSH2 0x989 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 DUP5 SUB PUSH2 0x6EB JUMPI PUSH32 0x855852EDE06DF792CBE12BBB8B292FD0D251A1DCFEA1F072D5793F1930568EBF SWAP4 PUSH2 0x680 PUSH2 0xB3D JUMP JUMPDEST ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 ISZERO ISZERO AND OR SWAP1 SSTORE JUMPDEST DUP3 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 ISZERO ISZERO AND OR SWAP1 SSTORE PUSH2 0x6A9 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x717 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x195 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH2 0x741 PUSH2 0x93E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x75E JUMPI POP PUSH2 0x22A SWAP2 SWAP3 CALLDATALOAD PUSH2 0xDD3 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x22A SWAP2 CALLDATALOAD PUSH2 0x792 PUSH1 0x1 PUSH2 0x206 PUSH2 0x93E JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7BF PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x5E2EEB607131C4761F5374C6345D52581873680E97436D5D4763ADB8EABE151E DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x835 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x1B1 PUSH2 0x892 CALLDATASIZE PUSH2 0x954 JUMP JUMPDEST SWAP2 PUSH2 0x998 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8C0 PUSH2 0x923 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x22E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x912 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x939 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x939 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x939 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x939 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x939 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x939 JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND ISZERO PUSH2 0xA41 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 DUP3 ISZERO PUSH2 0xA2A JUMPI JUMPDEST POP POP PUSH2 0xA18 JUMPI PUSH1 0x4 SLOAD DUP2 GT PUSH2 0xA06 JUMPI PUSH1 0x5 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0x9FC JUMPI JUMPDEST POP PUSH2 0x9EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC9156BD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x92C6449 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F7B776B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP AND PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE DUP1 PUSH2 0x9C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA55 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA55 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP3 PUSH1 0xFF DUP5 SLOAD AND ISZERO PUSH2 0xB37 JUMPI PUSH32 0x8E386EA29F37964FDBDB87193D773DEA74E258B0F6108461C88C712051FB27BC SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP4 DUP5 DUP7 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP9 KECCAK256 PUSH2 0xACE DUP2 SLOAD PUSH2 0xA46 JUMP JUMPDEST SWAP1 SSTORE AND SWAP6 DUP7 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP4 DUP2 KECCAK256 PUSH2 0xAE6 DUP2 SLOAD PUSH2 0xA46 JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE DUP4 DUP2 KECCAK256 PUSH2 0xAFD DUP5 DUP3 SLOAD PUSH2 0xA6B JUMP JUMPDEST SWAP1 SSTORE DUP7 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE DUP4 DUP2 KECCAK256 PUSH2 0xB14 DUP5 DUP3 SLOAD PUSH2 0xA6B JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE TIMESTAMP DUP5 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP4 TIMESTAMP SWAP2 KECCAK256 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF8FDE46F3F6CFD0682A1D36D6F11CB582BFE7381D604F9632C25D17E31591E43 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x5E2EEB607131C4761F5374C6345D52581873680E97436D5D4763ADB8EABE151E SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB99 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xB99 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xC85 JUMPI DUP3 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xF8FDE46F3F6CFD0682A1D36D6F11CB582BFE7381D604F9632C25D17E31591E43 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x5E2EEB607131C4761F5374C6345D52581873680E97436D5D4763ADB8EABE151E SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xD46 JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xD46 JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xE57 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xD46 JUMPI DUP2 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xDE PUSH30 0x587855841EB4B5D17ADABEA5F5222E73BB4DAF6500C743B3133980D09464 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"384:6169:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;6513:20;384:6169;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;;;;;;;;;;;;5815:26:0;384:6169:35;;3283:4:0;384:6169:35;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;384:6169:35;;;;4967:24:0;384:6169:35;3283:4:0;:::i;:::-;5815:26;:::i;:::-;;384:6169:35;;;;;;;;;;;;;;;;;;;;;4585:26;3283:4:0;;;:::i;:::-;384:6169:35;;;;;;;4556:13;384:6169;;;;;;;;;;;;;;;4585:26;384:6169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5700:53;384:6169;;;;;;3283:4:0;;;:::i;:::-;384:6169:35;;5646:38;384:6169;;;;;;;;;;5700:53;384:6169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;384:6169:35;;;;;-1:-1:-1;;;;;384:6169:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5330:38;384:6169;;;:::i;:::-;;;:::i;:::-;3283:4:0;;;:::i;:::-;-1:-1:-1;;;;;384:6169:35;;;;5271:20;384:6169;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;;;;;;;;5330:38;384:6169;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;6377:20;384:6169;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;6009:13;384:6169;;;;;;;6046:16;384:6169;;;;;;;;6086:16;384:6169;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;:::i;:::-;3147:66:1;384:6169:35;;;;;;;;;4301:16:1;384:6169:35;;;;4724:16:1;;:34;;;;384:6169:35;;4788:16:1;:50;;;;384:6169:35;4853:13:1;:30;;;;384:6169:35;4849:91:1;;;-1:-1:-1;;384:6169:35;;;;;;;4977:67:1;;384:6169:35;;;;;;;;7148:18:1;7144:73;;2059:37:35;;2107:36;2059:37;;:::i;:::-;;2107:36;:::i;:::-;-1:-1:-1;384:6169:35;;-1:-1:-1;;384:6169:35;;;;;;;;;;;2243:38;384:6169;5064:101:1;;384:6169:35;;;5064:101:1;384:6169:35;;-1:-1:-1;;384:6169:35;;;;-1:-1:-1;384:6169:35;;5140:14:1;;384:6169:35;;5140:14:1;5064:101;;384:6169:35;;;7144:73:1;-1:-1:-1;384:6169:35;;-1:-1:-1;;;7189:17:1;;;4977:67;-1:-1:-1;;384:6169:35;;;;;4977:67:1;;;4849:91;384:6169:35;;-1:-1:-1;;;4906:23:1;;384:6169:35;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;;;-1:-1:-1;4724:34:1;;384:6169:35;;;;;;;;;;;;;;;;906:32;384:6169;;;;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;5011:48;3283:4:0;;;:::i;:::-;4838:158:35;;;-1:-1:-1;;;;;384:6169:35;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;4867:41;384:6169;;;;;;;;;;;-1:-1:-1;;;;;384:6169:35;;5011:48;384:6169;;4838:158;-1:-1:-1;;;;;384:6169:35;;;;4941:20;384:6169;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;4838:158;;384:6169;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;1034:51;384:6169;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;966:10:6;;-1:-1:-1;;;;;384:6169:35;;6489:34:0;6485:102;;384:6169:35;6597:37:0;384:6169:35;;;6597:37:0;:::i;6485:102::-;384:6169:35;-1:-1:-1;;;6546:30:0;;384:6169:35;;6546:30:0;384:6169:35;;;;;;;;;;;;;;;5398:25:0;384:6169:35;;3283:4:0;384:6169:35;;;:::i;3283:4:0:-;5398:25;:::i;384:6169:35:-;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;979:48;384:6169;;;;;;;;;;;;;;;;;;;;;;;;;;;556:30;384:6169;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;686:50;384:6169;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;384:6169:35;;;4967:24:0;384:6169:35;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;-1:-1:-1;;;;;384:6169:35;;:::i;:::-;;;;1092:51;384:6169;;;;;;;;;;;;;;;;;;-1:-1:-1;;384:6169:35;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3599:47:0;;;:87;;;;384:6169:35;;;;;;;3599:87:0;-1:-1:-1;;;1101:40:11;;-1:-1:-1;3599:87:0;;;384:6169:35;;;;-1:-1:-1;;;;;384:6169:35;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;384:6169:35;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;384:6169:35;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;2441:719::-;384:6169;2546:12;384:6169;;2545:13;2541:26;;-1:-1:-1;;;;;384:6169:35;;;2546:12;384:6169;;;2638:20;384:6169;;;;;;;;;2638:54;;;;2441:719;2634:114;;;;2822:17;384:6169;2813:26;;2809:94;;2936:17;384:6169;2927:26;;:40;;;;2441:719;2923:108;;;2441:719::o;2923:108::-;384:6169;;-1:-1:-1;;;2991:28:35;;2822:17;;2991:28;2927:40;2957:10;;;;2927:40;;;2809:94;384:6169;;-1:-1:-1;;;2863:28:35;;2822:17;;2863:28;2634:114;384:6169;;-1:-1:-1;;;2716:20:35;;;;;2638:54;384:6169;;;;2546:12;384:6169;;;2546:12;384:6169;;;2638:54;;;;2541:26;2560:7;;;:::o;384:6169::-;-1:-1:-1;;384:6169:35;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;3242:626::-;;;3341:12;384:6169;;;;;3340:13;3336:26;;3682:51;384:6169;;;;;;;;;;;;;;;3421:13;384:6169;;;;;;;3421:21;384:6169;;3421:21;:::i;:::-;384:6169;;;;;;;3421:13;384:6169;;;;;3453:19;384:6169;;3453:19;:::i;:::-;384:6169;;;;;3483:16;384:6169;;;;;3483:32;384:6169;;;3483:32;:::i;:::-;384:6169;;;;;3483:16;384:6169;;;;;3526:30;384:6169;;;3526:30;:::i;:::-;384:6169;;;;;3567:16;384:6169;;3592:15;384:6169;;;;;;;3592:15;;384:6169;;;;;;;;3592:15;384:6169;;;;3682:51;3242:626::o;3336:26::-;3355:7;;;;:::o;4196:103:0:-;966:10:6;-1:-1:-1;384:6169:35;;;;;;;;;;556:30;;384:6169;;4516:23:0;4512:108;;4196:103;:::o;4512:108::-;384:6169:35;;;;4562:47:0;;;;;;966:10:6;4562:47:0;;;384:6169:35;;;;;4562:47:0;4196:103;384:6169:35;-1:-1:-1;384:6169:35;-1:-1:-1;;;;;;;;;;;384:6169:35;;;-1:-1:-1;384:6169:35;966:10:6;-1:-1:-1;384:6169:35;;;;;-1:-1:-1;384:6169:35;;;4516:23:0;4512:108;;4196:103;:::o;7318:387::-;-1:-1:-1;;;;;384:6169:35;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2968:71:0;384:6169:35;;;;;;;;;;;;;;;;;;;;7557:4:0;384:6169:35;;;;;;;;966:10:6;7580:40:0;;;;;7557:4;7634:11;:::o;7480:219::-;7676:12;;;:::o;7318:387::-;-1:-1:-1;;;;;384:6169:35;-1:-1:-1;384:6169:35;;;;;;;;;;-1:-1:-1;;384:6169:35;556:30;;-1:-1:-1;;;;;;;;;;;2968:71:0;384:6169:35;;;;;;;;;;;;;;;;;;;;7557:4:0;384:6169:35;;;;;;;;7580:40:0;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7480:219::-;7676:12;;;;:::o;7318:387::-;;-1:-1:-1;384:6169:35;;;;-1:-1:-1;;;;;;;;;;;384:6169:35;;;;;;;;;;;;;;;;;;;;;;;;;7484:23:0;7480:219;384:6169:35;;;;;;;;;;;;;;;;;;;7557:4:0;384:6169:35;;;;;;;;7580:40:0;966:10:6;7580:40:0;;;7557:4;7634:11;:::o;7942:388::-;;-1:-1:-1;384:6169:35;;;;-1:-1:-1;;;;;;;;;;;384:6169:35;;;;;;;;;;;;;;;;;;;;;;;;;8105:219:0;384:6169:35;;;;;;;;;;;;;;;;;;;;;;;;;;8205:40:0;966:10:6;8205:40:0;;;384:6169:35;8259:11:0;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","HOOK_MANAGER_ROLE()":"2bedd955","afterTransfer(address,address,uint256)":"f49062ca","beforeTransfer(address,address,uint256)":"1ffb811f","blacklistedAddresses(address)":"d5749d42","getRoleAdmin(bytes32)":"248a9ca3","getTransferStats(address)":"7e3b6451","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","hooksEnabled()":"a8497870","initialize(address,uint256,uint256)":"7a1ac61e","isBlacklisted(address)":"fe575a87","isWhitelistedReceiver(address)":"85102404","isWhitelistedSender(address)":"1b9e2fad","lastTransferTime(address)":"0d2d8a31","maxTransferAmount()":"a9e75723","minTransferAmount()":"68841431","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","toggleHooks()":"aff6c36a","totalTransferred(address)":"38e901b6","transferCount(address)":"2dc74c20","updateBlacklist(address,bool)":"9155e083","updateLimits(uint256,uint256)":"a2240e19","updateWhitelist(address,bool,bool)":"40dfb1dc","whitelistedReceivers(address)":"65f6c6f5","whitelistedSenders(address)":"272efc69"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressBlacklisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HooksDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferAmountBelowMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferAmountExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"}],\"name\":\"BlacklistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"HooksToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"LimitsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransferExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSender\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOOK_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"afterTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"beforeTransfer\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklistedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getTransferStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hooksEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTransferAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTransferAmount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistedReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTransferTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransferAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTransferAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTransferred\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTransferAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTransferAmount\",\"type\":\"uint256\"}],\"name\":\"updateLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSender\",\"type\":\"bool\"}],\"name\":\"updateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedReceivers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedSenders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Sample transfer hook implementation for compliance and monitoring\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"TransferHook\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterTransfer(address,address,uint256)\":{\"notice\":\"Called after a transfer is executed\"},\"beforeTransfer(address,address,uint256)\":{\"notice\":\"Called before a transfer is executed\"},\"toggleHooks()\":{\"notice\":\"Toggle hooks on/off\"},\"updateBlacklist(address,bool)\":{\"notice\":\"Update blacklist status\"},\"updateLimits(uint256,uint256)\":{\"notice\":\"Update transfer limits\"},\"updateWhitelist(address,bool,bool)\":{\"notice\":\"Update whitelist status\"}},\"notice\":\"This contract provides hooks for transfer monitoring and compliance checks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransferHook.sol\":\"TransferHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/TransferHook.sol\":{\"keccak256\":\"0x252b2146b11e3b115b7eb9e278d9126931297bed5587046b438a3e305581b3f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74a076f59860ed1201de1a747093fc5b6d5a847540cc77ac7eff02b08fc92669\",\"dweb:/ipfs/QmUnrwpsGzDhGtNWg2k7n66EeVp31ydLk6Qxha8GViqtqU\"]},\"contracts/interfaces/ITransferHook.sol\":{\"keccak256\":\"0xc624b0c7aba10416c19b93c990c187c4e6c1add03d760bfad4a229355017f90f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83a25444eb34867c4e38e8ef278128f574218f1b7db8399f49046c22028464d2\",\"dweb:/ipfs/QmYnEwA7i12yxEqCm6xnTxQipe6c74gXgUJS4R7kAjirVE\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":11166,"contract":"contracts/TransferHook.sol:TransferHook","label":"hooksEnabled","offset":0,"slot":"0","type":"t_bool"},{"astId":11170,"contract":"contracts/TransferHook.sol:TransferHook","label":"whitelistedSenders","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":11174,"contract":"contracts/TransferHook.sol:TransferHook","label":"whitelistedReceivers","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"},{"astId":11178,"contract":"contracts/TransferHook.sol:TransferHook","label":"blacklistedAddresses","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"},{"astId":11180,"contract":"contracts/TransferHook.sol:TransferHook","label":"maxTransferAmount","offset":0,"slot":"4","type":"t_uint256"},{"astId":11182,"contract":"contracts/TransferHook.sol:TransferHook","label":"minTransferAmount","offset":0,"slot":"5","type":"t_uint256"},{"astId":11186,"contract":"contracts/TransferHook.sol:TransferHook","label":"transferCount","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":11190,"contract":"contracts/TransferHook.sol:TransferHook","label":"totalTransferred","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":11194,"contract":"contracts/TransferHook.sol:TransferHook","label":"lastTransferTime","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/interfaces/ICircuitBreaker.sol":{"ICircuitBreaker":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"checkTransfer","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActivationReason","outputs":[{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isActive","outputs":[{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkTransfer(address,address,uint256)":"cc1dd94f","getActivationReason()":"789b6315","isActive()":"22f3e2d4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkTransfer\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivationReason\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for circuit breaker functionality\",\"kind\":\"dev\",\"methods\":{\"checkTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer\",\"from\":\"The address tokens are transferred from\",\"to\":\"The address tokens are transferred to\"}},\"getActivationReason()\":{\"returns\":{\"reason\":\"The reason the circuit breaker was activated\"}},\"isActive()\":{\"returns\":{\"isActive\":\"Whether the circuit breaker is currently active\"}}},\"title\":\"ICircuitBreaker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkTransfer(address,address,uint256)\":{\"notice\":\"Check if a transfer should be allowed based on circuit breaker rules\"},\"getActivationReason()\":{\"notice\":\"Get the reason for circuit breaker activation\"},\"isActive()\":{\"notice\":\"Get the current circuit breaker state\"}},\"notice\":\"This interface provides methods for checking transfers against circuit breaker rules\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICircuitBreaker.sol\":\"ICircuitBreaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ICircuitBreaker.sol\":{\"keccak256\":\"0x076696fa218ef87fcfc4b27066ce5df11907154b4818f0127d8ea57021c3c5d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82eb895fd30e91c642f2e5830a8563a12c83632e292f764a3e2a71bef950c636\",\"dweb:/ipfs/QmdMSDNQ3Cb8xacHEaTXUPMimFs38W8NCKP8dFtTC7s5sX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/ITransferHook.sol":{"ITransferHook":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"afterTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"beforeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"afterTransfer(address,address,uint256)":"f49062ca","beforeTransfer(address,address,uint256)":"1ffb811f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"afterTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"beforeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for transfer hooks that can be called before and after transfers\",\"kind\":\"dev\",\"methods\":{\"afterTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens transferred\",\"from\":\"The address tokens were transferred from\",\"to\":\"The address tokens were transferred to\"}},\"beforeTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer\",\"from\":\"The address tokens are transferred from\",\"to\":\"The address tokens are transferred to\"}}},\"title\":\"ITransferHook\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterTransfer(address,address,uint256)\":{\"notice\":\"Called after a transfer is executed\"},\"beforeTransfer(address,address,uint256)\":{\"notice\":\"Called before a transfer is executed\"}},\"notice\":\"This interface allows for custom logic to be executed during token transfers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITransferHook.sol\":\"ITransferHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ITransferHook.sol\":{\"keccak256\":\"0xc624b0c7aba10416c19b93c990c187c4e6c1add03d760bfad4a229355017f90f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83a25444eb34867c4e38e8ef278128f574218f1b7db8399f49046c22028464d2\",\"dweb:/ipfs/QmYnEwA7i12yxEqCm6xnTxQipe6c74gXgUJS4R7kAjirVE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}