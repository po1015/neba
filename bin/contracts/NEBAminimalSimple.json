{
    "contractName": "NEBAminimalSimple",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "AddressEmptyCode",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ECDSAInvalidSignature",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "length",
                    "type": "uint256"
                }
            ],
            "name": "ECDSAInvalidSignatureLength",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "ECDSAInvalidSignatureS",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address"
                }
            ],
            "name": "ERC1967InvalidImplementation",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1967NonPayable",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "increasedSupply",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "cap",
                    "type": "uint256"
                }
            ],
            "name": "ERC20ExceededCap",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "cap",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InvalidCap",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                }
            ],
            "name": "ERC2612ExpiredSignature",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "signer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC2612InvalidSigner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedCall",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "currentNonce",
                    "type": "uint256"
                }
            ],
            "name": "InvalidAccountNonce",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidAddress",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidInitialization",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotInitializing",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ReentrancyGuardReentrantCall",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "UUPSUnauthorizedCallContext",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "slot",
                    "type": "bytes32"
                }
            ],
            "name": "UUPSUnsupportedProxiableUUID",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "EIP712DomainChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint64",
                    "name": "version",
                    "type": "uint64"
                }
            ],
            "name": "Initialized",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "oldTreasury",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newTreasury",
                    "type": "address"
                }
            ],
            "name": "TreasuryUpdated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address"
                }
            ],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "MAX_SUPPLY",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "TOKEN_DECIMALS",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "TOKEN_NAME",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "TOKEN_SYMBOL",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "UPGRADE_INTERFACE_VERSION",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "admin",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cap",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "eip712Domain",
            "outputs": [
                {
                    "internalType": "bytes1",
                    "name": "fields",
                    "type": "bytes1"
                },
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "version",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "chainId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "verifyingContract",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256[]",
                    "name": "extensions",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_treasury",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_admin",
                    "type": "address"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isCapImmutable",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mintToTreasury",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "nonces",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "proxiableUUID",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "treasury",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_treasury",
                    "type": "address"
                }
            ],
            "name": "updateTreasury",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newImplementation",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCapImmutable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple NEBA token contract deployable on Base Sepolia\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"NEBA Token Simple\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAX_SUPPLY()\":{\"notice\":\"Maximum total supply: 1 billion tokens\"},\"TOKEN_DECIMALS()\":{\"notice\":\"Token decimals\"},\"TOKEN_NAME()\":{\"notice\":\"Token name\"},\"TOKEN_SYMBOL()\":{\"notice\":\"Token symbol\"},\"admin()\":{\"notice\":\"Admin address\"},\"cap()\":{\"notice\":\"Returns the immutable cap value\"},\"initialize(address,address)\":{\"notice\":\"Initialize the NEBA token contract\"},\"isCapImmutable()\":{\"notice\":\"Confirms that the token cap is immutable\"},\"mintToTreasury(uint256)\":{\"notice\":\"Mint additional tokens to treasury\"},\"treasury()\":{\"notice\":\"Treasury address\"},\"updateTreasury(address)\":{\"notice\":\"Update treasury address\"}},\"notice\":\"This contract provides essential NEBA functionality without modular complexity\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"e:/Work/nebaPresale/neba token contract/neba/contracts/NEBAminimalSimple.sol\":\"NEBAminimalSimple\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"e:/Work/nebaPresale/neba token contract/neba/contracts/NEBAminimalSimple.sol\":{\"keccak256\":\"0x38a6ea5e5f0d74e317cc2969c1bd6ba9f22b071c39875f12b349b830fa0b5874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b7f16389a5a89ce14cf1558a9c269e36be957aae617c2641fa46a62ddbfa651\",\"dweb:/ipfs/Qmb356G3k9h2W8QvyRmnxSNAoybWK8EmKsK4Q7V2CbALNe\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x28cdbe1905f1b59a59324640b19f693ac786d025f712cdd7ec4b8321d1096e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9264a989ade11cdbb669089e81806a8dfc1902f742e9faecf1d8de3a01d4d365\",\"dweb:/ipfs/QmaQMvDk1mHkNUfWKdLzC2pbDpsHomQZauPxxeWBE2m6Vt\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd3aec3c121dfa734107e5b53acf785e4a6897460e008f67871b0e35336c827b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4458de48a0b82d901e207d7d21b26ed7ca6a5fcd04f4c1f800a066dac21858de\",\"dweb:/ipfs/QmNzc8JYK7xKt7fhFNEwxjZoMrdKLUmZk1hTiu9VR12gg3\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xda0786bbb2bb41deaa94d4ed5da60eee4a83f193719dbc97adbcf8ea4c0cee6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18069ce93e0361ebc018c2292a9467ee5dcd6f040972ed30cfd787d9a2e270c3\",\"dweb:/ipfs/QmdPCHzqqwGeHJi1hHzLxFRRPBL1uvGGXiUweyXeoekg3u\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xa447ecaee9f1db2173ac7d5c0e286e86b0373f33b60e5c5bb4bf54fd6a47a102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://696bb6a8b41ab95a60491d67a33cb64cafb4c692b56127688b988d07972251e7\",\"dweb:/ipfs/QmfVEBog4kyUC2duCYbzaMm7MU3pDeH52V5GubHgiZQysD\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x68bf902a7780796d5ea23700172a72ddb051474255102292f47a3be1eca79456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f56635435a5c9b9097e7ffd6c9bd2be5a750645d772fa2c8886b6478b0372ba\",\"dweb:/ipfs/QmcqKZD8zXDs241zGNWofHbmHiFbhANFqGmTzoPW77mgeT\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
    "bytecode": "60a080604052346100c257306080525f5160206120535f395f51905f525460ff8160401c166100b3576002600160401b03196001600160401b03821601610060575b604051611f8c90816100c782396080518181816108cb015261099b0152f35b6001600160401b0319166001600160401b039081175f5160206120535f395f51905f525581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f80610041565b63f92ee8a960e01b5f5260045ffd5b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806306fdde031461167c578063095ea7b31461165657806318160ddd1461162d578063188214001461161257806323b872dd1461153a5780632a9053181461151f578063313ce5671461089e57806332cb6b0c146114f9578063355274ea146114f95780633644e515146114d7578063485cc95514610b5d5780634f1ef2861461091f57806352d1902d146108b95780635b7f415c1461089e57806361d027b31461087757806370a08231146108335780637ecebe00146107dc5780637f51bb1f14610758578063809c585c1461073d57806384b0196e146105f357806395d89b41146104fd578063a65948a314610395578063a9059cbb14610364578063ad3cb1cc14610319578063d505accf146101b5578063dd62ed3e1461016e5763f851a44014610142575f80fd5b3461016a575f36600319011261016a576001546040516001600160a01b039091168152602090f35b5f80fd5b3461016a57604036600319011261016a5761018761175d565b610198610192611773565b91611a04565b9060018060a01b03165f52602052602060405f2054604051908152f35b3461016a5760e036600319011261016a576101ce61175d565b6101d6611773565b604435906064359260843560ff8116810361016a57844211610306576102c96102d29160018060a01b03841696875f527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261029760e082611789565b5190206102a2611bb6565b906040519161190160f01b83526002830152602282015260c43591604260a4359220611c48565b90929192611cd5565b6001600160a01b03168481036102ef57506102ed9350611b53565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461016a575f36600319011261016a5761036060405161033a604082611789565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611739565b0390f35b3461016a57604036600319011261016a5761038a61038061175d565b6024359033611a82565b602060405160018152f35b3461016a57602036600319011261016a576004356103be60018060a01b03600154163314611a3c565b6b033b2e3c9fd0803ce80000006103e3825f516020611ed75f395f51905f5254611a75565b116104c3575f546001600160a01b03169081156104b0577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826104375f945f516020611ed75f395f51905f5254611a75565b5f516020611ed75f395f51905f52558484525f516020611e775f395f51905f52825260408420818154019055604051908152a35f516020611ed75f395f51905f52546b033b2e3c9fd0803ce8000000811161048e57005b63279e7e1560e21b5f526004526b033b2e3c9fd0803ce800000060245260445ffd5b63ec442f0560e01b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b6044820152606490fd5b3461016a575f36600319011261016a576040515f5f516020611eb75f395f51905f525461052981611812565b80845290600181169081156105cf5750600114610565575b6103608361055181850382611789565b604051918291602083526020830190611739565b5f516020611eb75f395f51905f525f9081527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa939250905b8082106105b557509091508101602001610551610541565b91926001816020925483858801015201910190929161059d565b60ff191660208086019190915291151560051b840190910191506105519050610541565b3461016a575f36600319011261016a577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580610714575b156106d75761067b61063c61184a565b610644611919565b6020610689604051926106578385611789565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190611739565b908582036040870152611739565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b8281106106c057505050500390f35b8351855286955093810193928101926001016106b1565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101541561062c565b3461016a575f36600319011261016a57602060405160018152f35b3461016a57602036600319011261016a5761077161175d565b61078660018060a01b03600154163314611a3c565b6001600160a01b031661079a8115156119c6565b5f80546001600160a01b03198116831782556001600160a01b0316907f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a9080a3005b3461016a57602036600319011261016a576001600160a01b036107fd61175d565b165f527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00602052602060405f2054604051908152f35b3461016a57602036600319011261016a576001600160a01b0361085461175d565b165f525f516020611e775f395f51905f52602052602060405f2054604051908152f35b3461016a575f36600319011261016a575f546040516001600160a01b039091168152602090f35b3461016a575f36600319011261016a57602060405160128152f35b3461016a575f36600319011261016a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036109105760206040515f516020611f175f395f51905f528152f35b63703e46dd60e11b5f5260045ffd5b604036600319011261016a5761093361175d565b6024359067ffffffffffffffff821161016a573660238301121561016a57816004013590610960826117ab565b9161096e6040519384611789565b8083526020830193366024838301011161016a57815f926024602093018737840101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610b3b575b50610910576109e060018060a01b03600154163314611a3c565b6040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa5f9181610b07575b50610a225784634c9c8ce360e01b5f5260045260245ffd5b805f516020611f175f395f51905f52869203610af55750823b15610ae3575f516020611f175f395f51905f5280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610aca575f80916102ed945190845af43d15610ac2573d91610aa6836117ab565b92610ab46040519485611789565b83523d5f602085013e611df8565b606091611df8565b50505034610ad457005b63b398979f60e01b5f5260045ffd5b634c9c8ce360e01b5f5260045260245ffd5b632a87526960e21b5f5260045260245ffd5b9091506020813d602011610b33575b81610b2360209383611789565b8101031261016a57519086610a0a565b3d9150610b16565b5f516020611f175f395f51905f52546001600160a01b031614159050846109c6565b3461016a57604036600319011261016a57610b7661175d565b610b7e611773565b905f516020611f375f395f51905f52549060ff8260401c16159167ffffffffffffffff8116801590816114cf575b60011490816114c5575b1590816114bc575b506114ad5767ffffffffffffffff1981166001175f516020611f375f395f51905f525582611481575b506001600160a01b031691821580158061146f575b610c05906119c6565b610c0d6117c7565b610c156117ef565b90610c1e611c1d565b610c26611c1d565b80519067ffffffffffffffff8211611152578190610c515f516020611e575f395f51905f5254611812565b601f81116113f5575b50602090601f8311600114611377575f9261136c575b50508160011b915f199060031b1c1916175f516020611e575f395f51905f52555b80519067ffffffffffffffff8211611152578190610cbc5f516020611eb75f395f51905f5254611812565b601f81116112f2575b50602090601f8311600114611274575f92611269575b50508160011b915f199060031b1c1916175f516020611eb75f395f51905f52555b610d04611c1d565b610d0c611c1d565b6b033b2e3c9fd0803ce80000007f0f070392f17d5f958cc1ac31867dabecfc5c9758b4a419a200803226d7155d0055610d436117c7565b91610d4c611c1d565b604092835190610d5c8583611789565b60018252603160f81b6020830152610d72611c1d565b80519067ffffffffffffffff8211611152578190610d9d5f516020611e975f395f51905f5254611812565b601f81116111ef575b50602090601f8311600114611171575f92611166575b50508160011b915f199060031b1c1916175f516020611e975f395f51905f52555b80519067ffffffffffffffff8211611152578190610e085f516020611ef75f395f51905f5254611812565b601f81116110d8575b50602090601f831160011461105a575f9261104f575b50508160011b915f199060031b1c1916175f516020611ef75f395f51905f52555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155610e96611c1d565b610e9e611c1d565b610ea6611c1d565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055846bffffffffffffffffffffffff60a01b5f5416175f5560018060a01b03166bffffffffffffffffffffffff60a01b60015416176001556104b0575f516020611ed75f395f51905f52546a52b7d2dcc80cd2e4000000810180911161103b575f516020611ed75f395f51905f5255825f525f516020611e775f395f51905f52602052805f206a52b7d2dcc80cd2e40000008154019055825f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602084516a52b7d2dcc80cd2e40000008152a35f516020611ed75f395f51905f52546b033b2e3c9fd0803ce8000000811161048e575051915f7f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a8180a3610fe657005b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff0000000000000000195f516020611f375f395f51905f5254165f516020611f375f395f51905f525560018152a1005b634e487b7160e01b5f52601160045260245ffd5b015190508780610e27565b5f516020611ef75f395f51905f525f9081528281209350601f198516905b8181106110c057509084600195949392106110a8575b505050811b015f516020611ef75f395f51905f5255610e48565b01515f1960f88460031b161c1916905587808061108e565b92936020600181928786015181550195019301611078565b5f516020611ef75f395f51905f525f529091507f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f840160051c81019160208510611148575b90601f859493920160051c01905b81811061113a5750610e11565b5f815584935060010161112d565b909150819061111f565b634e487b7160e01b5f52604160045260245ffd5b015190508880610dbc565b5f516020611e975f395f51905f525f9081528281209350601f198516905b8181106111d757509084600195949392106111bf575b505050811b015f516020611e975f395f51905f5255610ddd565b01515f1960f88460031b161c191690558880806111a5565b9293602060018192878601518155019501930161118f565b5f516020611e975f395f51905f525f529091507f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c8101916020851061125f575b90601f859493920160051c01905b8181106112515750610da6565b5f8155849350600101611244565b9091508190611236565b015190508680610cdb565b5f516020611eb75f395f51905f525f9081528281209350601f198516905b8181106112da57509084600195949392106112c2575b505050811b015f516020611eb75f395f51905f5255610cfc565b01515f1960f88460031b161c191690558680806112a8565b92936020600181928786015181550195019301611292565b5f516020611eb75f395f51905f525f529091507f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa601f840160051c81019160208510611362575b90601f859493920160051c01905b8181106113545750610cc5565b5f8155849350600101611347565b9091508190611339565b015190508780610c70565b5f516020611e575f395f51905f525f9081528281209350601f198516905b8181106113dd57509084600195949392106113c5575b505050811b015f516020611e575f395f51905f5255610c91565b01515f1960f88460031b161c191690558780806113ab565b92936020600181928786015181550195019301611395565b5f516020611e575f395f51905f525f529091507f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0601f840160051c81019160208510611465575b90601f859493920160051c01905b8181106114575750610c5a565b5f815584935060010161144a565b909150819061143c565b506001600160a01b0382161515610bfc565b68ffffffffffffffffff191668010000000000000001175f516020611f375f395f51905f525583610be7565b63f92ee8a960e01b5f5260045ffd5b90501585610bbe565b303b159150610bb6565b849150610bac565b3461016a575f36600319011261016a5760206114f1611bb6565b604051908152f35b3461016a575f36600319011261016a5760206040516b033b2e3c9fd0803ce80000008152f35b3461016a575f36600319011261016a576103606105516117ef565b3461016a57606036600319011261016a5761155361175d565b61155b611773565b6044359061156883611a04565b335f9081526020919091526040902054925f19841061158c575b61038a9350611a82565b8284106115f7576001600160a01b038116156115e45733156115d15761038a936115b582611a04565b60018060a01b0333165f526020528360405f2091039055611582565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8284637dc7a0d960e11b5f523360045260245260445260645ffd5b3461016a575f36600319011261016a576103606105516117c7565b3461016a575f36600319011261016a5760205f516020611ed75f395f51905f5254604051908152f35b3461016a57604036600319011261016a5761038a61167261175d565b6024359033611b53565b3461016a575f36600319011261016a576040515f5f516020611e575f395f51905f52546116a881611812565b80845290600181169081156105cf57506001146116cf576103608361055181850382611789565b5f516020611e575f395f51905f525f9081527f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0939250905b80821061171f57509091508101602001610551610541565b919260018160209254838588010152019101909291611707565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361016a57565b602435906001600160a01b038216820361016a57565b90601f8019910116810190811067ffffffffffffffff82111761115257604052565b67ffffffffffffffff811161115257601f01601f191660200190565b604051906117d6604083611789565b600a8252692722a120902a37b5b2b760b11b6020830152565b604051906117fe604083611789565b6005825264244e45424160d81b6020830152565b90600182811c92168015611840575b602083101461182c57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611821565b604051905f825f516020611e975f395f51905f52549161186983611812565b80835292600181169081156118fa575060011461188f575b61188d92500383611789565b565b505f516020611e975f395f51905f525f90815290917f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d5b8183106118de57505090602061188d92820101611881565b60209193508060019154838589010152019101909184926118c6565b6020925061188d94915060ff191682840152151560051b820101611881565b604051905f825f516020611ef75f395f51905f52549161193883611812565b80835292600181169081156118fa575060011461195b5761188d92500383611789565b505f516020611ef75f395f51905f525f90815290917f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b755b8183106119aa57505090602061188d92820101611881565b6020919350806001915483858901015201910190918492611992565b156119cd57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b15611a4357565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b9190820180921161103b57565b6001600160a01b0316908115611b40576001600160a01b03169182156104b057815f525f516020611e775f395f51905f5260205260405f2054818110611b2757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f516020611e775f395f51905f5284520360405f2055845f525f516020611e775f395f51905f52825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b916001600160a01b0383169182156115e4576001600160a01b03169283156115d1577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591611ba2602092611a04565b855f5282528060405f2055604051908152a3565b611bbe611d49565b611bc6611db3565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152611c1760c082611789565b51902090565b60ff5f516020611f375f395f51905f525460401c1615611c3957565b631afcd79f60e31b5f5260045ffd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611cca579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15611cbf575f516001600160a01b03811615611cb557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015611d355780611ce7575050565b60018103611cfe5763f645eedf60e01b5f5260045ffd5b60028103611d19575063fce698f760e01b5f5260045260245ffd5b600314611d235750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b611d5161184a565b8051908115611d61576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015611d8e5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b611dbb611919565b8051908115611dcb576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015611d8e5790565b90611e1c5750805115611e0d57602081519101fd5b63d6bda27560e01b5f5260045ffd5b81511580611e4d575b611e2d575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b15611e2556fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10252c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0452c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212206ac66af44895aaa7b94c7b2d1adfc572d927cb8eb9458fa6d692d2d71ad490ba64736f6c634300081e0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "deployedBytecode": "60806040526004361015610011575f80fd5b5f3560e01c806306fdde031461167c578063095ea7b31461165657806318160ddd1461162d578063188214001461161257806323b872dd1461153a5780632a9053181461151f578063313ce5671461089e57806332cb6b0c146114f9578063355274ea146114f95780633644e515146114d7578063485cc95514610b5d5780634f1ef2861461091f57806352d1902d146108b95780635b7f415c1461089e57806361d027b31461087757806370a08231146108335780637ecebe00146107dc5780637f51bb1f14610758578063809c585c1461073d57806384b0196e146105f357806395d89b41146104fd578063a65948a314610395578063a9059cbb14610364578063ad3cb1cc14610319578063d505accf146101b5578063dd62ed3e1461016e5763f851a44014610142575f80fd5b3461016a575f36600319011261016a576001546040516001600160a01b039091168152602090f35b5f80fd5b3461016a57604036600319011261016a5761018761175d565b610198610192611773565b91611a04565b9060018060a01b03165f52602052602060405f2054604051908152f35b3461016a5760e036600319011261016a576101ce61175d565b6101d6611773565b604435906064359260843560ff8116810361016a57844211610306576102c96102d29160018060a01b03841696875f527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261029760e082611789565b5190206102a2611bb6565b906040519161190160f01b83526002830152602282015260c43591604260a4359220611c48565b90929192611cd5565b6001600160a01b03168481036102ef57506102ed9350611b53565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461016a575f36600319011261016a5761036060405161033a604082611789565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611739565b0390f35b3461016a57604036600319011261016a5761038a61038061175d565b6024359033611a82565b602060405160018152f35b3461016a57602036600319011261016a576004356103be60018060a01b03600154163314611a3c565b6b033b2e3c9fd0803ce80000006103e3825f516020611ed75f395f51905f5254611a75565b116104c3575f546001600160a01b03169081156104b0577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826104375f945f516020611ed75f395f51905f5254611a75565b5f516020611ed75f395f51905f52558484525f516020611e775f395f51905f52825260408420818154019055604051908152a35f516020611ed75f395f51905f52546b033b2e3c9fd0803ce8000000811161048e57005b63279e7e1560e21b5f526004526b033b2e3c9fd0803ce800000060245260445ffd5b63ec442f0560e01b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b6044820152606490fd5b3461016a575f36600319011261016a576040515f5f516020611eb75f395f51905f525461052981611812565b80845290600181169081156105cf5750600114610565575b6103608361055181850382611789565b604051918291602083526020830190611739565b5f516020611eb75f395f51905f525f9081527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa939250905b8082106105b557509091508101602001610551610541565b91926001816020925483858801015201910190929161059d565b60ff191660208086019190915291151560051b840190910191506105519050610541565b3461016a575f36600319011261016a577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580610714575b156106d75761067b61063c61184a565b610644611919565b6020610689604051926106578385611789565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190611739565b908582036040870152611739565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b8281106106c057505050500390f35b8351855286955093810193928101926001016106b1565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101541561062c565b3461016a575f36600319011261016a57602060405160018152f35b3461016a57602036600319011261016a5761077161175d565b61078660018060a01b03600154163314611a3c565b6001600160a01b031661079a8115156119c6565b5f80546001600160a01b03198116831782556001600160a01b0316907f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a9080a3005b3461016a57602036600319011261016a576001600160a01b036107fd61175d565b165f527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00602052602060405f2054604051908152f35b3461016a57602036600319011261016a576001600160a01b0361085461175d565b165f525f516020611e775f395f51905f52602052602060405f2054604051908152f35b3461016a575f36600319011261016a575f546040516001600160a01b039091168152602090f35b3461016a575f36600319011261016a57602060405160128152f35b3461016a575f36600319011261016a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036109105760206040515f516020611f175f395f51905f528152f35b63703e46dd60e11b5f5260045ffd5b604036600319011261016a5761093361175d565b6024359067ffffffffffffffff821161016a573660238301121561016a57816004013590610960826117ab565b9161096e6040519384611789565b8083526020830193366024838301011161016a57815f926024602093018737840101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610b3b575b50610910576109e060018060a01b03600154163314611a3c565b6040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa5f9181610b07575b50610a225784634c9c8ce360e01b5f5260045260245ffd5b805f516020611f175f395f51905f52869203610af55750823b15610ae3575f516020611f175f395f51905f5280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610aca575f80916102ed945190845af43d15610ac2573d91610aa6836117ab565b92610ab46040519485611789565b83523d5f602085013e611df8565b606091611df8565b50505034610ad457005b63b398979f60e01b5f5260045ffd5b634c9c8ce360e01b5f5260045260245ffd5b632a87526960e21b5f5260045260245ffd5b9091506020813d602011610b33575b81610b2360209383611789565b8101031261016a57519086610a0a565b3d9150610b16565b5f516020611f175f395f51905f52546001600160a01b031614159050846109c6565b3461016a57604036600319011261016a57610b7661175d565b610b7e611773565b905f516020611f375f395f51905f52549060ff8260401c16159167ffffffffffffffff8116801590816114cf575b60011490816114c5575b1590816114bc575b506114ad5767ffffffffffffffff1981166001175f516020611f375f395f51905f525582611481575b506001600160a01b031691821580158061146f575b610c05906119c6565b610c0d6117c7565b610c156117ef565b90610c1e611c1d565b610c26611c1d565b80519067ffffffffffffffff8211611152578190610c515f516020611e575f395f51905f5254611812565b601f81116113f5575b50602090601f8311600114611377575f9261136c575b50508160011b915f199060031b1c1916175f516020611e575f395f51905f52555b80519067ffffffffffffffff8211611152578190610cbc5f516020611eb75f395f51905f5254611812565b601f81116112f2575b50602090601f8311600114611274575f92611269575b50508160011b915f199060031b1c1916175f516020611eb75f395f51905f52555b610d04611c1d565b610d0c611c1d565b6b033b2e3c9fd0803ce80000007f0f070392f17d5f958cc1ac31867dabecfc5c9758b4a419a200803226d7155d0055610d436117c7565b91610d4c611c1d565b604092835190610d5c8583611789565b60018252603160f81b6020830152610d72611c1d565b80519067ffffffffffffffff8211611152578190610d9d5f516020611e975f395f51905f5254611812565b601f81116111ef575b50602090601f8311600114611171575f92611166575b50508160011b915f199060031b1c1916175f516020611e975f395f51905f52555b80519067ffffffffffffffff8211611152578190610e085f516020611ef75f395f51905f5254611812565b601f81116110d8575b50602090601f831160011461105a575f9261104f575b50508160011b915f199060031b1c1916175f516020611ef75f395f51905f52555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155610e96611c1d565b610e9e611c1d565b610ea6611c1d565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055846bffffffffffffffffffffffff60a01b5f5416175f5560018060a01b03166bffffffffffffffffffffffff60a01b60015416176001556104b0575f516020611ed75f395f51905f52546a52b7d2dcc80cd2e4000000810180911161103b575f516020611ed75f395f51905f5255825f525f516020611e775f395f51905f52602052805f206a52b7d2dcc80cd2e40000008154019055825f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602084516a52b7d2dcc80cd2e40000008152a35f516020611ed75f395f51905f52546b033b2e3c9fd0803ce8000000811161048e575051915f7f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a8180a3610fe657005b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff0000000000000000195f516020611f375f395f51905f5254165f516020611f375f395f51905f525560018152a1005b634e487b7160e01b5f52601160045260245ffd5b015190508780610e27565b5f516020611ef75f395f51905f525f9081528281209350601f198516905b8181106110c057509084600195949392106110a8575b505050811b015f516020611ef75f395f51905f5255610e48565b01515f1960f88460031b161c1916905587808061108e565b92936020600181928786015181550195019301611078565b5f516020611ef75f395f51905f525f529091507f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f840160051c81019160208510611148575b90601f859493920160051c01905b81811061113a5750610e11565b5f815584935060010161112d565b909150819061111f565b634e487b7160e01b5f52604160045260245ffd5b015190508880610dbc565b5f516020611e975f395f51905f525f9081528281209350601f198516905b8181106111d757509084600195949392106111bf575b505050811b015f516020611e975f395f51905f5255610ddd565b01515f1960f88460031b161c191690558880806111a5565b9293602060018192878601518155019501930161118f565b5f516020611e975f395f51905f525f529091507f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c8101916020851061125f575b90601f859493920160051c01905b8181106112515750610da6565b5f8155849350600101611244565b9091508190611236565b015190508680610cdb565b5f516020611eb75f395f51905f525f9081528281209350601f198516905b8181106112da57509084600195949392106112c2575b505050811b015f516020611eb75f395f51905f5255610cfc565b01515f1960f88460031b161c191690558680806112a8565b92936020600181928786015181550195019301611292565b5f516020611eb75f395f51905f525f529091507f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa601f840160051c81019160208510611362575b90601f859493920160051c01905b8181106113545750610cc5565b5f8155849350600101611347565b9091508190611339565b015190508780610c70565b5f516020611e575f395f51905f525f9081528281209350601f198516905b8181106113dd57509084600195949392106113c5575b505050811b015f516020611e575f395f51905f5255610c91565b01515f1960f88460031b161c191690558780806113ab565b92936020600181928786015181550195019301611395565b5f516020611e575f395f51905f525f529091507f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0601f840160051c81019160208510611465575b90601f859493920160051c01905b8181106114575750610c5a565b5f815584935060010161144a565b909150819061143c565b506001600160a01b0382161515610bfc565b68ffffffffffffffffff191668010000000000000001175f516020611f375f395f51905f525583610be7565b63f92ee8a960e01b5f5260045ffd5b90501585610bbe565b303b159150610bb6565b849150610bac565b3461016a575f36600319011261016a5760206114f1611bb6565b604051908152f35b3461016a575f36600319011261016a5760206040516b033b2e3c9fd0803ce80000008152f35b3461016a575f36600319011261016a576103606105516117ef565b3461016a57606036600319011261016a5761155361175d565b61155b611773565b6044359061156883611a04565b335f9081526020919091526040902054925f19841061158c575b61038a9350611a82565b8284106115f7576001600160a01b038116156115e45733156115d15761038a936115b582611a04565b60018060a01b0333165f526020528360405f2091039055611582565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8284637dc7a0d960e11b5f523360045260245260445260645ffd5b3461016a575f36600319011261016a576103606105516117c7565b3461016a575f36600319011261016a5760205f516020611ed75f395f51905f5254604051908152f35b3461016a57604036600319011261016a5761038a61167261175d565b6024359033611b53565b3461016a575f36600319011261016a576040515f5f516020611e575f395f51905f52546116a881611812565b80845290600181169081156105cf57506001146116cf576103608361055181850382611789565b5f516020611e575f395f51905f525f9081527f2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab0939250905b80821061171f57509091508101602001610551610541565b919260018160209254838588010152019101909291611707565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361016a57565b602435906001600160a01b038216820361016a57565b90601f8019910116810190811067ffffffffffffffff82111761115257604052565b67ffffffffffffffff811161115257601f01601f191660200190565b604051906117d6604083611789565b600a8252692722a120902a37b5b2b760b11b6020830152565b604051906117fe604083611789565b6005825264244e45424160d81b6020830152565b90600182811c92168015611840575b602083101461182c57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611821565b604051905f825f516020611e975f395f51905f52549161186983611812565b80835292600181169081156118fa575060011461188f575b61188d92500383611789565b565b505f516020611e975f395f51905f525f90815290917f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d5b8183106118de57505090602061188d92820101611881565b60209193508060019154838589010152019101909184926118c6565b6020925061188d94915060ff191682840152151560051b820101611881565b604051905f825f516020611ef75f395f51905f52549161193883611812565b80835292600181169081156118fa575060011461195b5761188d92500383611789565b505f516020611ef75f395f51905f525f90815290917f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b755b8183106119aa57505090602061188d92820101611881565b6020919350806001915483858901015201910190918492611992565b156119cd57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b15611a4357565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b9190820180921161103b57565b6001600160a01b0316908115611b40576001600160a01b03169182156104b057815f525f516020611e775f395f51905f5260205260405f2054818110611b2757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f516020611e775f395f51905f5284520360405f2055845f525f516020611e775f395f51905f52825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b916001600160a01b0383169182156115e4576001600160a01b03169283156115d1577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591611ba2602092611a04565b855f5282528060405f2055604051908152a3565b611bbe611d49565b611bc6611db3565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152611c1760c082611789565b51902090565b60ff5f516020611f375f395f51905f525460401c1615611c3957565b631afcd79f60e31b5f5260045ffd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611cca579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15611cbf575f516001600160a01b03811615611cb557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015611d355780611ce7575050565b60018103611cfe5763f645eedf60e01b5f5260045ffd5b60028103611d19575063fce698f760e01b5f5260045260245ffd5b600314611d235750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b611d5161184a565b8051908115611d61576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015611d8e5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b611dbb611919565b8051908115611dcb576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015611d8e5790565b90611e1c5750805115611e0d57602081519101fd5b63d6bda27560e01b5f5260045ffd5b81511580611e4d575b611e2d575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b15611e2556fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10252c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0452c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212206ac66af44895aaa7b94c7b2d1adfc572d927cb8eb9458fa6d692d2d71ad490ba64736f6c634300081e0033",
    "sourceMap": "983:4029:0:-:0;;;;;;;1287:4:2;1279:13;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;7894:76:1;;-1:-1:-1;;;;;;;;;;;983:4029:0;;7983:34:1;7979:146;;-1:-1:-1;983:4029:0;;;;;;;;1279:13:2;983:4029:0;;;;;;;;;;;7979:146:1;-1:-1:-1;;;;;;983:4029:0;-1:-1:-1;;;;;983:4029:0;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;8085:29:1;;983:4029:0;;8085:29:1;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:1;;-1:-1:-1;7936:23:1;983:4029:0;;;",
    "deployedSourceMap": "983:4029:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;;;-1:-1:-1;;;;;983:4029:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;:::i;:::-;4945:20:3;983:4029:0;;:::i;:::-;4945:20:3;;:::i;:::-;:29;983:4029:0;;;;;;-1:-1:-1;983:4029:0;;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;2402:15:5;;:26;2398:97;;7051:25:24;7105:8;983:4029:0;;;;;;;;;;;;972:64:7;983:4029:0;;;;;;;;;;;;;;;;2536:78:5;983:4029:0;2536:78:5;;983:4029:0;1395:95:5;983:4029:0;;1395:95:5;983:4029:0;1395:95:5;;983:4029:0;;;;;;;;;1395:95:5;;983:4029:0;1395:95:5;983:4029:0;1395:95:5;;983:4029:0;;1395:95:5;;983:4029:0;;1395:95:5;;983:4029:0;;2536:78:5;;;983:4029:0;2536:78:5;;:::i;:::-;983:4029:0;2526:89:5;;4096:23:9;;:::i;:::-;3993:249:25;983:4029:0;3993:249:25;;-1:-1:-1;;;3993:249:25;;;;;;;;;;983:4029:0;;;3993:249:25;983:4029:0;;3993:249:25;;7051:25:24;:::i;:::-;7105:8;;;;;:::i;:::-;-1:-1:-1;;;;;983:4029:0;2739:15:5;;;2735:88;;10195:4:3;;;;;:::i;:::-;983:4029:0;2735:88:5;2777:35;;;;;983:4029:0;2777:35:5;983:4029:0;;;;;;2777:35:5;2398:97;2451:33;;;;983:4029:0;2451:33:5;983:4029:0;;;;2451:33:5;983:4029:0;;;;;;-1:-1:-1;;983:4029:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;4719:5:3;983:4029:0;;:::i;:::-;;;966:10:6;;4719:5:3;:::i;:::-;983:4029:0;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;2075:42;983:4029;;;;;;;;2083:10;:19;2075:42;:::i;:::-;1300:22;3662;983:4029;-1:-1:-1;;;;;;;;;;;983:4029:0;3662:22;:::i;:::-;:36;983:4029;;;;-1:-1:-1;;;;;983:4029:0;;8881:21:3;;8877:91;;8436:25;983:4029:0;;7576:23:3;983:4029:0;;-1:-1:-1;;;;;;;;;;;983:4029:0;7576:23:3;:::i;:::-;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;;;;;;;;;8436:25:3;-1:-1:-1;;;;;;;;;;;983:4029:0;1300:22;2264:18:4;;2260:99;;983:4029:0;2260:99:4;2309:35;;;983:4029:0;2309:35:4;983:4029:0;;1300:22;983:4029;;;;2309:35:4;8877:91:3;8925:32;;;983:4029:0;8925:32:3;983:4029:0;;;;;8925:32:3;983:4029:0;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;-1:-1:-1;983:4029:0;;;;;;;-1:-1:-1;983:4029:0;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;983:4029:0;;-1:-1:-1;983:4029:0;;;;;;;;-1:-1:-1;;983:4029:0;;;;2808:64:9;983:4029:0;5763:18:9;:43;;;983:4029:0;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5951:13:9;983:4029:0;;;;5986:4:9;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;5763:43:9;983:4029:0;5785:16:9;983:4029:0;5785:21:9;5763:43;;983:4029:0;;;;;;-1:-1:-1;;983:4029:0;;;;;;;3974:4;983:4029;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;:::i;:::-;2075:42;983:4029;;;;;2097:5;983:4029;;2083:10;:19;2075:42;:::i;:::-;-1:-1:-1;;;;;983:4029:0;3317:51;3325:23;;;3317:51;:::i;:::-;983:4029;;;-1:-1:-1;;;;;;983:4029:0;;;;;;-1:-1:-1;;;;;983:4029:0;;3456:39;;983:4029;3456:39;983:4029;;;;;;;-1:-1:-1;;983:4029:0;;;;-1:-1:-1;;;;;983:4029:0;;:::i;:::-;;;;972:64:7;983:4029:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;-1:-1:-1;;;;;983:4029:0;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;;;-1:-1:-1;;;;;983:4029:0;;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;;1583:2;983:4029;;;;;;;;;-1:-1:-1;;983:4029:0;;;;5206:6:2;-1:-1:-1;;;;;983:4029:0;5197:4:2;5189:23;5185:145;;983:4029:0;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;5185:145:2;4960:29;;;983:4029:0;5290:29:2;983:4029:0;;5290:29:2;983:4029:0;;;-1:-1:-1;;983:4029:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4783:6:2;983:4029:0;4774:4:2;4766:23;;;:120;;;;983:4029:0;4749:251:2;;;2075:42:0;983:4029;;;;;2097:5;983:4029;;2083:10;:19;2075:42;:::i;:::-;983:4029;;-1:-1:-1;;;6247:52:2;;-1:-1:-1;;;;;983:4029:0;;;;;;;;;6247:52:2;;983:4029:0;;6247:52:2;;;983:4029:0;-1:-1:-1;6243:437:2;;1805:47:14;;;;983:4029:0;6609:60:2;983:4029:0;;;;6609:60:2;6243:437;6341:40;-1:-1:-1;;;;;;;;;;;6341:40:2;;;6337:120;;1748:29:14;;;:34;1744:119;;-1:-1:-1;;;;;;;;;;;983:4029:0;;-1:-1:-1;;;;;;983:4029:0;;;;;2407:36:14;-1:-1:-1;;2407:36:14;983:4029:0;;2458:15:14;:11;;983:4029:0;4065:25:19;;4107:55;4065:25;;;;;;983:4029:0;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;4107:55:19;:::i;983:4029:0:-;;;4107:55:19;:::i;2454:148:14:-;6163:9;;;;6159:70;;983:4029:0;6159:70:14;6199:19;;;983:4029:0;6199:19:14;983:4029:0;;6199:19:14;1744:119;1805:47;;;983:4029:0;1805:47:14;983:4029:0;;;;1805:47:14;6337:120:2;6408:34;;;983:4029:0;6408:34:2;983:4029:0;;;;6408:34:2;6247:52;;;;983:4029:0;6247:52:2;;983:4029:0;6247:52:2;;;;;;983:4029:0;6247:52:2;;;:::i;:::-;;;983:4029:0;;;;;6247:52:2;;;;;;;-1:-1:-1;6247:52:2;;4766:120;-1:-1:-1;;;;;;;;;;;983:4029:0;-1:-1:-1;;;;;983:4029:0;4844:42:2;;;-1:-1:-1;4766:120:2;;;983:4029:0;;;;;;-1:-1:-1;;983:4029:0;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;4301:16:1;983:4029:0;;;;4724:16:1;;:34;;;;983:4029:0;4803:1:1;4788:16;:50;;;;983:4029:0;4853:13:1;:30;;;;983:4029:0;4849:91:1;;;-1:-1:-1;;983:4029:0;;4803:1:1;983:4029:0;-1:-1:-1;;;;;;;;;;;983:4029:0;;4977:67:1;;983:4029:0;-1:-1:-1;;;;;;983:4029:0;;2504:23;;;;;:47;;983:4029;2496:75;;;:::i;:::-;983:4029;;:::i;:::-;;;:::i;:::-;6891:76:1;;;:::i;:::-;;;:::i;:::-;983:4029:0;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;12007:17:3;;;983:4029:0;2755:7:3;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;12007:17:3;;;983:4029:0;2755:7:3;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;6891:76:1;;:::i;:::-;;;:::i;:::-;1300:22:0;910:69:4;983:4029:0;;;:::i;:::-;6891:76:1;;;:::i;:::-;983:4029:0;;;;;;;;;:::i;:::-;4803:1:1;983:4029:0;;-1:-1:-1;;;983:4029:0;;;;6891:76:1;;:::i;:::-;983:4029:0;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;12007:17:3;;;983:4029:0;2755:7:3;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;12007:17:3;;;983:4029:0;2755:7:3;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;2808:64:9;983:4029:0;;3904:16:9;983:4029:0;6891:76:1;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;4803:1;2499:73:8;983:4029:0;;;;;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;;;4803:1:1;983:4029:0;8877:91:3;;-1:-1:-1;;;;;;;;;;;983:4029:0;2974:20;983:4029;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;2974:20;983:4029;;;;;;;8436:25:3;983:4029:0;;;2974:20;983:4029;;8436:25:3;-1:-1:-1;;;;;;;;;;;983:4029:0;1300:22;2264:18:4;;2260:99;;983:4029:0;;3076:38;983:4029;3076:38;;;;5064:101:1;;983:4029:0;5064:101:1;983:4029:0;5140:14:1;983:4029:0;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;-1:-1:-1;;;;;;;;;;;983:4029:0;4803:1:1;983:4029:0;;5140:14:1;983:4029:0;;;;;;;;;;;;;;;;;-1:-1:-1;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;12007:17:3;;983:4029:0;;2755:7:3;983:4029:0;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4803:1:1;983:4029:0;;;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;12007:17:3;;983:4029:0;;2755:7:3;983:4029:0;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4803:1:1;983:4029:0;;;;;;-1:-1:-1;983:4029:0;;;;;;;;-1:-1:-1;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;12007:17:3;;983:4029:0;;2755:7:3;983:4029:0;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4803:1:1;983:4029:0;;;;;;-1:-1:-1;983:4029:0;;;;;;;;-1:-1:-1;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;12007:17:3;;983:4029:0;;2755:7:3;983:4029:0;;;;;;;;;;;;;;;;4803:1:1;983:4029:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4803:1:1;983:4029:0;;;;;;-1:-1:-1;983:4029:0;;;;2504:47;-1:-1:-1;;;;;;983:4029:0;;2531:20;;2504:47;;4977:67:1;-1:-1:-1;;983:4029:0;;;-1:-1:-1;;;;;;;;;;;983:4029:0;4977:67:1;;;4849:91;4906:23;;;983:4029:0;4906:23:1;983:4029:0;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;;;-1:-1:-1;4724:34:1;;983:4029:0;;;;;;-1:-1:-1;;983:4029:0;;;;;4096:23:9;;:::i;:::-;983:4029:0;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;;1300:22;983:4029;;;;;;;;;-1:-1:-1;;983:4029:0;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;983:4029:0;;;;;;:::i;:::-;;;:::i;:::-;;;4945:20:3;;;;:::i;:::-;966:10:6;-1:-1:-1;983:4029:0;;;;;;;;;;;;;-1:-1:-1;;11988:36:3;;11984:309;;983:4029:0;6276:5:3;;;;:::i;11984:309::-;12044:24;;;12040:130;;-1:-1:-1;;;;;983:4029:0;;11219:19:3;11215:89;;966:10:6;11317:21:3;11313:90;;6276:5;11412:20;;;;:::i;:::-;983:4029:0;;;;;966:10:6;983:4029:0;-1:-1:-1;983:4029:0;;;;;-1:-1:-1;983:4029:0;;;;;11984:309:3;;11313:90;11361:31;;;983:4029:0;11361:31:3;983:4029:0;;;;;11361:31:3;11215:89;11261:32;;;983:4029:0;11261:32:3;983:4029:0;;;;;11261:32:3;12040:130;12095:60;;;;;983:4029:0;12095:60:3;966:10:6;983:4029:0;;;;;;;;12095:60:3;983:4029:0;;;;;;-1:-1:-1;;983:4029:0;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;983:4029:0;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;;;;;;;-1:-1:-1;;983:4029:0;;;;10195:4:3;983:4029:0;;:::i;:::-;;;966:10:6;;10195:4:3;:::i;983:4029:0:-;;;;;;-1:-1:-1;;983:4029:0;;;;;;;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;;;-1:-1:-1;983:4029:0;;;;;;;-1:-1:-1;983:4029:0;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;983:4029:0;;;;;;;;-1:-1:-1;;983:4029:0;;;;:::o;:::-;;;;-1:-1:-1;;;;;983:4029:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;983:4029:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;983:4029:0;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;983:4029:0;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;983:4029:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;983:4029:0;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;;;;;;;;;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;983:4029:0;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;983:4029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;-1:-1:-1;;;;;983:4029:0;;;;;4945:13:3;983:4029:0;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;-1:-1:-1;;;983:4029:0;;;;;;;;;;;;;;;;;:::o;6683:300:3:-;-1:-1:-1;;;;;983:4029:0;;6766:18:3;;6762:86;;-1:-1:-1;;;;;983:4029:0;;6861:16:3;;6857:86;;983:4029:0;6782:1:3;983:4029:0;-1:-1:-1;;;;;;;;;;;983:4029:0;;;6782:1:3;983:4029:0;;7687:19:3;;;7683:115;;983:4029:0;8436:25:3;983:4029:0;;;;6782:1:3;983:4029:0;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;6782:1:3;983:4029:0;;;6782:1:3;983:4029:0;-1:-1:-1;;;;;;;;;;;983:4029:0;;;6782:1:3;983:4029:0;;;;;;;;;;;;8436:25:3;6683:300::o;7683:115::-;7733:50;;;;6782:1;7733:50;;983:4029:0;;;;;;6782:1:3;7733:50;6762:86;6807:30;;;6782:1;6807:30;6782:1;6807:30;983:4029:0;;6782:1:3;6807:30;11054:487;;-1:-1:-1;;;;;983:4029:0;;;11219:19:3;;11215:89;;-1:-1:-1;;;;;983:4029:0;;11317:21:3;;11313:90;;11493:31;11412:20;;983:4029:0;11412:20:3;;:::i;:::-;983:4029:0;-1:-1:-1;983:4029:0;;;;;-1:-1:-1;983:4029:0;;;;;;;11493:31:3;11054:487::o;4132:191:9:-;4245:17;;:::i;:::-;4264:20;;:::i;:::-;983:4029:0;;4223:92:9;;;;983:4029:0;2075:95:9;983:4029:0;;;2075:95:9;;983:4029:0;2075:95:9;;;983:4029:0;4286:13:9;2075:95;;;983:4029:0;4309:4:9;2075:95;;;983:4029:0;2075:95:9;4223:92;;;;;;:::i;:::-;983:4029:0;4213:103:9;;4132:191;:::o;7082:141:1:-;983:4029:0;-1:-1:-1;;;;;;;;;;;983:4029:0;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:1;;-1:-1:-1;7189:17:1;5203:1551:24;;;6283:66;6270:79;;6266:164;;983:4029:0;;;;;;-1:-1:-1;983:4029:0;;;;;;;;;;;;;;;;;;;6541:24:24;;;;;;;;;-1:-1:-1;6541:24:24;-1:-1:-1;;;;;983:4029:0;;6579:20:24;6575:113;;6698:49;-1:-1:-1;6698:49:24;-1:-1:-1;5203:1551:24;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:24;6541:24;6615:62;-1:-1:-1;6615:62:24;:::o;6541:24::-;983:4029:0;;;-1:-1:-1;983:4029:0;;;;;6266:164:24;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;983:4029:0;;;;;;7366:29:24;;;7411:7;;:::o;7362:444::-;983:4029:0;7462:38:24;;983:4029:0;;7523:23:24;;;7375:20;7523:23;983:4029:0;7375:20:24;7523:23;7458:348;7576:35;7567:44;;7576:35;;7634:46;;;;7375:20;7634:46;983:4029:0;;;7375:20:24;7634:46;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;7763:32;;;7375:20;7763:32;983:4029:0;;;7375:20:24;7763:32;983:4029:0;;;;7375:20:24;983:4029:0;;;;;7375:20:24;983:4029:0;7044:687:9;983:4029:0;;:::i;:::-;;;;7216:22:9;;;;983:4029:0;;7261:22:9;7254:29;:::o;7212:513::-;-1:-1:-1;;2808:64:9;983:4029:0;7589:15:9;;;;7624:17;:::o;7585:130::-;7680:20;7687:13;7680:20;:::o;7952:723::-;983:4029:0;;:::i;:::-;;;;8133:25:9;;;;983:4029:0;;8181:25:9;8174:32;:::o;8129:540::-;-1:-1:-1;;8493:16:9;983:4029:0;8527:18:9;;;;8565:20;:::o;4437:582:19:-;;4609:8;;-1:-1:-1;983:4029:0;;5690:21:19;:17;;5815:105;;;;;;5686:301;5957:19;;;5710:1;5957:19;;5710:1;5957:19;4605:408;983:4029:0;;4857:22:19;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:19;4933:24;;;-1:-1:-1;;;;;983:4029:0;;;;4933:24:19;983:4029:0;;;4933:24:19;4857:49;4883:18;;;:23;4857:49;",
    "sourcePath": "e:/Work/nebaPresale/neba token contract/neba/contracts/NEBAminimalSimple.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.30+commit.73712a01"
    },
    "ast": {
        "absolutePath": "e:/Work/nebaPresale/neba token contract/neba/contracts/NEBAminimalSimple.sol",
        "exportedSymbols": {
            "ContextUpgradeable": [
                1700
            ],
            "ECDSA": [
                5129
            ],
            "EIP712Upgradeable": [
                2284
            ],
            "ERC1967Utils": [
                2771
            ],
            "ERC20CappedUpgradeable": [
                1485
            ],
            "ERC20PermitUpgradeable": [
                1654
            ],
            "ERC20Upgradeable": [
                1340
            ],
            "IERC1822Proxiable": [
                2340
            ],
            "IERC20": [
                2859
            ],
            "IERC20Errors": [
                2382
            ],
            "IERC20Metadata": [
                2885
            ],
            "IERC20Permit": [
                2921
            ],
            "Initializable": [
                541
            ],
            "NEBAminimalSimple": [
                273
            ],
            "NoncesUpgradeable": [
                1811
            ],
            "ReentrancyGuardUpgradeable": [
                1940
            ],
            "UUPSUpgradeable": [
                723
            ]
        },
        "id": 274,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".22"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:24:0"
            },
            {
                "absolutePath": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "file": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 274,
                "sourceUnit": 1341,
                "src": "61:136:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
                "file": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 274,
                "sourceUnit": 1486,
                "src": "199:153:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
                "file": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 274,
                "sourceUnit": 1655,
                "src": "354:153:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "file": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 274,
                "sourceUnit": 724,
                "src": "509:135:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
                "file": "e:/Work/nebaPresale/neba token contract/neba/node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
                "id": 6,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 274,
                "sourceUnit": 1941,
                "src": "646:140:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 8,
                            "name": "ERC20Upgradeable",
                            "nameLocations": [
                                "1019:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1340,
                            "src": "1019:16:0"
                        },
                        "id": 9,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1019:16:0"
                    },
                    {
                        "baseName": {
                            "id": 10,
                            "name": "ERC20CappedUpgradeable",
                            "nameLocations": [
                                "1042:22:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1485,
                            "src": "1042:22:0"
                        },
                        "id": 11,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1042:22:0"
                    },
                    {
                        "baseName": {
                            "id": 12,
                            "name": "ERC20PermitUpgradeable",
                            "nameLocations": [
                                "1071:22:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1654,
                            "src": "1071:22:0"
                        },
                        "id": 13,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1071:22:0"
                    },
                    {
                        "baseName": {
                            "id": 14,
                            "name": "UUPSUpgradeable",
                            "nameLocations": [
                                "1100:15:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 723,
                            "src": "1100:15:0"
                        },
                        "id": 15,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1100:15:0"
                    },
                    {
                        "baseName": {
                            "id": 16,
                            "name": "ReentrancyGuardUpgradeable",
                            "nameLocations": [
                                "1122:26:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1940,
                            "src": "1122:26:0"
                        },
                        "id": 17,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1122:26:0"
                    }
                ],
                "canonicalName": "NEBAminimalSimple",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 7,
                    "nodeType": "StructuredDocumentation",
                    "src": "790:191:0",
                    "text": " @title NEBA Token Simple\n @dev Simple NEBA token contract deployable on Base Sepolia\n @notice This contract provides essential NEBA functionality without modular complexity"
                },
                "fullyImplemented": true,
                "id": 273,
                "linearizedBaseContracts": [
                    273,
                    1940,
                    723,
                    2340,
                    1654,
                    1811,
                    2284,
                    2330,
                    2921,
                    1485,
                    1340,
                    2382,
                    2885,
                    2859,
                    1700,
                    541
                ],
                "name": "NEBAminimalSimple",
                "nameLocation": "992:17:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": true,
                        "documentation": {
                            "id": 18,
                            "nodeType": "StructuredDocumentation",
                            "src": "1207:50:0",
                            "text": "@notice Maximum total supply: 1 billion tokens"
                        },
                        "functionSelector": "32cb6b0c",
                        "id": 25,
                        "mutability": "constant",
                        "name": "MAX_SUPPLY",
                        "nameLocation": "1287:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1263:59:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 19,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1263:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000000000"
                            },
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                                "hexValue": "315f3030305f3030305f303030",
                                "id": 20,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1300:13:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                },
                                "value": "1_000_000_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                                "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                },
                                "id": 23,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 21,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1316:2:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 22,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1320:2:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                },
                                "src": "1316:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                }
                            },
                            "src": "1300:22:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000000000"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "documentation": {
                            "id": 26,
                            "nodeType": "StructuredDocumentation",
                            "src": "1335:22:0",
                            "text": "@notice Token name"
                        },
                        "functionSelector": "18821400",
                        "id": 29,
                        "mutability": "constant",
                        "name": "TOKEN_NAME",
                        "nameLocation": "1386:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1363:48:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 27,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1363:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": {
                            "hexValue": "4e45424120546f6b656e",
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1399:12:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_82b445f4ede3c69cb348b965c7dca97c2ec7658cde3e4fd8baefb6139c5d3088",
                                "typeString": "literal_string \"NEBA Token\""
                            },
                            "value": "NEBA Token"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "documentation": {
                            "id": 30,
                            "nodeType": "StructuredDocumentation",
                            "src": "1424:24:0",
                            "text": "@notice Token symbol"
                        },
                        "functionSelector": "2a905318",
                        "id": 33,
                        "mutability": "constant",
                        "name": "TOKEN_SYMBOL",
                        "nameLocation": "1477:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1454:45:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 31,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1454:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": {
                            "hexValue": "244e454241",
                            "id": 32,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1492:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04dc242102e457ec4b14de2a4d728fb3eeaa7f598cacad2a756031b2d0d526fc",
                                "typeString": "literal_string \"$NEBA\""
                            },
                            "value": "$NEBA"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "documentation": {
                            "id": 34,
                            "nodeType": "StructuredDocumentation",
                            "src": "1512:26:0",
                            "text": "@notice Token decimals"
                        },
                        "functionSelector": "5b7f415c",
                        "id": 37,
                        "mutability": "constant",
                        "name": "TOKEN_DECIMALS",
                        "nameLocation": "1566:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1544:41:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 35,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1544:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "value": {
                            "hexValue": "3138",
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1583:2:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                            },
                            "value": "18"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "documentation": {
                            "id": 38,
                            "nodeType": "StructuredDocumentation",
                            "src": "1650:28:0",
                            "text": "@notice Treasury address"
                        },
                        "functionSelector": "61d027b3",
                        "id": 40,
                        "mutability": "mutable",
                        "name": "treasury",
                        "nameLocation": "1699:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1684:23:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 39,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1684:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "documentation": {
                            "id": 41,
                            "nodeType": "StructuredDocumentation",
                            "src": "1720:25:0",
                            "text": "@notice Admin address"
                        },
                        "functionSelector": "f851a440",
                        "id": 43,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "1766:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1751:20:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 42,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1751:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a",
                        "id": 49,
                        "name": "TreasuryUpdated",
                        "nameLocation": "1833:15:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 48,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 45,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "oldTreasury",
                                    "nameLocation": "1865:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49,
                                    "src": "1849:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 44,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1849:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 47,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "newTreasury",
                                    "nameLocation": "1894:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49,
                                    "src": "1878:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 46,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1878:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1848:58:0"
                        },
                        "src": "1827:80:0"
                    },
                    {
                        "errorSelector": "e6c4247b",
                        "id": 51,
                        "name": "InvalidAddress",
                        "nameLocation": "1968:14:0",
                        "nodeType": "ErrorDefinition",
                        "parameters": {
                            "id": 50,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1982:2:0"
                        },
                        "src": "1962:23:0"
                    },
                    {
                        "body": {
                            "id": 62,
                            "nodeType": "Block",
                            "src": "2064:73:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 57,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 54,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2083:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 55,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "2087:6:0",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2083:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 56,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 43,
                                                    "src": "2097:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "2083:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4f6e6c792061646d696e",
                                                "id": 58,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2104:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
                                                    "typeString": "literal_string \"Only admin\""
                                                },
                                                "value": "Only admin"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
                                                    "typeString": "literal_string \"Only admin\""
                                                }
                                            ],
                                            "id": 53,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2075:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 59,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2075:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 60,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2075:42:0"
                                },
                                {
                                    "id": 61,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "2128:1:0"
                                }
                            ]
                        },
                        "id": 63,
                        "name": "onlyAdmin",
                        "nameLocation": "2052:9:0",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 52,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2061:2:0"
                        },
                        "src": "2043:94:0",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 70,
                            "nodeType": "Block",
                            "src": "2268:41:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 67,
                                            "name": "_disableInitializers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 495,
                                            "src": "2279:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2279:22:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 69,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2279:22:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 64,
                            "nodeType": "StructuredDocumentation",
                            "src": "2200:48:0",
                            "text": "@custom:oz-upgrades-unsafe-allow constructor"
                        },
                        "id": 71,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 65,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2265:2:0"
                        },
                        "returnParameters": {
                            "id": 66,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2268:0:0"
                        },
                        "scope": 273,
                        "src": "2254:55:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 146,
                            "nodeType": "Block",
                            "src": "2485:637:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 94,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 87,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 82,
                                                        "name": "_treasury",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 74,
                                                        "src": "2504:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "!=",
                                                    "rightExpression": {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "30",
                                                                "id": 85,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2525:1:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 84,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "2517:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 83,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "2517:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 86,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2517:10:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "2504:23:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 93,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 88,
                                                        "name": "_admin",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 76,
                                                        "src": "2531:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "!=",
                                                    "rightExpression": {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "30",
                                                                "id": 91,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2549:1:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 90,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "2541:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 89,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "2541:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 92,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2541:10:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "2531:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "2504:47:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e76616c69642061646472657373",
                                                "id": 95,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2553:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                                    "typeString": "literal_string \"Invalid address\""
                                                },
                                                "value": "Invalid address"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                                    "typeString": "literal_string \"Invalid address\""
                                                }
                                            ],
                                            "id": 81,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2496:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 96,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2496:75:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 97,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2496:75:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 99,
                                                "name": "TOKEN_NAME",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "2605:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "id": 100,
                                                "name": "TOKEN_SYMBOL",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 33,
                                                "src": "2617:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 98,
                                            "name": "__ERC20_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 791,
                                            "src": "2592:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory,string memory)"
                                            }
                                        },
                                        "id": 101,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2592:38:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 102,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2592:38:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 104,
                                                "name": "MAX_SUPPLY",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25,
                                                "src": "2660:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 103,
                                            "name": "__ERC20Capped_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1391,
                                            "src": "2641:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2641:30:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 106,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2641:30:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 108,
                                                "name": "TOKEN_NAME",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "2701:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 107,
                                            "name": "__ERC20Permit_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1541,
                                            "src": "2682:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory)"
                                            }
                                        },
                                        "id": 109,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2682:30:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 110,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2682:30:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 111,
                                            "name": "__UUPSUpgradeable_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 595,
                                            "src": "2723:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 112,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2723:24:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 113,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2723:24:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 114,
                                            "name": "__ReentrancyGuard_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1851,
                                            "src": "2758:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2758:24:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 116,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2758:24:0"
                                },
                                {
                                    "expression": {
                                        "id": 119,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 117,
                                            "name": "treasury",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 40,
                                            "src": "2803:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 118,
                                            "name": "_treasury",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74,
                                            "src": "2814:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2803:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 120,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2803:20:0"
                                },
                                {
                                    "expression": {
                                        "id": 123,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 121,
                                            "name": "admin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 43,
                                            "src": "2834:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 122,
                                            "name": "_admin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 76,
                                            "src": "2842:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2834:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 124,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2834:14:0"
                                },
                                {
                                    "assignments": [
                                        126
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 126,
                                            "mutability": "mutable",
                                            "name": "initialSupply",
                                            "nameLocation": "2958:13:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 146,
                                            "src": "2950:21:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 125,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2950:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 132,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                            "typeString": "int_const 100000000000000000000000000"
                                        },
                                        "id": 131,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "hexValue": "3130305f3030305f303030",
                                            "id": 127,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2974:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100000000_by_1",
                                                "typeString": "int_const 100000000"
                                            },
                                            "value": "100_000_000"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                            },
                                            "id": 130,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "hexValue": "3130",
                                                "id": 128,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2988:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                                "hexValue": "3138",
                                                "id": 129,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2992:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_18_by_1",
                                                    "typeString": "int_const 18"
                                                },
                                                "value": "18"
                                            },
                                            "src": "2988:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                            }
                                        },
                                        "src": "2974:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                            "typeString": "int_const 100000000000000000000000000"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2950:44:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 134,
                                                "name": "treasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40,
                                                "src": "3026:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 135,
                                                "name": "initialSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 126,
                                                "src": "3036:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 133,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1172,
                                            "src": "3020:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3020:30:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 137,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3020:30:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "30",
                                                        "id": 141,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3100:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        }
                                                    ],
                                                    "id": 140,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3092:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 139,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3092:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 142,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3092:10:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 143,
                                                "name": "_treasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 74,
                                                "src": "3104:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 138,
                                            "name": "TreasuryUpdated",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49,
                                            "src": "3076:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                "typeString": "function (address,address)"
                                            }
                                        },
                                        "id": 144,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3076:38:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 145,
                                    "nodeType": "EmitStatement",
                                    "src": "3071:43:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 72,
                            "nodeType": "StructuredDocumentation",
                            "src": "2317:63:0",
                            "text": " @notice Initialize the NEBA token contract"
                        },
                        "functionSelector": "485cc955",
                        "id": 147,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 79,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 78,
                                    "name": "initializer",
                                    "nameLocations": [
                                        "2473:11:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 381,
                                    "src": "2473:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2473:11:0"
                            }
                        ],
                        "name": "initialize",
                        "nameLocation": "2395:10:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 77,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74,
                                    "mutability": "mutable",
                                    "name": "_treasury",
                                    "nameLocation": "2424:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 147,
                                    "src": "2416:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 73,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2416:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 76,
                                    "mutability": "mutable",
                                    "name": "_admin",
                                    "nameLocation": "2452:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 147,
                                    "src": "2444:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 75,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2444:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2405:60:0"
                        },
                        "returnParameters": {
                            "id": 80,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2485:0:0"
                        },
                        "scope": 273,
                        "src": "2386:736:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 178,
                            "nodeType": "Block",
                            "src": "3306:197:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 161,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 156,
                                                    "name": "_treasury",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 150,
                                                    "src": "3325:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 159,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3346:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 158,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3338:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 157,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3338:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 160,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3338:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3325:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e76616c69642061646472657373",
                                                "id": 162,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3350:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                                    "typeString": "literal_string \"Invalid address\""
                                                },
                                                "value": "Invalid address"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                                    "typeString": "literal_string \"Invalid address\""
                                                }
                                            ],
                                            "id": 155,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3317:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 163,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3317:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 164,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3317:51:0"
                                },
                                {
                                    "assignments": [
                                        166
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 166,
                                            "mutability": "mutable",
                                            "name": "oldTreasury",
                                            "nameLocation": "3387:11:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 178,
                                            "src": "3379:19:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 165,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3379:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 168,
                                    "initialValue": {
                                        "id": 167,
                                        "name": "treasury",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40,
                                        "src": "3401:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3379:30:0"
                                },
                                {
                                    "expression": {
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 169,
                                            "name": "treasury",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 40,
                                            "src": "3420:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 170,
                                            "name": "_treasury",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 150,
                                            "src": "3431:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "3420:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 172,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3420:20:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 174,
                                                "name": "oldTreasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 166,
                                                "src": "3472:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 175,
                                                "name": "_treasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 150,
                                                "src": "3485:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 173,
                                            "name": "TreasuryUpdated",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49,
                                            "src": "3456:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                "typeString": "function (address,address)"
                                            }
                                        },
                                        "id": 176,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3456:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 177,
                                    "nodeType": "EmitStatement",
                                    "src": "3451:44:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 148,
                            "nodeType": "StructuredDocumentation",
                            "src": "3186:52:0",
                            "text": " @notice Update treasury address"
                        },
                        "functionSelector": "7f51bb1f",
                        "id": 179,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 153,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 152,
                                    "name": "onlyAdmin",
                                    "nameLocations": [
                                        "3296:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 63,
                                    "src": "3296:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3296:9:0"
                            }
                        ],
                        "name": "updateTreasury",
                        "nameLocation": "3253:14:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 151,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 150,
                                    "mutability": "mutable",
                                    "name": "_treasury",
                                    "nameLocation": "3276:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 179,
                                    "src": "3268:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 149,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3268:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3267:19:0"
                        },
                        "returnParameters": {
                            "id": 154,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3306:0:0"
                        },
                        "scope": 273,
                        "src": "3244:259:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 202,
                            "nodeType": "Block",
                            "src": "3643:120:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 193,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 191,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 188,
                                                            "name": "totalSupply",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 876,
                                                            "src": "3662:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                "typeString": "function () view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 189,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3662:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 190,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 182,
                                                        "src": "3678:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "3662:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "id": 192,
                                                    "name": "MAX_SUPPLY",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25,
                                                    "src": "3688:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3662:36:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "45786365656473206d617820737570706c79",
                                                "id": 194,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3700:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
                                                    "typeString": "literal_string \"Exceeds max supply\""
                                                },
                                                "value": "Exceeds max supply"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
                                                    "typeString": "literal_string \"Exceeds max supply\""
                                                }
                                            ],
                                            "id": 187,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3654:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3654:67:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 196,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3654:67:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 198,
                                                "name": "treasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40,
                                                "src": "3738:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 199,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 182,
                                                "src": "3748:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 197,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1172,
                                            "src": "3732:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 200,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3732:23:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 201,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3732:23:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 180,
                            "nodeType": "StructuredDocumentation",
                            "src": "3515:63:0",
                            "text": " @notice Mint additional tokens to treasury"
                        },
                        "functionSelector": "a65948a3",
                        "id": 203,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 185,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 184,
                                    "name": "onlyAdmin",
                                    "nameLocations": [
                                        "3633:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 63,
                                    "src": "3633:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3633:9:0"
                            }
                        ],
                        "name": "mintToTreasury",
                        "nameLocation": "3593:14:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 183,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 182,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "3616:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 203,
                                    "src": "3608:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 181,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3608:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3607:16:0"
                        },
                        "returnParameters": {
                            "id": 186,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3643:0:0"
                        },
                        "scope": 273,
                        "src": "3584:179:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 211,
                            "nodeType": "Block",
                            "src": "3956:30:0",
                            "statements": [
                                {
                                    "expression": {
                                        "hexValue": "74727565",
                                        "id": 209,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3974:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 208,
                                    "id": 210,
                                    "nodeType": "Return",
                                    "src": "3967:11:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 204,
                            "nodeType": "StructuredDocumentation",
                            "src": "3826:69:0",
                            "text": " @notice Confirms that the token cap is immutable"
                        },
                        "functionSelector": "809c585c",
                        "id": 212,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "isCapImmutable",
                        "nameLocation": "3910:14:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 205,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3924:2:0"
                        },
                        "returnParameters": {
                            "id": 208,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 207,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 212,
                                    "src": "3950:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 206,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3950:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3949:6:0"
                        },
                        "scope": 273,
                        "src": "3901:85:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "baseFunctions": [
                            1436
                        ],
                        "body": {
                            "id": 221,
                            "nodeType": "Block",
                            "src": "4118:36:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 219,
                                        "name": "MAX_SUPPLY",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "4136:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 218,
                                    "id": 220,
                                    "nodeType": "Return",
                                    "src": "4129:17:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 213,
                            "nodeType": "StructuredDocumentation",
                            "src": "3998:60:0",
                            "text": " @notice Returns the immutable cap value"
                        },
                        "functionSelector": "355274ea",
                        "id": 222,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "cap",
                        "nameLocation": "4073:3:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 215,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4091:8:0"
                        },
                        "parameters": {
                            "id": 214,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4076:2:0"
                        },
                        "returnParameters": {
                            "id": 218,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 217,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 222,
                                    "src": "4109:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 216,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4109:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4108:9:0"
                        },
                        "scope": 273,
                        "src": "4064:90:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            677
                        ],
                        "body": {
                            "id": 231,
                            "nodeType": "Block",
                            "src": "4397:77:0",
                            "statements": []
                        },
                        "documentation": {
                            "id": 223,
                            "nodeType": "StructuredDocumentation",
                            "src": "4220:53:0",
                            "text": " @notice Authorize upgrade (UUPS)"
                        },
                        "id": 232,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 229,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 228,
                                    "name": "onlyAdmin",
                                    "nameLocations": [
                                        "4381:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 63,
                                    "src": "4381:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "4381:9:0"
                            }
                        ],
                        "name": "_authorizeUpgrade",
                        "nameLocation": "4288:17:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 227,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4362:8:0"
                        },
                        "parameters": {
                            "id": 226,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 225,
                                    "mutability": "mutable",
                                    "name": "newImplementation",
                                    "nameLocation": "4314:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 232,
                                    "src": "4306:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 224,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4306:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4305:27:0"
                        },
                        "returnParameters": {
                            "id": 230,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4397:0:0"
                        },
                        "scope": 273,
                        "src": "4279:195:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            1139,
                            1484
                        ],
                        "body": {
                            "id": 252,
                            "nodeType": "Block",
                            "src": "4682:49:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 247,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 234,
                                                "src": "4707:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 248,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 236,
                                                "src": "4713:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 249,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 238,
                                                "src": "4717:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 244,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4693:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_NEBAminimalSimple_$273_$",
                                                    "typeString": "type(contract super NEBAminimalSimple)"
                                                }
                                            },
                                            "id": 246,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4699:7:0",
                                            "memberName": "_update",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1484,
                                            "src": "4693:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 250,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4693:30:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 251,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4693:30:0"
                                }
                            ]
                        },
                        "id": 253,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_update",
                        "nameLocation": "4550:7:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 242,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 240,
                                    "name": "ERC20Upgradeable",
                                    "nameLocations": [
                                        "4635:16:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1340,
                                    "src": "4635:16:0"
                                },
                                {
                                    "id": 241,
                                    "name": "ERC20CappedUpgradeable",
                                    "nameLocations": [
                                        "4653:22:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1485,
                                    "src": "4653:22:0"
                                }
                            ],
                            "src": "4626:50:0"
                        },
                        "parameters": {
                            "id": 239,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 234,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "4566:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 253,
                                    "src": "4558:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 233,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4558:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 236,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "4580:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 253,
                                    "src": "4572:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 235,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4572:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 238,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "4592:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 253,
                                    "src": "4584:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 237,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4584:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4557:41:0"
                        },
                        "returnParameters": {
                            "id": 243,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4682:0:0"
                        },
                        "scope": 273,
                        "src": "4541:190:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            1643
                        ],
                        "body": {
                            "id": 267,
                            "nodeType": "Block",
                            "src": "4878:45:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 264,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 255,
                                                "src": "4909:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 262,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "4896:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_NEBAminimalSimple_$273_$",
                                                    "typeString": "type(contract super NEBAminimalSimple)"
                                                }
                                            },
                                            "id": 263,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4902:6:0",
                                            "memberName": "nonces",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1643,
                                            "src": "4896:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view returns (uint256)"
                                            }
                                        },
                                        "id": 265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4896:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 261,
                                    "id": 266,
                                    "nodeType": "Return",
                                    "src": "4889:26:0"
                                }
                            ]
                        },
                        "functionSelector": "7ecebe00",
                        "id": 268,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "nonces",
                        "nameLocation": "4752:6:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 258,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 257,
                                    "name": "ERC20PermitUpgradeable",
                                    "nameLocations": [
                                        "4822:22:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1654,
                                    "src": "4822:22:0"
                                }
                            ],
                            "src": "4813:32:0"
                        },
                        "parameters": {
                            "id": 256,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 255,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "4767:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 268,
                                    "src": "4759:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 254,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4759:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4758:15:0"
                        },
                        "returnParameters": {
                            "id": 261,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 260,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 268,
                                    "src": "4864:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 259,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4864:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4863:9:0"
                        },
                        "scope": 273,
                        "src": "4743:180:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "__gap",
                        "nameLocation": "5003:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "4983:25:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$50_storage",
                            "typeString": "uint256[50]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 269,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4983:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            },
                            "id": 271,
                            "length": {
                                "hexValue": "3530",
                                "id": 270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4991:2:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                },
                                "value": "50"
                            },
                            "nodeType": "ArrayTypeName",
                            "src": "4983:11:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                                "typeString": "uint256[50]"
                            }
                        },
                        "visibility": "private"
                    }
                ],
                "scope": 274,
                "src": "983:4029:0",
                "usedErrors": [
                    51,
                    290,
                    293,
                    568,
                    573,
                    1373,
                    1378,
                    1520,
                    1527,
                    1714,
                    1842,
                    2352,
                    2357,
                    2362,
                    2371,
                    2376,
                    2381,
                    2497,
                    2510,
                    2931,
                    3194,
                    4792,
                    4797,
                    4802
                ],
                "usedEvents": [
                    49,
                    298,
                    2292,
                    2310,
                    2793,
                    2802
                ]
            }
        ],
        "src": "33:4981:0"
    },
    "functionHashes": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "MAX_SUPPLY()": "32cb6b0c",
        "TOKEN_DECIMALS()": "5b7f415c",
        "TOKEN_NAME()": "18821400",
        "TOKEN_SYMBOL()": "2a905318",
        "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
        "admin()": "f851a440",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "cap()": "355274ea",
        "decimals()": "313ce567",
        "eip712Domain()": "84b0196e",
        "initialize(address,address)": "485cc955",
        "isCapImmutable()": "809c585c",
        "mintToTreasury(uint256)": "a65948a3",
        "name()": "06fdde03",
        "nonces(address)": "7ecebe00",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
        "proxiableUUID()": "52d1902d",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "treasury()": "61d027b3",
        "updateTreasury(address)": "7f51bb1f",
        "upgradeToAndCall(address,bytes)": "4f1ef286"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1615200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "DOMAIN_SEPARATOR()": "infinite",
            "MAX_SUPPLY()": "299",
            "TOKEN_DECIMALS()": "431",
            "TOKEN_NAME()": "529",
            "TOKEN_SYMBOL()": "573",
            "UPGRADE_INTERFACE_VERSION()": "942",
            "admin()": "2841",
            "allowance(address,address)": "3137",
            "approve(address,uint256)": "24422",
            "balanceOf(address)": "infinite",
            "cap()": "321",
            "decimals()": "277",
            "eip712Domain()": "infinite",
            "initialize(address,address)": "infinite",
            "isCapImmutable()": "541",
            "mintToTreasury(uint256)": "infinite",
            "name()": "infinite",
            "nonces(address)": "2750",
            "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
            "proxiableUUID()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "infinite",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "treasury()": "2579",
            "updateTreasury(address)": "28570",
            "upgradeToAndCall(address,bytes)": "infinite"
        },
        "internal": {
            "_authorizeUpgrade(address)": "infinite",
            "_update(address,address,uint256)": "infinite"
        }
    }
}